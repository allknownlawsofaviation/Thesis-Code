[
  {
    "index": 12,
    "id": "CVE-2012-4508",
    "commit_id": "dee1f973ca341c266229faa5a1a5bb268bed3531",
    "added_lines": [
      "#define EXT4_EXT_DATA_VALID1\t0x8",
      "#define EXT4_EXT_DATA_VALID2\t0x10",
      "BUG_ON((split_flag & (EXT4_EXT_DATA_VALID1 | EXT4_EXT_DATA_VALID2)) ==",
      "(EXT4_EXT_DATA_VALID1 | EXT4_EXT_DATA_VALID2",
      "if (split_flag & (EXT4_EXT_DATA_VALID1|EXT4_EXT_DATA_VALID2))",
      "if (split_flag & EXT4_EXT_DATA_VALID1",
      "err = ext4_ext_zeroout(inode, ex2",
      "else",
      "err = ext4_ext_zeroout(inode, ex",
      "} else",
      "err = ext4_ext_zeroout(inode, &orig_ex",
      "split_flag1 = split_flag & EXT4_EXT_MAY_ZEROOUT",
      "if (split_flag & EXT4_EXT_DATA_VALID2",
      "split_flag1 |= EXT4_EXT_DATA_VALID1",
      "split_flag1 = split_flag & (EXT4_EXT_MAY_ZEROOUT |",
      "EXT4_EXT_DATA_VALID2",
      "if (flags & EXT4_GET_BLOCKS_CONVERT",
      "split_flag |= EXT4_EXT_DATA_VALID2",
      "struct inode *inode,",
      "struct ext4_map_blocks *map,",
      "struct ext4_ext_path *path",
      "ext4_lblk_t ee_block",
      "unsigned int ee_len",
      "ee_block = le32_to_cpu(ex->ee_block",
      "ee_len = ext4_ext_get_actual_len(ex",
      "(unsigned long long)ee_block, ee_len",
      "if (ee_block != map->m_lblk || ee_len > map->m_len)",
      "err = ext4_split_unwritten_extents(handle, inode, map, path,",
      "EXT4_GET_BLOCKS_CONVERT",
      "if (err < 0",
      "goto out",
      "ext4_ext_drop_refs(path",
      "path = ext4_ext_find_extent(inode, map->m_lblk, path",
      "if (IS_ERR(path))",
      "err = PTR_ERR(path",
      "goto out",
      "depth = ext_depth(inode",
      "ex = path[depth].p_ext",
      "ret = ext4_convert_unwritten_extents_endio(handle, inode, map,"
    ],
    "removed_lines": [
      "err = ext4_ext_zeroout(inode, &orig_ex",
      "split_flag1 = split_flag & EXT4_EXT_MAY_ZEROOUT ?",
      "EXT4_EXT_MAY_ZEROOUT : 0",
      "split_flag1 = split_flag & EXT4_EXT_MAY_ZEROOUT ?",
      "EXT4_EXT_MAY_ZEROOUT : 0",
      "struct inode *inode,",
      "struct ext4_ext_path *path",
      "(unsigned long long)le32_to_cpu(ex->ee_block),",
      "ext4_ext_get_actual_len(ex",
      "ret = ext4_convert_unwritten_extents_endio(handle, inode,"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 20,
    "id": "CVE-2012-3430",
    "commit_id": "06b6a1cf6e776426766298d055bb3991957d90a7",
    "added_lines": [
      "msg->msg_namelen = 0",
      "msg->msg_namelen = sizeof(*sin"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 57,
    "id": "CVE-2012-0957",
    "commit_id": "2702b1526c7278c4d65d78de209a465d4de2885e",
    "added_lines": [
      "static int override_release(char __user *release, size_t len",
      "const char *rest = UTS_RELEASE",
      "char buf[65] = { 0",
      "size_t copy",
      "copy = min(sizeof(buf), max_t(size_t, 1, len",
      "copy = scnprintf(buf, copy, \"2.6.%u%s\", v, rest",
      "ret = copy_to_user(release, buf, copy + 1"
    ],
    "removed_lines": [
      "static int override_release(char __user *release, int len",
      "char buf[65]",
      "char *rest = UTS_RELEASE",
      "snprintf(buf, len, \"2.6.%u%s\", v, rest",
      "ret = copy_to_user(release, buf, len"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "uname system call"
    ]
  },
  {
    "index": 66,
    "id": "CVE-2012-0037",
    "commit_id": "a676f235309a59d4aa78eeffd2574ae5d341fcb0",
    "added_lines": [
      "case RAPTOR_OPTION_LOAD_EXTERNAL_ENTITIES:",
      "case RAPTOR_OPTION_LOAD_EXTERNAL_ENTITIES:"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 92,
    "id": "CVE-2011-2898",
    "commit_id": "13fcb7bd322164c67926ffe272846d4860196dc6",
    "added_lines": [
      "h.h2->tp_padding = 0",
      "aux.tp_padding = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly restrict user-space access to certain packet data structures associated with VLAN Tag Control Information"
    ]
  },
  {
    "index": 93,
    "id": "CVE-2011-2707",
    "commit_id": "0d0138ebe24b94065580bd2601f8bb7eb6152f56",
    "added_lines": [
      "if (!access_ok(VERIFY_READ, uregs, sizeof(elf_xtregs_t",
      "return -EFAULT"
    ],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation",
      "Improper Input Validation"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not validate user-space pointers",
      "does not validate user-space pointers"
    ]
  },
  {
    "index": 100,
    "id": "CVE-2011-2494",
    "commit_id": "1a51410abe7d0ee4b1d112780f46df87d3621043",
    "added_lines": [
      ".flags\t\t= GENL_ADMIN_PERM,"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 114,
    "id": "CVE-2011-1160",
    "commit_id": "1309d7afbed112f0e8e90be9af975550caa0076b",
    "added_lines": [
      "chip->data_buffer = kzalloc(TPM_BUFSIZE, GFP_KERNEL"
    ],
    "removed_lines": [
      "chip->data_buffer = kmalloc(TPM_BUFSIZE * sizeof(u8), GFP_KERNEL"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 115,
    "id": "CVE-2011-1080",
    "commit_id": "d846f71195d57b0bbb143382647c2c6638b04c5a",
    "added_lines": [
      "tmp.name[sizeof(tmp.name) - 1] = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "'0' character",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 117,
    "id": "CVE-2011-1078",
    "commit_id": "c4c896e1471aec3b004a693c689f60be3b17ac86",
    "added_lines": [
      "memset(&cinfo, 0, sizeof(cinfo"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 164,
    "id": "CVE-2013-4516",
    "commit_id": "a8b33654b1e3b0c74d4a1fed041c9aae50b3c427",
    "added_lines": [
      "struct serial_icounter_struct icount ="
    ],
    "removed_lines": [
      "struct serial_icounter_struct icount"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 165,
    "id": "CVE-2013-4515",
    "commit_id": "8d1e72250c847fa96498ec029891de4dc638a5ba",
    "added_lines": [
      "memset(&DevInfo, 0, sizeof(DevInfo"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 172,
    "id": "CVE-2013-4350",
    "commit_id": "95ee62083cb6453e056562d91f597552021e6ae7",
    "added_lines": [
      "struct flowi6 *fl6 = &transport->fl.u.ip6",
      "skb->len, &fl6->saddr, &fl6->daddr",
      "IP6_ECN_flow_xmit(sk, fl6->flowlabel",
      "SCTP_INC_STATS(sock_net(sk), SCTP_MIB_OUTSCTPPACKS",
      "return ip6_xmit(sk, skb, fl6, np->opt, np->tclass",
      "struct ipv6_pinfo *np = inet6_sk(sk",
      "struct in6_addr *final_p, final",
      "final_p = fl6_update_dst(fl6, np->opt, &final",
      "dst = ip6_dst_lookup_flow(sk, fl6, final_p, false",
      "final_p = fl6_update_dst(fl6, np->opt, &final",
      "dst = ip6_dst_lookup_flow(sk, fl6, final_p, false"
    ],
    "removed_lines": [
      "struct flowi6 fl6",
      "memset(&fl6, 0, sizeof(fl6",
      "fl6.flowi6_proto = sk->sk_protocol",
      "fl6.daddr = transport->ipaddr.v6.sin6_addr",
      "fl6.saddr = transport->saddr.v6.sin6_addr",
      "fl6.flowlabel = np->flow_label",
      "IP6_ECN_flow_xmit(sk, fl6.flowlabel",
      "if (ipv6_addr_type(&fl6.saddr) & IPV6_ADDR_LINKLOCAL",
      "fl6.flowi6_oif = transport->saddr.v6.sin6_scope_id",
      "else",
      "fl6.flowi6_oif = sk->sk_bound_dev_if",
      "if (np->opt && np->opt->srcrt)",
      "struct rt0_hdr *rt0 = (struct rt0_hdr *) np->opt->srcrt",
      "fl6.daddr = *rt0->addr",
      "skb->len, &fl6.saddr, &fl6.daddr",
      "SCTP_INC_STATS(sock_net(sk), SCTP_MIB_OUTSCTPPACKS",
      "return ip6_xmit(sk, skb, &fl6, np->opt, np->tclass",
      "dst = ip6_dst_lookup_flow(sk, fl6, NULL, false",
      "dst = ip6_dst_lookup_flow(sk, fl6, NULL, false"
    ],
    "cause": [
      "Cryptographic Weakness"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "uses data structures and function calls that do not trigger an intended configuration of IPsec encryption"
    ]
  },
  {
    "index": 174,
    "id": "CVE-2013-4299",
    "commit_id": "e9c6a182649f4259db704ae15a91ac820e63b0ca",
    "added_lines": [
      "static void skip_metadata(struct pstore *ps",
      "uint32_t stride = ps->exceptions_per_area + 1",
      "chunk_t next_free = ps->next_free",
      "if (sector_div(next_free, stride) == NUM_SNAPSHOT_HDR_CHUNKS",
      "ps->next_free++",
      "skip_metadata(ps",
      "ps->next_free++",
      "skip_metadata(ps"
    ],
    "removed_lines": [
      "uint32_t stride",
      "chunk_t next_free",
      "stride = (ps->exceptions_per_area + 1",
      "next_free = ++ps->next_free",
      "if (sector_div(next_free, stride) == 1",
      "ps->next_free++"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 6.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 193,
    "id": "CVE-2013-3237",
    "commit_id": "d5e0d0f607a7a029c6563a0470d88255c89a8d11",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 194,
    "id": "CVE-2013-3236",
    "commit_id": "680d04e0ba7e926233e3b9cee59125ce181f66ba",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [
      "msg->msg_namelen = 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not properly initialize a certain length variable"
    ]
  },
  {
    "index": 195,
    "id": "CVE-2013-3235",
    "commit_id": "60085c3d009b0df252547adb336d1ccca5ce52ec",
    "added_lines": [
      "memset(&addr->addr, 0, sizeof(addr->addr",
      "m->msg_namelen = 0",
      "m->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure",
      "recvfrom",
      "recvmsg"
    ]
  },
  {
    "index": 196,
    "id": "CVE-2013-3234",
    "commit_id": "4a184233f21645cf0b719366210ed445d1024d72",
    "added_lines": [
      "memset(srose, 0, msg->msg_namelen"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure",
      "recvfrom",
      "recvmsg"
    ]
  },
  {
    "index": 197,
    "id": "CVE-2013-3233",
    "commit_id": "d26d6504f23e803824e8ebd14e52d4fc0a0b09cb",
    "added_lines": [
      "msg->msg_namelen = 0",
      "memset(sockaddr, 0, sizeof(*sockaddr"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 198,
    "id": "CVE-2013-3232",
    "commit_id": "3ce5efad47b62c57a4f5c54248347085a750ce0e",
    "added_lines": [
      "memset(sax, 0, sizeof(sax"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure",
      "recvfrom",
      "recvmsg"
    ]
  },
  {
    "index": 199,
    "id": "CVE-2013-3231",
    "commit_id": "c77a4b9cffb6215a15196ec499490d116dfad181",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.7,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 200,
    "id": "CVE-2013-3230",
    "commit_id": "b860d3cc62877fad02863e2a08efff69a19382d2",
    "added_lines": [
      "lsa->l2tp_conn_id = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 201,
    "id": "CVE-2013-3229",
    "commit_id": "a5598bd9c087dc0efc250a5221e5d0e6f584ee88",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 202,
    "id": "CVE-2013-3228",
    "commit_id": "5ae94c0d2f0bed41d6718be743985d61b7f5c47d",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 203,
    "id": "CVE-2013-3227",
    "commit_id": "2d6fbfe733f35c6b355c216644e08e149c61b271",
    "added_lines": [
      "m->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 204,
    "id": "CVE-2013-3226",
    "commit_id": "c8c499175f7d295ef867335bceb9a76a2c3cdc38",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 205,
    "id": "CVE-2013-3225",
    "commit_id": "e11e0455c0d7d3d62276a0c55d9dfbc16779d691",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 206,
    "id": "CVE-2013-3224",
    "commit_id": "4683f42fde3977bdb4e8a09622788cc8b5313778",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [
      "msg->msg_namelen = 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not properly initialize a certain length variable"
    ]
  },
  {
    "index": 207,
    "id": "CVE-2013-3223",
    "commit_id": "ef3313e84acbf349caecae942ab3ab731471f1a1",
    "added_lines": [
      "memset(sax, 0, sizeof(struct full_sockaddr_ax25"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure",
      "recvfrom",
      "recvmsg"
    ]
  },
  {
    "index": 208,
    "id": "CVE-2013-3222",
    "commit_id": "9b3e617f3df53822345a8573b6d358f6b9e5ed87",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize a certain length variable"
    ]
  },
  {
    "index": 209,
    "id": "CVE-2013-3076",
    "commit_id": "72a763d805a48ac8c0bf48fdb510e84c12de51fe",
    "added_lines": [
      "msg->msg_namelen = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmsg",
      "does not initialize certain length variables"
    ]
  },
  {
    "index": 214,
    "id": "CVE-2013-2636",
    "commit_id": "c085c49920b2f900ba716b4ca1c1a55ece9872cc",
    "added_lines": [
      "memset(&e, 0, sizeof(e",
      "memset(bpm, 0, sizeof(*bpm",
      "memset(bpm, 0, sizeof(*bpm",
      "memset(&entry, 0, sizeof(entry"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures"
    ]
  },
  {
    "index": 215,
    "id": "CVE-2013-2635",
    "commit_id": "84d73cd3fb142bf1298a8c13fd4ca50fd2432372",
    "added_lines": [
      "memset(ivi.mac, 0, sizeof(ivi.mac"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 216,
    "id": "CVE-2013-2634",
    "commit_id": "29cd8ae0e1a39e239a3a7b67da1986add1199fc0",
    "added_lines": [
      "memset(perm_addr, 0, sizeof(perm_addr",
      "memset(&ets, 0, sizeof(ets",
      "memset(&maxrate, 0, sizeof(maxrate",
      "memset(&pfc, 0, sizeof(pfc",
      "memset(&ets, 0, sizeof(ets",
      "memset(&pfc, 0, sizeof(pfc",
      "memset(&pg, 0, sizeof(pg",
      "memset(&pfc, 0, sizeof(pfc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures"
    ]
  },
  {
    "index": 218,
    "id": "CVE-2013-2548",
    "commit_id": "9a5467bf7b6e9e02ec9c3da4e23747c05faeaac6",
    "added_lines": [
      "strncpy(rhash.type, \"shash\", sizeof(rhash.type"
    ],
    "removed_lines": [
      "snprintf(rhash.type, CRYPTO_MAX_ALG_NAME, \"%s\", \"shash\""
    ],
    "cause": [
      "Logical Flaws",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect length value",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 227,
    "id": "CVE-2013-2141",
    "commit_id": "b9e146d8eb3b9ecae5086d373b50fa0c1f3e7f0f",
    "added_lines": [
      "struct siginfo info ="
    ],
    "removed_lines": [
      "struct siginfo info"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 233,
    "id": "CVE-2013-2061",
    "commit_id": "11d21349a4e7e38a025849479b36ace7c2eec2ee",
    "added_lines": [
      "static int",
      "memcmp_constant_time (const void *a, const void *b, size_t size)",
      "const uint8_t * a1 = a",
      "const uint8_t * b1 = b",
      "int ret = 0",
      "size_t i",
      "for (i = 0; i < size; i++)",
      "ret |= *a1++ ^ *b1++",
      "return ret",
      "if (memcmp_constant_time (local_hmac, BPTR (buf), hmac_len"
    ],
    "removed_lines": [
      "if (memcmp (local_hmac, BPTR (buf), hmac_len"
    ],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 2.6,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not run in constant time and a padding oracle attack on the CBC mode cipher."
    ]
  },
  {
    "index": 244,
    "id": "CVE-2013-1944",
    "commit_id": "2eb8dcf26cb37f09cffe26909a646e702dbcab66",
    "added_lines": [
      "static bool tailmatch(const char *cooke_domain, const char *hostname",
      "size_t cookie_domain_len = strlen(cooke_domain",
      "size_t hostname_len = strlen(hostname",
      "if(hostname_len < cookie_domain_len",
      "if(!Curl_raw_equal(cooke_domain, hostname+hostname_len-cookie_domain_len",
      "return FALSE",
      "RFC6265 4.1.2.3. The Domain Attribute says:",
      "For example, if the value of the Domain attribute is",
      "\"example.com\", the user agent will include the cookie in the Cookie",
      "header when making HTTP requests to example.com, www.example.com, and",
      "www.corp.example.com.",
      "if(hostname_len == cookie_domain_len",
      "return TRUE",
      "if('.' == *(hostname + hostname_len - cookie_domain_len - 1",
      "return TRUE",
      "return FALSE"
    ],
    "removed_lines": [
      "static bool tailmatch(const char *little, const char *bigone",
      "size_t littlelen = strlen(little",
      "size_t biglen = strlen(bigone",
      "if(littlelen > biglen",
      "return Curl_raw_equal(little, bigone+biglen-littlelen) ? TRUE : FALSE"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly match the path domain when sending cookies"
    ]
  },
  {
    "index": 245,
    "id": "CVE-2013-1943",
    "commit_id": "fa3d315a4ce2c0891cdde262562e710d95fba19e",
    "added_lines": [
      "if (user_alloc &&",
      "((mem->userspace_addr & (PAGE_SIZE - 1)) ||",
      "!access_ok(VERIFY_WRITE, mem->userspace_addr, mem->memory_size",
      "r = __copy_from_user(data, (void __user *)addr + offset, len"
    ],
    "removed_lines": [
      "if (user_alloc && (mem->userspace_addr & (PAGE_SIZE - 1",
      "r = copy_from_user(data, (void __user *)addr + offset, len"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "+Priv +Info",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Priv +Info ",
    "summary": [
      "does not check whether kernel addresses are specified during allocation of memory slots for use in a guest's physical address space"
    ]
  },
  {
    "index": 247,
    "id": "CVE-2013-1928",
    "commit_id": "12176503366885edd542389eed3aaf94be163fdb",
    "added_lines": [
      "if (err",
      "return -EFAULT"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "lacks a certain error check"
    ]
  },
  {
    "index": 272,
    "id": "CVE-2013-0349",
    "commit_id": "0a9ab9bdb3e891762553f667066190c1d22ad62b",
    "added_lines": [
      "strncpy(hid->name, req->name, sizeof(req->name) - 1"
    ],
    "removed_lines": [
      "strncpy(hid->name, req->name, 128"
    ],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not properly copy a certain name field"
    ]
  },
  {
    "index": 284,
    "id": "CVE-2012-6549",
    "commit_id": "fe685aabf7c8c9f138e5ea900954d295bf229175",
    "added_lines": [
      "fh16[3] = 0;"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 285,
    "id": "CVE-2012-6548",
    "commit_id": "0143fc5e9f6f5aad4764801015bc8d4b4a278200",
    "added_lines": [
      "fid->udf.parent_partref = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 286,
    "id": "CVE-2012-6547",
    "commit_id": "a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc",
    "added_lines": [
      "if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89)",
      "} else",
      "memset(&ifr, 0, sizeof(ifr"
    ],
    "removed_lines": [
      "if (cmd == TUNSETIFF || _IOC_TYPE(cmd) == 0x89"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 287,
    "id": "CVE-2012-6546",
    "commit_id": "e862f1a9b7df4e8196ebec45ac62295138aa3fc2",
    "added_lines": [
      "memset(&pvc, 0, sizeof(pvc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures"
    ]
  },
  {
    "index": 288,
    "id": "CVE-2012-6545",
    "commit_id": "9344a972961d1a6d2c04d9008b13617bcb6ec2ef",
    "added_lines": [
      "memset(sa, 0, sizeof(*sa"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 289,
    "id": "CVE-2012-6544",
    "commit_id": "e15ca9a0ef9a86f0477530b0f44a725d67f889ee",
    "added_lines": [
      "memset(&uf, 0, sizeof(uf"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 290,
    "id": "CVE-2012-6543",
    "commit_id": "04d4fbca1017c11381e7d82acea21dd741e748bc",
    "added_lines": [
      "lsa->l2tp_unused = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 291,
    "id": "CVE-2012-6542",
    "commit_id": "3592aaeb80290bda0f2cf0b5456c97bfc638b192",
    "added_lines": [
      "int rc = -EBADF"
    ],
    "removed_lines": [
      "int rc = 0",
      "memset(uaddr, 0, *uaddrlen"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect return value in certain circumstances"
    ]
  },
  {
    "index": 292,
    "id": "CVE-2012-6541",
    "commit_id": "7b07f8eb75aa3097cdfd4f6eac3da49db787381d",
    "added_lines": [
      "memset(&tfrc, 0, sizeof(tfrc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 293,
    "id": "CVE-2012-6540",
    "commit_id": "2d8a041b7bfe1097af21441cb77d6af95f4f4680",
    "added_lines": [
      "memset(&t, 0, sizeof(t"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 294,
    "id": "CVE-2012-6539",
    "commit_id": "43da5f2e0d0c69ded3d51907d9552310a6b545e8",
    "added_lines": [
      "memset(&ifc, 0, sizeof(ifc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 295,
    "id": "CVE-2012-6538",
    "commit_id": "4c87308bdea31a7b4828a51f6156e6f721a1fcc9",
    "added_lines": [
      "strncpy(algo->alg_name, auth->alg_name, sizeof(algo->alg_name"
    ],
    "removed_lines": [
      "strcpy(algo->alg_name, auth->alg_name"
    ],
    "cause": [
      "Logical Flaws",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect C library function for copying a string",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 296,
    "id": "CVE-2012-6537",
    "commit_id": "f778a636713a435d3a922c60b1622a91136560c1",
    "added_lines": [
      "memset(p, 0, sizeof(*p"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 297,
    "id": "CVE-2012-6536",
    "commit_id": "ecd7918745234e423dd87fcc0c077da557909720",
    "added_lines": [
      "struct xfrm_replay_state_esn *rs",
      "if (p->flags & XFRM_STATE_ESN)",
      "if (!rt",
      "return -EINVAL",
      "rs = nla_data(rt",
      "if (rs->bmp_len > XFRMA_REPLAY_ESN_MAX / sizeof(rs->bmp[0]) / 8",
      "return -EINVAL",
      "if (nla_len(rt) < xfrm_replay_state_esn_len(rs) &&",
      "nla_len(rt) != sizeof(*rs",
      "return -EINVAL",
      "int ulen",
      "ulen = xfrm_replay_state_esn_len(up",
      "if (nla_len(rp) < ulen || xfrm_replay_state_esn_len(replay_esn) != ulen",
      "int klen, ulen",
      "klen = xfrm_replay_state_esn_len(up",
      "ulen = nla_len(rta) >= klen ? klen : sizeof(*up",
      "p = kzalloc(klen, GFP_KERNEL",
      "pp = kzalloc(klen, GFP_KERNEL",
      "memcpy(p, up, ulen",
      "memcpy(pp, up, ulen"
    ],
    "removed_lines": [
      "if ((p->flags & XFRM_STATE_ESN) && !rt",
      "return -EINVAL",
      "if (xfrm_replay_state_esn_len(replay_esn) !=",
      "xfrm_replay_state_esn_len(up",
      "p = kmemdup(up, xfrm_replay_state_esn_len(up), GFP_KERNEL",
      "pp = kmemdup(up, xfrm_replay_state_esn_len(up), GFP_KERNEL"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not verify that the actual Netlink message length is consistent with a certain header field",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 299,
    "id": "CVE-2012-4530",
    "commit_id": "b66c5984017533316fd1951770302649baf1aa33",
    "added_lines": [
      "extern int bprm_change_interp(char *interp, struct linux_binprm *bprm"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "recursion",
      "does not properly handle recursion"
    ]
  },
  {
    "index": 327,
    "id": "CVE-2014-8709",
    "commit_id": "338f977f4eb441e69bb9a46eaa0ac715c931a67f",
    "added_lines": [
      "skb_trim(skb, hdrlen + per_fragm"
    ],
    "removed_lines": [
      "skb->len = hdrlen + per_fragm"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly maintain a certain tail pointer"
    ]
  },
  {
    "index": 343,
    "id": "CVE-2014-7284",
    "commit_id": "3d4405226d27b3a215e4d03cfa51f536244e5de7",
    "added_lines": [
      "BUG_ON(!static_key_enabled(work->key",
      "static_key_slow_dec(work->key",
      "struct static_key *once_key",
      "__net_random_once_disable_jump(once_key"
    ],
    "removed_lines": [
      "if (!static_key_enabled(work->key",
      "static_key_slow_inc(work->key",
      "struct static_key *done_key",
      "__net_random_once_disable_jump(done_key"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 6.4,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not perform the intended slow-path operation to initialize random seeds"
    ]
  },
  {
    "index": 349,
    "id": "CVE-2014-6229",
    "commit_id": "7135ec229882370a00411aa50030eada6034cc1b",
    "added_lines": [
      "if (ctx->key)",
      "key = static_cast<char*>(malloc(ops->block_size",
      "memcpy(key, ctx->key, ops->block_size",
      "} else",
      "key = nullptr"
    ],
    "removed_lines": [
      "key = ctx->key ? strdup(ctx->key) : nullptr"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "'0' character"
    ]
  },
  {
    "index": 368,
    "id": "CVE-2014-4652",
    "commit_id": "07f4d9d74a04aa7c72c5dae0ef97565f28f17b92",
    "added_lines": [
      "mutex_init(&card->user_ctl_lock"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "+Info",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 380,
    "id": "CVE-2014-4027",
    "commit_id": "4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc",
    "added_lines": [
      "static u32 rd_release_sgl_table(struct rd_dev *rd_dev, struct rd_dev_sg_table *sg_table,",
      "u32 sg_table_count",
      "u32 i, j, page_count = 0, sg_per_table",
      "for (i = 0; i < sg_table_count; i++)",
      "kfree(sg_table",
      "return page_count",
      "static void rd_release_device_space(struct rd_dev *rd_dev",
      "u32 page_count",
      "if (!rd_dev->sg_table_array || !rd_dev->sg_table_count",
      "return",
      "page_count = rd_release_sgl_table(rd_dev, rd_dev->sg_table_array,",
      "rd_dev->sg_table_count",
      "static int rd_allocate_sgl_table(struct rd_dev *rd_dev, struct rd_dev_sg_table *sg_table,",
      "u32 total_sg_needed, unsigned char init_payload",
      "u32 i = 0, j, page_offset = 0, sg_per_table",
      "unsigned char *p",
      "p = kmap(pg",
      "memset(p, init_payload, PAGE_SIZE",
      "kunmap(pg",
      "return 0",
      "static int rd_build_device_space(struct rd_dev *rd_dev",
      "struct rd_dev_sg_table *sg_table",
      "u32 sg_tables, total_sg_needed",
      "u32 max_sg_per_table = (RD_MAX_ALLOCATION_SIZE /",
      "sizeof(struct scatterlist",
      "int rc",
      "if (rd_dev->rd_page_count <= 0)",
      "pr_err(\"Illegal page count: %u for Ramdisk device\\n\",",
      "rd_dev->rd_page_count",
      "return -EINVAL",
      "if (rd_dev->rd_flags & RDF_NULLIO",
      "return 0",
      "total_sg_needed = rd_dev->rd_page_count",
      "sg_tables = (total_sg_needed / max_sg_per_table) + 1",
      "sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL",
      "if (!sg_table)",
      "pr_err(\"Unable to allocate memory for Ramdisk\"",
      "\" scatterlist tables\\n\"",
      "return -ENOMEM",
      "rd_dev->sg_table_array = sg_table",
      "rd_dev->sg_table_count = sg_tables",
      "rc = rd_allocate_sgl_table(rd_dev, sg_table, total_sg_needed, 0x00",
      "if (rc",
      "return rc",
      "\" %u pages in %u tables\\n\", rd_dev->rd_host->rd_host_id,",
      "rd_dev->rd_dev_id, rd_dev->rd_page_count,",
      "rd_dev->sg_table_count"
    ],
    "removed_lines": [
      "static void rd_release_device_space(struct rd_dev *rd_dev",
      "u32 i, j, page_count = 0, sg_per_table",
      "struct rd_dev_sg_table *sg_table",
      "if (!rd_dev->sg_table_array || !rd_dev->sg_table_count",
      "return",
      "sg_table = rd_dev->sg_table_array",
      "for (i = 0; i < rd_dev->sg_table_count; i++)",
      "kfree(sg_table",
      "static int rd_build_device_space(struct rd_dev *rd_dev",
      "u32 i = 0, j, page_offset = 0, sg_per_table, sg_tables, total_sg_needed",
      "struct rd_dev_sg_table *sg_table",
      "if (rd_dev->rd_page_count <= 0)",
      "pr_err(\"Illegal page count: %u for Ramdisk device\\n\",",
      "rd_dev->rd_page_count",
      "return -EINVAL",
      "if (rd_dev->rd_flags & RDF_NULLIO",
      "return 0",
      "total_sg_needed = rd_dev->rd_page_count",
      "sg_tables = (total_sg_needed / max_sg_per_table) + 1",
      "sg_table = kzalloc(sg_tables * sizeof(struct rd_dev_sg_table), GFP_KERNEL",
      "if (!sg_table)",
      "pr_err(\"Unable to allocate memory for Ramdisk\"",
      "\" scatterlist tables\\n\"",
      "return -ENOMEM",
      "rd_dev->sg_table_array = sg_table",
      "rd_dev->sg_table_count = sg_tables",
      "\" %u pages in %u tables\\n\", rd_dev->rd_host->rd_host_id,",
      "rd_dev->rd_dev_id, rd_dev->rd_page_count,",
      "rd_dev->sg_table_count"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize a certain data structure"
    ]
  },
  {
    "index": 422,
    "id": "CVE-2014-2567",
    "commit_id": "25fffa3e25cbad85bbca804193ad336b090a9ce1",
    "added_lines": [
      "void testPreauthWithStartTlsWanted"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 428,
    "id": "CVE-2014-2038",
    "commit_id": "263b4509ec4d47e0da3e753f85a39ea12d1eff24",
    "added_lines": [
      "if (!nfs_write_pageuptodate(page, inode",
      "return 0",
      "if (inode->i_flock == NULL || (inode->i_flock->fl_start == 0 &&",
      "inode->i_flock->fl_type != F_RDLCK"
    ],
    "removed_lines": [
      "if (nfs_write_pageuptodate(page, inode) && (inode->i_flock == NULL ||",
      "(inode->i_flock->fl_start == 0 &&",
      "inode->i_flock->fl_type != F_RDLCK"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 3.7,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "relies on a write delegation to extend a write operation without a certain up-to-date verification"
    ]
  },
  {
    "index": 429,
    "id": "CVE-2014-2020",
    "commit_id": "2938329ce19cb8c4197dec146c3ec887c6f61d01",
    "added_lines": [
      "#define PHP_RELEASE_VERSION 5",
      "#define PHP_VERSION \"5.5.5-dev\"",
      "#define PHP_VERSION_ID 50505"
    ],
    "removed_lines": [
      "#define PHP_RELEASE_VERSION 8",
      "#define PHP_VERSION \"5.5.8-dev\"",
      "#define PHP_VERSION_ID 50508"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not check data types"
    ]
  },
  {
    "index": 431,
    "id": "CVE-2014-1739",
    "commit_id": "e6a623460e5fc960ac3ee9f946d3106233fd28d8",
    "added_lines": [
      "memset(&u_ent, 0, sizeof(u_ent"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.7,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 432,
    "id": "CVE-2014-1738",
    "commit_id": "2145e15e0557a01b9195d1c7199a1b92cb9be81f",
    "added_lines": [
      "struct floppy_raw_cmd cmd = *ptr",
      "cmd.next = NULL",
      "cmd.kernel_data = NULL",
      "ret = copy_to_user(param, &cmd, sizeof(cmd"
    ],
    "removed_lines": [
      "ret = copy_to_user(param, ptr, sizeof(*ptr"
    ],
    "cause": [
      "Parsing or Interpretation Errors",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not properly restrict access to certain pointers during processing of an FDRAWCMD ioctl call"
    ]
  },
  {
    "index": 435,
    "id": "CVE-2014-1446",
    "commit_id": "8e3fbf870481eb53b2d3a322d1fc395ad8b367ed",
    "added_lines": [
      "memset(&yi, 0, sizeof(yi"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain structure member",
      "does not initialize a certain structure",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 436,
    "id": "CVE-2014-1445",
    "commit_id": "2b13d06c9584b4eb773f1e80bbaedab9a1c344e1",
    "added_lines": [
      "memset(&line, 0, sizeof(line"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not properly initialize a certain data structure"
    ]
  },
  {
    "index": 437,
    "id": "CVE-2014-1444",
    "commit_id": "96b340406724d87e4621284ebac5e059d67b2194",
    "added_lines": [
      "memset(&sync, 0, sizeof(sync"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.7,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not properly initialize a certain data structure",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 447,
    "id": "CVE-2014-0206",
    "commit_id": "edfbbf388f293d70bf4b7c0bc38774d05e6f711a",
    "added_lines": [
      "head %= ctx->nr_events",
      "tail %= ctx->nr_events"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "array index error"
    ]
  },
  {
    "index": 452,
    "id": "CVE-2014-0131",
    "commit_id": "1fd819ecb90cc9b822cd84d3056ddba315d3340f",
    "added_lines": [
      "struct sk_buff *frag_skb = head_skb",
      "frag_skb = list_skb",
      "frag_skb = list_skb",
      "if (unlikely(skb_orphan_frags(frag_skb, GFP_ATOMIC",
      "goto err"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 2.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 462,
    "id": "CVE-2013-7299",
    "commit_id": "9bd3b14042e12d84f39ea9f55731705ba516f525",
    "added_lines": [
      "header.rawdata[sizeof(header.rawdata) - 1] = '\\0'"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 465,
    "id": "CVE-2013-7281",
    "commit_id": "bceaa90240b6019ed73b49965eac7d167610be69",
    "added_lines": [
      "if (msg->msg_name != NULL)",
      "memcpy(msg->msg_name, &sa, sizeof(sa"
    ],
    "removed_lines": [
      "if (addr_len",
      "if (msg->msg_name != NULL",
      "memcpy(msg->msg_name, &sa, sizeof(struct sockaddr_pn"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmmsg",
      "recvmsg"
    ]
  },
  {
    "index": 466,
    "id": "CVE-2013-7271",
    "commit_id": "f3d3342602f8bcbf37d7c46641cb9bca7618eb1c",
    "added_lines": [
      "msg->msg_namelen = sizeof(*sx25"
    ],
    "removed_lines": [
      "msg->msg_namelen = sizeof(struct sockaddr_x25"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "recvfrom",
      "recvmmsg",
      "recvmsg"
    ]
  },
  {
    "index": 481,
    "id": "CVE-2011-2909",
    "commit_id": "819cbb120eaec7e014e5abd029260db1ca8c5735",
    "added_lines": [
      "strlcpy(devinfo.driver_name, dev->driver->driver_name, COMEDI_NAMELEN",
      "strlcpy(devinfo.board_name, dev->board_name, COMEDI_NAMELEN"
    ],
    "removed_lines": [
      "memcpy(devinfo.driver_name, dev->driver->driver_name, COMEDI_NAMELEN",
      "memcpy(devinfo.board_name, dev->board_name, COMEDI_NAMELEN"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "copy of a short string"
    ]
  },
  {
    "index": 486,
    "id": "CVE-2015-8374",
    "commit_id": "0305cd5f7fca85dae392b9ba85b116896eb7c1c7",
    "added_lines": [
      "static int truncate_inline_extent(struct inode *inode,",
      "struct btrfs_path *path,",
      "struct btrfs_key *found_key,",
      "const u64 item_end,",
      "const u64 new_size",
      "struct extent_buffer *leaf = path->nodes[0]",
      "int slot = path->slots[0]",
      "struct btrfs_file_extent_item *fi",
      "u32 size = (u32)(new_size - found_key->offset",
      "struct btrfs_root *root = BTRFS_I(inode)->root",
      "fi = btrfs_item_ptr(leaf, slot, struct btrfs_file_extent_item",
      "if (btrfs_file_extent_compression(leaf, fi) != BTRFS_COMPRESS_NONE)",
      "loff_t offset = new_size",
      "loff_t page_end = ALIGN(offset, PAGE_CACHE_SIZE",
      "btrfs_release_path(path",
      "return btrfs_truncate_page(inode, offset, page_end - offset, 0",
      "btrfs_set_file_extent_ram_bytes(leaf, fi, size",
      "size = btrfs_file_extent_calc_inline_size(size",
      "btrfs_truncate_item(root, path, size, 1",
      "if (test_bit(BTRFS_ROOT_REF_COWS, &root->state",
      "inode_sub_bytes(inode, item_end + 1 - new_size",
      "return 0",
      "if (btrfs_file_extent_compression(leaf, fi) !=",
      "BTRFS_COMPRESS_NONE && pending_del_nr)",
      "err = btrfs_del_items(trans, root, path,",
      "pending_del_slot,",
      "pending_del_nr",
      "if (err)",
      "btrfs_abort_transaction(trans,",
      "root,",
      "err",
      "goto error",
      "pending_del_nr = 0",
      "err = truncate_inline_extent(inode, path,",
      "&found_key,",
      "item_end,",
      "new_size",
      "if (err)",
      "btrfs_abort_transaction(trans,",
      "root, err",
      "goto error",
      "inode_sub_bytes(inode, item_end + 1 - new_size"
    ],
    "removed_lines": [
      "btrfs_file_extent_compression(leaf, fi) == 0 &&",
      "u32 size = new_size - found_key.offset",
      "if (test_bit(BTRFS_ROOT_REF_COWS, &root->state",
      "inode_sub_bytes(inode, item_end + 1 -",
      "new_size",
      "btrfs_set_file_extent_ram_bytes(leaf, fi, size",
      "size =",
      "btrfs_file_extent_calc_inline_size(size",
      "btrfs_truncate_item(root, path, size, 1",
      "inode_sub_bytes(inode, item_end + 1 -",
      "found_key.offset"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles compressed inline extents"
    ]
  },
  {
    "index": 490,
    "id": "CVE-2015-7885",
    "commit_id": "4b6184336ebb5c8dc1eae7f7ab46ee608a748b05",
    "added_lines": [
      "memset(&ddi, 0, sizeof(ddi"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 491,
    "id": "CVE-2015-7884",
    "commit_id": "eda98796aff0d9bf41094b06811f5def3b4c333c",
    "added_lines": [
      "memset(&vblank, 0, sizeof(vblank"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 504,
    "id": "CVE-2015-5697",
    "commit_id": "b6878d9e03043695dbf3fa1caa6dfc09db225b16",
    "added_lines": [
      "file = kzalloc(sizeof(*file), GFP_NOIO"
    ],
    "removed_lines": [
      "file = kmalloc(sizeof(*file), GFP_NOIO"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain bitmap data structure"
    ]
  },
  {
    "index": 508,
    "id": "CVE-2015-5302",
    "commit_id": "257578a23d1537a2d235aaa2b1488ee4f818e360",
    "added_lines": [
      "problem_data_reload_from_dump_dir",
      "update_gui_state_from_problem_data( 0",
      "problem_data_reload_from_dump_dir",
      "update_gui_state_from_problem_data( 0"
    ],
    "removed_lines": [
      "problem_data_reload_from_dump_dir",
      "update_gui_state_from_problem_data( 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 549,
    "id": "CVE-2015-2141",
    "commit_id": "9425e16437439e68c7d96abef922167d68fafaff",
    "added_lines": [
      "do",
      "r = modn.Square(r"
    ],
    "removed_lines": [
      "do {\t// do this in a loop for people using small numbers for testing"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly blind private key operations for the Rabin-Williams digital signature algorithm"
    ]
  },
  {
    "index": 550,
    "id": "CVE-2015-2042",
    "commit_id": "db27ebb111e9f69efece08e4cb6a34ff980f8896",
    "added_lines": [
      ".maxlen         = sizeof(int),",
      ".maxlen         = sizeof(int),"
    ],
    "removed_lines": [
      ".maxlen         = sizeof(unsigned long),",
      ".maxlen         = sizeof(unsigned long),"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect data type"
    ]
  },
  {
    "index": 551,
    "id": "CVE-2015-2041",
    "commit_id": "6b8d9117ccb4f81b1244aafa7bc70ef8fa45fc49",
    "added_lines": [
      ".maxlen\t\t= sizeof(sysctl_llc2_ack_timeout),",
      ".maxlen\t\t= sizeof(sysctl_llc2_busy_timeout),",
      ".maxlen\t\t= sizeof(sysctl_llc2_p_timeout),",
      ".maxlen\t\t= sizeof(sysctl_llc2_rej_timeout),"
    ],
    "removed_lines": [
      ".maxlen\t\t= sizeof(long),",
      ".maxlen\t\t= sizeof(long),",
      ".maxlen\t\t= sizeof(long),",
      ".maxlen\t\t= sizeof(long),"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect data type"
    ]
  },
  {
    "index": 582,
    "id": "CVE-2014-9731",
    "commit_id": "0e5cc9a40ada6046e6bc3bdfcd0c0d7e4b706b14",
    "added_lines": [
      "static int udf_translate_to_linux(uint8_t *, int, uint8_t *, int, uint8_t *,",
      "int",
      "int udf_get_filename(struct super_block *sb, uint8_t *sname, int slen,",
      "uint8_t *dname, int dlen",
      "if (udf_build_ustr_exact(unifilename, sname, slen",
      "len = udf_translate_to_linux(dname, dlen,",
      "filename->u_name, filename->u_len,",
      "#define CRC_LEN\t\t\t5",
      "static int udf_translate_to_linux(uint8_t *newName, int newLen,",
      "uint8_t *udfName, int udfLen,",
      "uint8_t *fidName, int fidNameLen",
      "if (newIndex < newLen",
      "maxFilenameLen = newLen - CRC_LEN - localExtIndex",
      "} else if (newIndex > newLen - CRC_LEN",
      "newIndex = newLen - CRC_LEN"
    ],
    "removed_lines": [
      "static int udf_translate_to_linux(uint8_t *, uint8_t *, int, uint8_t *, int",
      "int udf_get_filename(struct super_block *sb, uint8_t *sname, uint8_t *dname,",
      "int flen",
      "if (udf_build_ustr_exact(unifilename, sname, flen",
      "len = udf_translate_to_linux(dname, filename->u_name, filename->u_len,",
      "static int udf_translate_to_linux(uint8_t *newName, uint8_t *udfName,",
      "int udfLen, uint8_t *fidName,",
      "int fidNameLen",
      "if (newIndex < 256",
      "maxFilenameLen = 250 - localExtIndex",
      "} else if (newIndex > 250",
      "newIndex = 250"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not ensure that space is available for storing a symlink target's name along with a trailing 0 character"
    ]
  },
  {
    "index": 598,
    "id": "CVE-2014-9584",
    "commit_id": "4e2024624e678f0ebb916e6192bd23c1f9fdf696",
    "added_lines": [
      "if (rr->u.ER.len_id + offsetof(struct rock_ridge, u.ER.data) > rr->len",
      "goto out"
    ],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not validate a length value"
    ]
  },
  {
    "index": 603,
    "id": "CVE-2014-9423",
    "commit_id": "5bb8a6b9c9eb8dd22bc9526751610aaa255ead9c",
    "added_lines": [
      "gr->gr_ctx.value = \"xxxx\"",
      "gr->gr_ctx.length = 4"
    ],
    "removed_lines": [
      "typedef struct gss_union_ctx_id_t",
      "gss_OID     mech_type",
      "gss_ctx_id_t    internal_ctx_id",
      "} gss_union_ctx_id_desc, *gss_union_ctx_id_t",
      "if ((gr->gr_ctx.value = mem_alloc(sizeof(gss_union_ctx_id_desc))) == NULL)",
      "fprintf(stderr, \"svcauth_gss_accept_context: out of memory\\n\"",
      "goto errout",
      "memcpy(gr->gr_ctx.value, gd->ctx, sizeof(gss_union_ctx_id_desc",
      "gr->gr_ctx.length = sizeof(gss_union_ctx_id_desc",
      "mem_free(gr.gr_ctx.value,",
      "sizeof(gss_union_ctx_id_desc",
      "mem_free(gr.gr_ctx.value, sizeof(gss_union_ctx_id_desc"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "transmits uninitialized interposer data to clients"
    ]
  },
  {
    "index": 630,
    "id": "CVE-2016-9756",
    "commit_id": "2117d5398c81554fbf803f5fd1dc55eb78216c0c",
    "added_lines": [
      "unsigned short sel",
      "struct desc_struct new_desc",
      "if (rc != X86EMUL_CONTINUE",
      "return X86EMUL_UNHANDLEABLE",
      "struct desc_struct new_desc",
      "if (rc != X86EMUL_CONTINUE",
      "return X86EMUL_UNHANDLEABLE"
    ],
    "removed_lines": [
      "unsigned short sel, old_sel",
      "struct desc_struct old_desc, new_desc",
      "const struct x86_emulate_ops *ops = ctxt->ops",
      "if (ctxt->mode == X86EMUL_MODE_PROT64",
      "ops->get_segment(ctxt, &old_sel, &old_desc, NULL,",
      "VCPU_SREG_CS",
      "if (rc != X86EMUL_CONTINUE)",
      "WARN_ON(ctxt->mode != X86EMUL_MODE_PROT64",
      "ops->set_segment(ctxt, old_sel, &old_desc, 0, VCPU_SREG_CS",
      "return rc",
      "u16 old_cs",
      "struct desc_struct old_desc, new_desc",
      "const struct x86_emulate_ops *ops = ctxt->ops",
      "if (ctxt->mode == X86EMUL_MODE_PROT64",
      "ops->get_segment(ctxt, &old_cs, &old_desc, NULL,",
      "VCPU_SREG_CS",
      "if (rc != X86EMUL_CONTINUE)",
      "WARN_ON(ctxt->mode != X86EMUL_MODE_PROT64",
      "ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize Code Segment (CS) in certain error cases"
    ]
  },
  {
    "index": 648,
    "id": "CVE-2016-9178",
    "commit_id": "1c109fabbd51863475cd12ac206bdd249aee35af",
    "added_lines": [
      "\".section .fixup,\\\"ax\\\"\\n\"\t\t\t\t\\",
      "\"3:xor\"itype\" %\"rtype\"0,%\"rtype\"0\\n\"\t\t\\",
      "\"  jmp 2b\\n\"\t\t\t\t\t\\",
      "\".previous\\n\"\t\t\t\t\t\\",
      "_ASM_EXTABLE_EX(1b, 3b)\t\t\t\t\\"
    ],
    "removed_lines": [
      "_ASM_EXTABLE_EX(1b, 2b)\t\t\t\t\\"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain integer variable"
    ]
  },
  {
    "index": 663,
    "id": "CVE-2016-7916",
    "commit_id": "8148a73c9901a8794a50f950083c00ccf97d43b3",
    "added_lines": [
      "if (!mm || !mm->env_end"
    ],
    "removed_lines": [
      "if (!mm"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "+Info",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 672,
    "id": "CVE-2016-7420",
    "commit_id": "553049ba297d89d9e8fbf2204acb40a8a53f5cd6",
    "added_lines": [
      "A makefile is included for you to compile Crypto++ with GCC and compatibles.",
      "Make sure you are using GNU Make and GNU ld. The make process will produce",
      "two files, libcryptopp.a and cryptest.exe. Run \"cryptest.exe v\" for the",
      "validation suite and \"cryptest.exe tv all\" for additional test vectors.",
      "The makefile uses '-DNDEBUG -g2 -O2' CXXFLAGS by default. If you use an",
      "alternate build system, like Autotools or CMake, then ensure the build system",
      "includes '-DNDEBUG' for production or release builds. The Crypto++ library uses",
      "asserts for debugging and diagnostics during development; it does not",
      "rely on them to crash a program at runtime.",
      "If an assert triggers in production software, then unprotected sensitive",
      "information could be egressed from the program to the filesystem or the",
      "platform's error reporting program, like Apport on Ubuntu or CrashReporter",
      "on Apple."
    ],
    "removed_lines": [
      "A makefile is included for you to compile Crypto++ with GCC. Make sure",
      "you are using GNU Make and GNU ld. The make process will produce two files,",
      "libcryptopp.a and cryptest.exe. Run \"cryptest.exe v\" for the validation",
      "suite."
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 690,
    "id": "CVE-2016-7128",
    "commit_id": "6dbb1ee46b5f4725cc6519abf91e512a2a10dfed?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72627 (Memory Leakage In exif_process_IFD_in_TIFF",
      "--SKIPIF--",
      "<?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
      "--FILE--",
      "<?php",
      "$exif = exif_read_data(__DIR__ . '/bug72627.tiff',0,0,true",
      "var_dump($exif",
      "?>",
      "--EXPECTF--",
      "Warning: exif_read_data(%s): Thumbnail goes IFD boundary or end of file reached in %sbug72627.php on line %d",
      "Warning: exif_read_data(%s): Error in TIFF: filesize(x04E2) less than start of IFD dir(x829A0004) in %sbug72627.php on line %d",
      "Warning: exif_read_data(%s): Thumbnail goes IFD boundary or end of file reached in %sbug72627.php on line %d",
      "array(11)",
      "[\"FileName\"]=>",
      "string(13) \"bug72627.tiff\"",
      "[\"FileDateTime\"]=>",
      "int(%d",
      "[\"FileSize\"]=>",
      "int(1250",
      "[\"FileType\"]=>",
      "int(7",
      "[\"MimeType\"]=>",
      "string(10) \"image/tiff\"",
      "[\"SectionsFound\"]=>",
      "string(30) \"ANY_TAG, IFD0, THUMBNAIL, EXIF\"",
      "[\"COMPUTED\"]=>",
      "array(10)",
      "[\"html\"]=>",
      "string(24) \"width=\"128\" height=\"132\"\"",
      "[\"Height\"]=>",
      "int(132",
      "[\"Width\"]=>",
      "int(128",
      "[\"IsColor\"]=>",
      "int(0",
      "[\"ByteOrderMotorola\"]=>",
      "int(0",
      "[\"ApertureFNumber\"]=>",
      "string(5) \"f/1.0\"",
      "[\"Thumbnail.FileType\"]=>",
      "int(2",
      "[\"Thumbnail.MimeType\"]=>",
      "string(10) \"image/jpeg\"",
      "[\"Thumbnail.Height\"]=>",
      "int(132",
      "[\"Thumbnail.Width\"]=>",
      "int(128",
      "[\"XResolution\"]=>",
      "string(21) \"1414812756/1414812756\"",
      "[\"THUMBNAIL\"]=>",
      "array(5)",
      "[\"ImageWidth\"]=>",
      "int(128",
      "[\"ImageLength\"]=>",
      "int(132",
      "[\"JPEGInterchangeFormat\"]=>",
      "int(1280",
      "[\"JPEGInterchangeFormatLength\"]=>",
      "int(100",
      "[\"THUMBNAIL\"]=>",
      "NULL",
      "[\"ExposureTime\"]=>",
      "string(21) \"1414812756/1414812756\"",
      "[\"FNumber\"]=>",
      "string(21) \"1414812756/1414812756\""
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "mishandles the case of a thumbnail offset that exceeds the file size"
    ]
  },
  {
    "index": 705,
    "id": "CVE-2016-6494",
    "commit_id": "035cf2afc04988b22cb67f4ebfd77e9b344cb6e0",
    "added_lines": [
      "FILE* fp",
      "#if _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE",
      "int fd = open(filename, O_CREAT, S_IRUSR | S_IWUSR",
      "if (fd == -1)",
      "return -1",
      "fp = fdopen(fd, \"wt\"",
      "#else",
      "fp = fopen(filename, \"wt\"",
      "#endif  // _POSIX_C_SOURCE >= 1 || _XOPEN_SOURCE || _POSIX_SOURCE",
      "fclose(fp);  // Also causes fd to be closed."
    ],
    "removed_lines": [
      "FILE* fp = fopen(filename, \"wt\"",
      "fclose(fp"
    ],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "permissions"
    ]
  },
  {
    "index": 718,
    "id": "CVE-2016-6130",
    "commit_id": "532c34b5fbf1687df63b3fcd5b2846312ac943c6",
    "added_lines": [
      "unsigned long copied",
      "copied = PAGE_SIZE -",
      "copy_from_user(sccb, u64_to_uptr(ctl_sccb.sccb), PAGE_SIZE",
      "if (offsetof(struct sccb_header, length) +",
      "sizeof(sccb->length) > copied || sccb->length > copied)",
      "if (sccb->length < 8)",
      "rc = -EINVAL"
    ],
    "removed_lines": [
      "if (copy_from_user(sccb, u64_to_uptr(ctl_sccb.sccb), sizeof(*sccb)))",
      "if (sccb->length > PAGE_SIZE || sccb->length < 8",
      "return -EINVAL",
      "if (copy_from_user(sccb, u64_to_uptr(ctl_sccb.sccb), sccb->length))",
      "rc = -EFAULT"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 7"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "*double fetch* vulnerability",
      "race condition"
    ]
  },
  {
    "index": 721,
    "id": "CVE-2016-5842",
    "commit_id": "7.0.2-1",
    "added_lines": [
      "MAGICK_GIT_REVISION=18479:931319b:20160622"
    ],
    "removed_lines": [
      "MAGICK_GIT_REVISION=18415:25ea4de:20160612"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 732,
    "id": "CVE-2016-5696",
    "commit_id": "75ff39ccc1bd5d3c455b6822ab09e533c551f758",
    "added_lines": [
      "int sysctl_tcp_challenge_ack_limit = 1000",
      "u32 count, now",
      "u32 half = (sysctl_tcp_challenge_ack_limit + 1) >> 1",
      "WRITE_ONCE(challenge_count, half +",
      "prandom_u32_max(sysctl_tcp_challenge_ack_limit",
      "count = READ_ONCE(challenge_count",
      "if (count > 0)",
      "WRITE_ONCE(challenge_count, count - 1"
    ],
    "removed_lines": [
      "int sysctl_tcp_challenge_ack_limit = 100",
      "u32 now",
      "challenge_count = 0",
      "if (++challenge_count <= sysctl_tcp_challenge_ack_limit)"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.8,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly determine the rate of challenge ACK segments"
    ]
  },
  {
    "index": 750,
    "id": "CVE-2016-5244",
    "commit_id": "4116def2337991b39919f3b448326e21c40e0dbb",
    "added_lines": [
      "minfo.flags = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain structure member",
      "does not initialize a certain structure"
    ]
  },
  {
    "index": 751,
    "id": "CVE-2016-5243",
    "commit_id": "5d2be1422e02ccd697ccfcd45c85b4a26e6178e2",
    "added_lines": [
      "nla_strlcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]),",
      "TIPC_MAX_LINK_NAME"
    ],
    "removed_lines": [
      "strcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly copy a certain string"
    ]
  },
  {
    "index": 765,
    "id": "CVE-2016-4913",
    "commit_id": "99d825822eade8d827a1817357cbf3f889a552d6",
    "added_lines": [
      "char *p",
      "int len",
      "len = rr->len - 5",
      "if (retnamlen + len >= 254)",
      "p = memchr(rr->u.NM.name, '\\0', len",
      "if (unlikely(p",
      "len = p - rr->u.NM.name",
      "memcpy(retname + retnamlen, rr->u.NM.name, len",
      "retnamlen += len",
      "retname[retnamlen] = '\\0'"
    ],
    "removed_lines": [
      "if ((strlen(retname) + rr->len - 5) >= 254)",
      "strncat(retname, rr->u.NM.name, rr->len - 5",
      "retnamlen += rr->len - 5"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles NM (aka alternate name) entries containing 0 characters"
    ]
  },
  {
    "index": 771,
    "id": "CVE-2016-4580",
    "commit_id": "79e48650320e6fba48369fccf13fd045315b19b8",
    "added_lines": [
      "memset(dte, 0, sizeof(*dte"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize a certain data structure"
    ]
  },
  {
    "index": 772,
    "id": "CVE-2016-4578",
    "commit_id": "e4ec8cc8039a7063e24204299b462bd1383184a5",
    "added_lines": [
      "memset(&r1, 0, sizeof(r1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain r1 data structures"
    ]
  },
  {
    "index": 773,
    "id": "CVE-2016-4569",
    "commit_id": "cec8f96e49d9be372fdb0c3836dcf31ec71e457e",
    "added_lines": [
      "memset(&tread, 0, sizeof(tread"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 779,
    "id": "CVE-2016-4486",
    "commit_id": "5f8e44741f9f216e33736ea4ec65ca9ac03036e6",
    "added_lines": [
      "struct rtnl_link_ifmap map",
      "memset(&map, 0, sizeof(map",
      "map.mem_start   = dev->mem_start",
      "map.mem_end     = dev->mem_end",
      "map.base_addr   = dev->base_addr",
      "map.irq         = dev->irq",
      "map.dma         = dev->dma",
      "map.port        = dev->if_port"
    ],
    "removed_lines": [
      "struct rtnl_link_ifmap map =",
      ".mem_start   = dev->mem_start,",
      ".mem_end     = dev->mem_end,",
      ".base_addr   = dev->base_addr,",
      ".irq         = dev->irq,",
      ".dma         = dev->dma,",
      ".port        = dev->if_port,"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 780,
    "id": "CVE-2016-4485",
    "commit_id": "b8670c09f37bdf2847cc44f36511a53afc6161fd",
    "added_lines": [
      "memset(&info, 0, sizeof(info"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 781,
    "id": "CVE-2016-4482",
    "commit_id": "681fef8380eb818c0b845fca5d2ab1dcbab114ee",
    "added_lines": [
      "struct usbdevfs_connectinfo ci",
      "memset(&ci, 0, sizeof(ci",
      "ci.devnum = ps->dev->devnum",
      "ci.slow = ps->dev->speed == USB_SPEED_LOW"
    ],
    "removed_lines": [
      "struct usbdevfs_connectinfo ci =",
      ".devnum = ps->dev->devnum,",
      ".slow = ps->dev->speed == USB_SPEED_LOW"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "does not initialize a certain data structure"
    ]
  },
  {
    "index": 825,
    "id": "CVE-2016-2383",
    "commit_id": "a1b14d27ed0965838350f1377ff97c93ee383492",
    "added_lines": [
      "else if (i > pos + delta && i + insn->off + 1 <= pos + delta"
    ],
    "removed_lines": [
      "else if (i > pos && i + insn->off + 1 < pos"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not consider the delta in the backward-jump case"
    ]
  },
  {
    "index": 835,
    "id": "CVE-2016-2117",
    "commit_id": "f43bfaeddc79effbf3d0fcb53ca477cca66f3db8",
    "added_lines": [
      "netdev->hw_features = NETIF_F_HW_VLAN_CTAG_RX"
    ],
    "removed_lines": [
      "netdev->hw_features = NETIF_F_SG | NETIF_F_HW_VLAN_CTAG_RX"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrectly enables scatter/gather I/O"
    ]
  },
  {
    "index": 846,
    "id": "CVE-2016-0823",
    "commit_id": "ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce",
    "added_lines": [
      "if (!capable(CAP_SYS_ADMIN",
      "return -EPERM"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "internal bug"
    ]
  },
  {
    "index": 855,
    "id": "CVE-2015-8964",
    "commit_id": "dd42bf1197144ede075a9d4793123f7689e164bc",
    "added_lines": [
      "tty->disc_data = NULL",
      "tty->receive_room = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 7.1,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 863,
    "id": "CVE-2015-8950",
    "commit_id": "6829e274a623187c24f7cfc0e3d35f25d087fcc5",
    "added_lines": [
      "memset(ptr, 0, size",
      "memset(addr, 0, size"
    ],
    "removed_lines": [
      "if (flags & __GFP_ZERO",
      "memset(ptr, 0, size",
      "if (flags & __GFP_ZERO",
      "memset(addr, 0, size"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain data structures"
    ]
  },
  {
    "index": 874,
    "id": "CVE-2015-8842",
    "commit_id": "afae249efa4774c6676738ac5de6aeb4daf4889f",
    "added_lines": [
      "z /var/log/journal/%m/system.journal 0640 root systemd-journal - -",
      "a+ /var/log/journal/%m/system.journal - - - - group:adm:r--,group:wheel:r--"
    ],
    "removed_lines": [],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "permissions"
    ]
  },
  {
    "index": 880,
    "id": "CVE-2015-8791",
    "commit_id": "24e5cd7c666b1ddd85619d60486db0a5481c1b90",
    "added_lines": [
      "if (PossibleSizeLength > BufferSize",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "invalid memory access"
    ]
  },
  {
    "index": 881,
    "id": "CVE-2015-8790",
    "commit_id": "ababb64e0c792ad2a314245233db0833ba12036b",
    "added_lines": [
      "static unsigned int UTFCharLength(uint8 lead",
      "if (lead < 0x80",
      "return 1",
      "else if ((lead >> 5) == 0x6",
      "return 2",
      "else if ((lead >> 4) == 0xe",
      "return 3",
      "else if ((lead >> 3) == 0x1e",
      "return 4",
      "else",
      "return 0",
      "const size_t SrcLength = UTF8string.length",
      "for (_Length=0, i=0; i<SrcLength; _Length++)",
      "const unsigned int CharLength = UTFCharLength(static_cast<uint8>(UTF8string[i]",
      "if ((CharLength >= 1) && (CharLength <= 4",
      "i += CharLength",
      "for (j=0, i=0; i<SrcLength; j++)",
      "const uint8 lead              = static_cast<uint8>(UTF8string[i]",
      "const unsigned int CharLength = UTFCharLength(lead",
      "if ((CharLength < 1) || (CharLength > 4",
      "break",
      "if ((i + CharLength) > SrcLength",
      "break",
      "if (CharLength == 1",
      "else if (CharLength == 2",
      "else if (CharLength == 3",
      "else if (CharLength == 4",
      "i += CharLength"
    ],
    "removed_lines": [
      "for (_Length=0, i=0; i<UTF8string.length(); _Length++)",
      "uint8 lead = static_cast<uint8>(UTF8string[i]",
      "if (lead < 0x80",
      "i++",
      "else if ((lead >> 5) == 0x6",
      "i += 2",
      "else if ((lead >> 4) == 0xe",
      "i += 3",
      "else if ((lead >> 3) == 0x1e",
      "i += 4",
      "for (j=0, i=0; i<UTF8string.length(); j++)",
      "uint8 lead = static_cast<uint8>(UTF8string[i]",
      "if (lead < 0x80)",
      "i++",
      "} else if ((lead >> 5) == 0x6)",
      "i += 2",
      "} else if ((lead >> 4) == 0xe)",
      "i += 3",
      "} else if ((lead >> 3) == 0x1e)",
      "i += 4",
      "} else",
      "break"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "invalid memory access"
    ]
  },
  {
    "index": 904,
    "id": "CVE-2015-4176",
    "commit_id": "e0c9c0afd2fc958ffa34b697972721d81df8a56f",
    "added_lines": [
      "UMOUNT_CONNECTED = 4,",
      "disconnect = !(((how & UMOUNT_CONNECTED) &&",
      "mnt_has_parent(p) &&",
      "(p->mnt_parent->mnt.mnt_flags & MNT_UMOUNT)) ||",
      "IS_MNT_LOCKED_AND_LAZY(p",
      "else umount_tree(mnt, UMOUNT_CONNECTED"
    ],
    "removed_lines": [
      "disconnect = !IS_MNT_LOCKED_AND_LAZY(p",
      "else umount_tree(mnt, 0"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly support mount connectivity"
    ]
  },
  {
    "index": 913,
    "id": "CVE-2014-9903",
    "commit_id": "4efbc454ba68def5ef285b26ebfcfdb605b52755",
    "added_lines": [
      "ret = copy_to_user(uattr, attr, attr->size"
    ],
    "removed_lines": [
      "ret = copy_to_user(uattr, attr, usize"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect size"
    ]
  },
  {
    "index": 914,
    "id": "CVE-2014-9895",
    "commit_id": "c88e739b1fad662240e99ecbd0bdaac871717987",
    "added_lines": [
      "memset(&pad, 0, sizeof(pad",
      "memset(&link, 0, sizeof(link"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "internal bug",
      "does not properly initialize certain data structures,"
    ]
  },
  {
    "index": 935,
    "id": "CVE-2017-1000380",
    "commit_id": "ba3021b2c79b2fa9114f92790a99deb27a65b728",
    "added_lines": [
      "tu->qhead = tu->qtail = tu->qused = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "data race",
      "uninitialized memory"
    ]
  },
  {
    "index": 967,
    "id": "CVE-2017-16994",
    "commit_id": "373c4557d2aa362702c4c2d41288fb1e54990b7c",
    "added_lines": [
      "if (pte",
      "else if (walk->pte_hole",
      "err = walk->pte_hole(addr, next, walk"
    ],
    "removed_lines": [
      "if (pte && walk->hugetlb_entry"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles holes in hugetlb ranges"
    ]
  },
  {
    "index": 977,
    "id": "CVE-2017-16642",
    "commit_id": "5c0455bf2c8cd3c25401407f158e820aa3b239e1",
    "added_lines": [
      "<?xml version='1.0'?>",
      "<!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>",
      "<wddxPacket version='1.0'>",
      "<header/>",
      "<data>",
      "<struct>",
      "<var name='aDateTime'>",
      "<dateTime>frONt of 0 0</dateTime>",
      "</var>",
      "</struct>",
      "</data>",
      "</wddxPacket>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "leak information",
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 993,
    "id": "CVE-2017-16355",
    "commit_id": "4043718264095cde6623c2cbe8c644541036d7bf",
    "added_lines": [
      "#ifdef false",
      "#endif"
    ],
    "removed_lines": [
      "inferApplicationInfo(info"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 1.2,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1001,
    "id": "CVE-2017-15537",
    "commit_id": "814fb7bb7db5433757d76f4c4502c96fc53b0b5e",
    "added_lines": [
      "if (using_compacted_format())",
      "} else",
      "if (!err && state_size > offsetof(struct xregs_state, header) && fpu->state.xsave.header.xcomp_bv",
      "err = -EINVAL"
    ],
    "removed_lines": [
      "if (using_compacted_format",
      "else"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not correctly handle attempts to set reserved bits in the xstate header via the ptrace() or rt_sigreturn() system call"
    ]
  },
  {
    "index": 1006,
    "id": "CVE-2017-15277",
    "commit_id": "9fd10cf630832b36a588c1545d8736539b2f1fb5",
    "added_lines": [
      "(void) ResetMagickMemory(global_colormap,0,3*MagickMax(global_colors,256)*",
      "sizeof(*global_colormap"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "uninitialized palette"
    ]
  },
  {
    "index": 1015,
    "id": "CVE-2017-14991",
    "commit_id": "3e0097499839e0fe3af380410eababe5a47c4cf9",
    "added_lines": [
      "rinfo = kzalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,",
      "GFP_KERNEL"
    ],
    "removed_lines": [
      "memset(&rinfo[val], 0, SZ_SG_REQ_INFO",
      "rinfo = kmalloc(SZ_SG_REQ_INFO * SG_MAX_QUEUE,",
      "GFP_KERNEL"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 1048,
    "id": "CVE-2017-14140",
    "commit_id": "197e7e521384a23b9e585178f3f11c9fa08274b9",
    "added_lines": [
      "#include <linux/ptrace.h>",
      "if (!ptrace_may_access(task, PTRACE_MODE_READ_REALCREDS))"
    ],
    "removed_lines": [
      "const struct cred *cred = current_cred(), *tcred",
      "tcred = __task_cred(task",
      "if (!uid_eq(cred->euid, tcred->suid) && !uid_eq(cred->euid, tcred->uid) &&",
      "!uid_eq(cred->uid,  tcred->suid) && !uid_eq(cred->uid,  tcred->uid) &&",
      "!capable(CAP_SYS_NICE))"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "doesn't check the effective uid of the target process"
    ]
  },
  {
    "index": 1074,
    "id": "CVE-2017-13143",
    "commit_id": "51b0ae01709adc1e4a9245e158ef17b85a110960",
    "added_lines": [
      "(void) ResetMagickMemory(BImgBuff,0,ldblk*sizeof(double"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "uses uninitialized data",
      "uninitialized data"
    ]
  },
  {
    "index": 1200,
    "id": "CVE-2017-11448",
    "commit_id": "1737ac82b335e53376382c07b9a500d73dd2aa11",
    "added_lines": [
      "(void) ResetMagickMemory(jpeg_pixels,0,image->columns*",
      "jpeg_info.output_components*sizeof(*jpeg_pixels"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "uninitialized memory"
    ]
  },
  {
    "index": 1211,
    "id": "CVE-2017-10911",
    "commit_id": "089bc0143f489bd3a4578bdff5f4ca68fb26f341",
    "added_lines": [
      "struct blkif_response",
      "struct blkif_response __packed",
      "struct blkif_response"
    ],
    "removed_lines": [
      "struct blkif_common_response",
      "char dummy",
      "#pragma pack(push, 4",
      "struct blkif_x86_32_response",
      "uint64_t        id;",
      "uint8_t         operation;",
      "int16_t         status;",
      "#pragma pack(pop",
      "struct blkif_x86_64_response",
      "uint64_t       __attribute__((__aligned__(8))) id",
      "uint8_t         operation;",
      "int16_t         status;",
      "struct blkif_common_response",
      "struct blkif_x86_32_response",
      "struct blkif_x86_64_response"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "uninitialized padding fields"
    ]
  },
  {
    "index": 1221,
    "id": "CVE-2017-9993",
    "commit_id": "a5d849b149ca67ced2d271dc84db0bc95a548abb",
    "added_lines": [
      "if (strcmp(sub_demuxer->name, \"srt\") && strcmp(sub_demuxer->name, \"ass\"",
      "goto error"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly restrict HTTP Live Streaming filename extensions and demuxer names"
    ]
  },
  {
    "index": 1231,
    "id": "CVE-2017-9605",
    "commit_id": "07678eca2cf9c9a18584e546c2b2a0d0c9a3150c",
    "added_lines": [
      "uint32_t backup_handle = 0",
      "if (ret == 0)",
      "if (res->backup->base.num_pages * PAGE_SIZE <",
      "res->backup_size)",
      "DRM_ERROR(\"Surface backup buffer is too small.\\n\"",
      "vmw_dmabuf_unreference(&res->backup",
      "ret = -EINVAL",
      "goto out_unlock",
      "} else",
      "backup_handle = req->buffer_handle"
    ],
    "removed_lines": [
      "uint32_t backup_handle",
      "if (ret == 0 && res->backup->base.num_pages * PAGE_SIZE <",
      "res->backup_size)",
      "DRM_ERROR(\"Surface backup buffer is too small.\\n\"",
      "vmw_dmabuf_unreference(&res->backup",
      "ret = -EINVAL",
      "goto out_unlock"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call",
      "defines a backup_handle variable but does not give it an initial value"
    ]
  },
  {
    "index": 1255,
    "id": "CVE-2017-9150",
    "commit_id": "0d0e57697f162da4aa218b5feafe614fb666db07",
    "added_lines": [
      "static void print_bpf_insn(const struct bpf_verifier_env *env,",
      "const struct bpf_insn *insn",
      "} else if (BPF_MODE(insn->code) == BPF_IMM &&",
      "BPF_SIZE(insn->code) == BPF_DW)",
      "u64 imm = ((u64)(insn + 1)->imm << 32) | (u32)insn->imm",
      "bool map_ptr = insn->src_reg == BPF_PSEUDO_MAP_FD",
      "if (map_ptr && !env->allow_ptr_leaks",
      "imm = 0",
      "verbose(\"(%02x) r%d = 0x%llx\\n\", insn->code,",
      "insn->dst_reg, (unsigned long long)imm",
      "print_bpf_insn(env, insn"
    ],
    "removed_lines": [
      "static void print_bpf_insn(struct bpf_insn *insn",
      "} else if (BPF_MODE(insn->code) == BPF_IMM)",
      "verbose(\"(%02x) r%d = 0x%x\\n\",",
      "insn->code, insn->dst_reg, insn->imm",
      "print_bpf_insn(insn"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not make the allow_ptr_leaks value available for restricting the output of the print_bpf_insn function"
    ]
  },
  {
    "index": 1260,
    "id": "CVE-2017-9098",
    "commit_id": "1c358ffe0049f768dd49a8a889c1cbf99ac9849b",
    "added_lines": [
      "(void) ResetMagickMemory(pixels,0,pixel_info_length"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "uninitialized memory"
    ]
  },
  {
    "index": 1268,
    "id": "CVE-2017-8924",
    "commit_id": "654b404f2a222f918af9b0cd18ad469d0c941a8e",
    "added_lines": [
      "if (urb->actual_length > 0 && edge_port->lsr_event)"
    ],
    "removed_lines": [
      "if (edge_port->lsr_event)"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "integer underflow",
      "integer underflow"
    ]
  },
  {
    "index": 1305,
    "id": "CVE-2017-7616",
    "commit_id": "cf01fb9985e8deb25ccf0ea54d916b8871ae0e62",
    "added_lines": [
      "if (compat_get_bitmap(bm, nmask, nr_bits",
      "return -EFAULT",
      "if (copy_to_user(nm, bm, alloc_size",
      "return -EFAULT",
      "if (compat_get_bitmap(nodes_addr(bm), nmask, nr_bits",
      "return -EFAULT",
      "if (copy_to_user(nm, nodes_addr(bm), alloc_size",
      "return -EFAULT"
    ],
    "removed_lines": [
      "long err = 0",
      "err = compat_get_bitmap(bm, nmask, nr_bits",
      "err |= copy_to_user(nm, bm, alloc_size",
      "if (err",
      "return -EFAULT",
      "long err = 0",
      "err = compat_get_bitmap(nodes_addr(bm), nmask, nr_bits",
      "err |= copy_to_user(nm, nodes_addr(bm), alloc_size",
      "if (err",
      "return -EFAULT"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect error handling"
    ]
  },
  {
    "index": 1312,
    "id": "CVE-2017-7495",
    "commit_id": "06bd3c36a733ac27962fea7d6f47168841376824",
    "added_lines": [
      "if (map->m_flags & EXT4_MAP_NEW &&",
      "!(map->m_flags & EXT4_MAP_UNWRITTEN) &&",
      "!(flags & EXT4_GET_BLOCKS_ZERO) &&",
      "!IS_NOQUOTA(inode) &&",
      "ext4_should_order_data(inode))",
      "ret = ext4_jbd2_file_inode(handle, inode",
      "if (ret",
      "return ret"
    ],
    "removed_lines": [
      "if (ext4_test_inode_state(inode, EXT4_STATE_ORDERED_MODE))",
      "ret = ext4_jbd2_file_inode(handle, inode",
      "if (ret)",
      "unlock_page(page",
      "put_page(page",
      "goto errout"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles a needs-flushing-before-commit list"
    ]
  },
  {
    "index": 1393,
    "id": "CVE-2017-5550",
    "commit_id": "b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb",
    "added_lines": [
      "static inline void pipe_truncate(struct iov_iter *i",
      "struct pipe_inode_info *pipe = i->pipe",
      "if (pipe->nrbufs)",
      "size_t off = i->iov_offset",
      "int idx = i->idx",
      "int nrbufs = (idx - pipe->curbuf) & (pipe->buffers - 1",
      "if (off)",
      "pipe->bufs[idx].len = off - pipe->bufs[idx].offset",
      "idx = next_idx(idx, pipe",
      "nrbufs++",
      "while (pipe->nrbufs > nrbufs)",
      "pipe_buf_release(pipe, &pipe->bufs[idx]",
      "idx = next_idx(idx, pipe",
      "pipe->nrbufs--",
      "struct pipe_buffer *buf",
      "size_t off = i->iov_offset, left = size",
      "int idx = i->idx",
      "left += off - pipe->bufs[idx].offset",
      "if (left <= buf->len",
      "left -= buf->len",
      "i->iov_offset = buf->offset + left",
      "i->count -= size",
      "pipe_truncate(i",
      "WARN_ON(pipe->nrbufs == pipe->buffers"
    ],
    "removed_lines": [
      "struct pipe_buffer *buf",
      "int idx = i->idx",
      "size_t off = i->iov_offset, orig_sz",
      "orig_sz = size",
      "size += off - pipe->bufs[idx].offset",
      "if (size <= buf->len",
      "size -= buf->len",
      "buf->len = size",
      "off = i->iov_offset = buf->offset + size",
      "if (off",
      "idx = next_idx(idx, pipe",
      "if (pipe->nrbufs)",
      "int unused = (pipe->curbuf + pipe->nrbufs) & (pipe->buffers - 1",
      "while (idx != unused)",
      "pipe_buf_release(pipe, &pipe->bufs[idx]",
      "idx = next_idx(idx, pipe",
      "pipe->nrbufs--",
      "i->count -= orig_sz"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "off-by-one",
      "off-by-one error"
    ]
  },
  {
    "index": 1394,
    "id": "CVE-2017-5549",
    "commit_id": "146cc8a17a3b4996f6805ee5c080e7101277c410",
    "added_lines": [
      "if (rc != KLSI_STATUSBUF_LEN)",
      "dev_err(&port->dev, \"reading line status failed: %d\\n\", rc",
      "if (rc >= 0",
      "rc = -EIO",
      "} else"
    ],
    "removed_lines": [
      "if (rc < 0",
      "dev_err(&port->dev, \"Reading line status failed (error = %d)\\n\",",
      "rc",
      "else"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "places uninitialized heap-memory contents into a log"
    ]
  },
  {
    "index": 1414,
    "id": "CVE-2017-3736",
    "commit_id": "4443cf7aa0099e5ce615c18cee249fff77fb0871",
    "added_lines": [
      "xor\t$zero,$zero",
      "sub\t16+8(%rsp),%rbx\t\t# mov 16(%rsp),%cf",
      "adcx\t$zero,%r8",
      "adcx\t$zero,%r9",
      "adc\t\\$0,%r10",
      "adc\t\\$0,%r11",
      "adc\t\\$0,%r12",
      "adc\t\\$0,%r13",
      "adc\t\\$0,%r14",
      "adc\t\\$0,%r15"
    ],
    "removed_lines": [
      "sub\t16+8(%rsp),%r8\t\t# consume last carry",
      "xor\t%ebp,%ebp\t\t# xor\t$zero,$zero"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "carry propagating bug"
    ]
  },
  {
    "index": 1417,
    "id": "CVE-2017-3732",
    "commit_id": "a59b90bf491410f1f2bc4540cc21f1980fd14c5b",
    "added_lines": [
      "xor\t%rax,%rax",
      "adc\t\\$0,%r15",
      "adc\t\\$0,%rax",
      "xor\t%rax,%rax",
      "adc\t\\$0,%r15",
      "adc\t\\$0,%rax",
      "adc\t\\$0,%rax\t\t# top-most carry"
    ],
    "removed_lines": [
      "adc\t\\$0,%r15\t\t# can't overflow, because we",
      "# started with \"overhung\" part",
      "# of multiplication",
      "xor\t%rax,%rax",
      "adc\t\\$0,%r15\t\t# can't overflow, because we",
      "# started with \"overhung\" part",
      "# of multiplication",
      "mov\t$carry,%rax\t\t# xor\t%rax,%rax",
      "adc\t%rax,%rax\t\t# top-most carry"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "OpenSSL 1.0.2",
      "carry propagating bug"
    ]
  },
  {
    "index": 1426,
    "id": "CVE-2017-0380",
    "commit_id": "09ea89764a4d3a907808ed7d4fe42abfe64bd486",
    "added_lines": [
      "base32_encode(serviceid, REND_SERVICE_ID_LEN_BASE32 + 1,",
      "rend_pk_digest, REND_SERVICE_ID_LEN"
    ],
    "removed_lines": [
      "base32_encode(serviceid, REND_SERVICE_ID_LEN_BASE32 + 1,",
      "rend_pk_digest, REND_SERVICE_ID_LEN"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "uninitialized stack data is included in an error message about construction of an introduction point circuit"
    ]
  },
  {
    "index": 1427,
    "id": "CVE-2017-0377",
    "commit_id": "665baf5ed5c6186d973c46cdea165c0548027350",
    "added_lines": [
      "int addrs_in_same_network_family(const tor_addr_t *a1,",
      "const tor_addr_t *a2"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "leveraging the existence of large families"
    ]
  },
  {
    "index": 1435,
    "id": "CVE-2016-10351",
    "commit_id": "388703b9ca1912a5438e37f9dd54c35805f2c594",
    "added_lines": [
      "if (!gWorkingDir.isEmpty())",
      "QDir().mkpath(gWorkingDir",
      "QFile::setPermissions(gWorkingDir,",
      "QFileDevice::ReadUser | QFileDevice::WriteUser | QFileDevice::ExeUser"
    ],
    "removed_lines": [
      "if (!gWorkingDir.isEmpty()) QDir().mkpath(gWorkingDir"
    ],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "permissions"
    ]
  },
  {
    "index": 1509,
    "id": "CVE-2016-10011",
    "commit_id": "ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9",
    "added_lines": [
      "int r, dontmax = 0",
      "if ((st.st_mode & S_IFREG) == 0 || st.st_size <= 0)",
      "st.st_size = 64*1024;",
      "dontmax = 1",
      "if ((r = sshbuf_allocate(blob, st.st_size)) != 0 ||",
      "(dontmax && (r = sshbuf_set_max_size(blob, st.st_size)) != 0",
      "return r"
    ],
    "removed_lines": [
      "int r"
    ],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly consider the effects of realloc on buffer contents",
      "does not properly consider"
    ]
  },
  {
    "index": 1630,
    "id": "CVE-2015-5070",
    "commit_id": "b2738ffb2fdd2550ececb74f76f75583c43c8b59",
    "added_lines": [
      "if (looks_like_pbl(filename))"
    ],
    "removed_lines": [
      "if (ends_with(filename, \".pbl\"))"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info File Inclusion",
    "score": 3.5,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info File Inclusion ",
    "summary": [
      "vectors related to inclusion of .pbl files from WML."
    ]
  },
  {
    "index": 1631,
    "id": "CVE-2015-5069",
    "commit_id": "f8914468182e8d0a1551b430c0879ba236fe4d6d",
    "added_lines": [
      "if (ends_with(filename, \".pbl\"))",
      "ERR_FS << \"Illegal path '\" << filename << \"' (.pbl files are not allowed).\" << std::endl",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info File Inclusion",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "+Info File Inclusion ",
    "summary": [
      "vectors related to inclusion of .pbl files from WML."
    ]
  },
  {
    "index": 1643,
    "id": "CVE-2015-1870",
    "commit_id": "7d023c32a565e83306cddf34c894477b7aaf33d1",
    "added_lines": [
      "# reporting. (default:/var/spool/abrt",
      "#DumpLocation = /var/spool/abrt"
    ],
    "removed_lines": [
      "# reporting. (default:/var/tmp/abrt",
      "#DumpLocation = /var/tmp/abrt"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 1659,
    "id": "CVE-2011-3177",
    "commit_id": "7fe2e3df308b8b6a901cb2cfd60f398df53219de",
    "added_lines": [
      "-------------------------------------------------------------------",
      "Mon Nov  7 18:19:27 CET 2011 - mvidner@suse.cz",
      "- ini-agent: added Write(.section_private.SECTION, BOOLEAN",
      "(bnc#713661, CVE-2011-3177",
      "- system agent: added  Write(.target.string, [filename, mode], content",
      "- 2.22.1"
    ],
    "removed_lines": [],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "permissions"
    ]
  },
  {
    "index": 1688,
    "id": "CVE-2018-20511",
    "commit_id": "9824dfae5741275473a23a7ed5756c7b6efacc9d",
    "added_lines": [
      "if (rp)",
      "memset(&rcp2, 0, sizeof(rcp2",
      "rcp2.ip    = rp->ip",
      "rcp2.at    = rp->at",
      "rcp2.flags = rp->flags"
    ],
    "removed_lines": [
      "if (rp",
      "memcpy(&rcp2, rp, sizeof(rcp2"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 1711,
    "id": "CVE-2018-19045",
    "commit_id": "c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067",
    "added_lines": [
      "extern bool umask_cmdline"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "used mode 0666"
    ]
  },
  {
    "index": 1715,
    "id": "CVE-2018-18710",
    "commit_id": "e4f3aa2e1e67bb48dfbaaf1cad59013d5a5bc276",
    "added_lines": [
      "if (arg >= cdi->capacity"
    ],
    "removed_lines": [
      "if ((int)arg >= cdi->capacity"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "bounds check",
      "information leak"
    ]
  },
  {
    "index": 1745,
    "id": "CVE-2018-16658",
    "commit_id": "8f3fafc9c2f0ece10832c25f7ffcb07c97a32ad4",
    "added_lines": [
      "if (arg >= cdi->capacity"
    ],
    "removed_lines": [
      "if (((int)arg >= cdi->capacity"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 3.6,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "bounds check",
      "information leak"
    ]
  },
  {
    "index": 1766,
    "id": "CVE-2018-16323",
    "commit_id": "216d117f05bff87b9dc4db55a1b1fadb38bcb786",
    "added_lines": [
      "data=(unsigned char *) RelinquishMagickMemory(data",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\"",
      "data=(unsigned char *) RelinquishMagickMemory(data",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\""
    ],
    "removed_lines": [
      "break",
      "break"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "leaves data uninitialized"
    ]
  },
  {
    "index": 1782,
    "id": "CVE-2018-15594",
    "commit_id": "5800dc5c19f34e6e03b5adab1282535cb102fafd",
    "added_lines": [
      "if (len < 5)",
      "#ifdef CONFIG_RETPOLINE",
      "WARN_ONCE(\"Failing to patch indirect CALL in %ps\\n\", (void *)addr",
      "#endif",
      "if (len < 5)",
      "#ifdef CONFIG_RETPOLINE",
      "WARN_ONCE(\"Failing to patch indirect JMP in %ps\\n\", (void *)addr",
      "#endif"
    ],
    "removed_lines": [
      "if (tgt_clobbers & ~site_clobbers",
      "return len;",
      "if (len < 5",
      "if (len < 5"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles certain indirect calls"
    ]
  },
  {
    "index": 1788,
    "id": "CVE-2018-15473",
    "commit_id": "779974d35b4859c07bc3cb8a12c74b43b0a7d1e0",
    "added_lines": [
      "struct sshbuf *b = NULL",
      "char *pkalg = NULL, *userstyle = NULL, *key_s = NULL, *ca_s = NULL",
      "u_char *pkblob = NULL, *sig = NULL, have_sig",
      "if (!authctxt->valid || authctxt->user == NULL)",
      "debug2(\"%s: disabled because of invalid user\",",
      "__func__",
      "goto done",
      "if (!authctxt->valid || authctxt->user == NULL)",
      "debug2(\"%s: disabled because of invalid user\",",
      "__func__",
      "goto done",
      "free(sig"
    ],
    "removed_lines": [
      "struct sshbuf *b",
      "char *pkalg, *userstyle = NULL, *key_s = NULL, *ca_s = NULL",
      "u_char *pkblob, *sig, have_sig",
      "if (!authctxt->valid)",
      "debug2(\"%s: disabled because of invalid user\", __func__",
      "return 0",
      "free(sig"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "user enumeration"
    ]
  },
  {
    "index": 1789,
    "id": "CVE-2018-15132",
    "commit_id": "f151e048ed27f6f4eef729f3310d053ab5da71d4",
    "added_lines": [
      "char *dirname",
      "dirname = estrndup(link, link_len",
      "php_dirname(dirname, link_len",
      "if (php_check_open_basedir(dirname))",
      "efree(dirname",
      "RETURN_FALSE",
      "efree(dirname",
      "efree(dirname"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "doesn't implement the open_basedir check"
    ]
  },
  {
    "index": 1845,
    "id": "CVE-2018-12436",
    "commit_id": "9b9568d500f31f964af26ba8d01e542e1f27e5ca",
    "added_lines": [
      "if (err == MP_OKAY)",
      "if (mp_iszero(k) == MP_YES",
      "err = MP_ZERO_E",
      "mp_int b",
      "if (err == MP_OKAY)",
      "err = mp_init(&b",
      "if (err == MP_OKAY && key->idx == ECC_CUSTOM_IDX)",
      "if (err == MP_OKAY)",
      "do",
      "if (++loop_check > 64)",
      "err = RNG_FAILURE_E",
      "break",
      "err = wc_ecc_gen_k(rng, key->dp->size, &b, curve->order",
      "while (err == MP_ZERO_E",
      "loop_check = 0",
      "key->dp->id",
      "= b.(e/k.b + x.r/k.b) */",
      "err = mp_mulmod(&pubkey.k, &b, curve->order, &pubkey.k",
      "if (err != MP_OKAY) break",
      "err = mp_mulmod(&pubkey.k, s, curve->order, s",
      "if (err != MP_OKAY) break",
      "err = mp_mulmod(&pubkey.k, e, curve->order, e",
      "if (err != MP_OKAY) break",
      "= (e + x.r)/k.b */",
      "= (e + x.r)/k */",
      "err = mp_mulmod(s, &b, curve->order, s",
      "err = mp_mod(s, curve->order, s",
      "if (err != MP_OKAY) break",
      "mp_clear(&b",
      "mp_free(&b"
    ],
    "removed_lines": [
      "if (err == MP_OKAY)",
      "if (mp_iszero(k) == MP_YES",
      "err = MP_ZERO_E",
      "if (key->idx == ECC_CUSTOM_IDX)",
      "key->dp->id",
      "err = mp_mod(s, curve->order, s",
      "err = mp_mulmod(s, &pubkey.k, curve->order, s"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "side-channel attack"
    ]
  },
  {
    "index": 1846,
    "id": "CVE-2018-12435",
    "commit_id": "48fc8df51d99f9d8ba251219367b3d629cc848e3",
    "added_lines": [
      "const std::string& emsa,",
      "RandomNumberGenerator& rng) :",
      "m_b = m_group.random_scalar(rng",
      "m_b_inv = m_group.inverse_mod_order(m_b",
      "BigInt m_b, m_b_inv",
      "const BigInt k_inv = m_group.inverse_mod_order(k",
      "m_b = m_group.square_mod_order(m_b",
      "m_b_inv = m_group.square_mod_order(m_b_inv",
      "m = m_group.multiply_mod_order(m_b, m",
      "const BigInt xr = m_group.multiply_mod_order(m_x, m_b, r",
      "const BigInt s = m_group.multiply_mod_order(k_inv, xr + m, m_b_inv",
      "const BigInt u1 = m_group.multiply_mod_order(m_group.mod_order(e), w",
      "ECDSA_PrivateKey::create_signature_op(RandomNumberGenerator& rng,",
      "return std::unique_ptr<PK_Ops::Signature>(new ECDSA_Signature_Operation(*this, params, rng"
    ],
    "removed_lines": [
      "const std::string& emsa) :",
      "const BigInt k_inv = m_group.inverse_mod_order(k",
      "const BigInt xrm = m_group.mod_order(m_group.multiply_mod_order(m_x, r) + m",
      "const BigInt s = m_group.multiply_mod_order(k_inv, xrm",
      "const BigInt u1 = m_group.multiply_mod_order(e, w",
      "ECDSA_PrivateKey::create_signature_op(RandomNumberGenerator& ,",
      "return std::unique_ptr<PK_Ops::Signature>(new ECDSA_Signature_Operation(*this, params"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "side-channel attack"
    ]
  },
  {
    "index": 1865,
    "id": "CVE-2018-11508",
    "commit_id": "0a0b98734479aa5b3c671d5190e86273372cab95",
    "added_lines": [
      "memset(txc, 0, sizeof(struct timex"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1905,
    "id": "CVE-2018-9275",
    "commit_id": "0f6ceabab0a8849b47f67d727aa526c2656089ba",
    "added_lines": [
      "fclose(opwfile"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 6.4,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "successful logins can leak file descriptors to the auth mapping file"
    ]
  },
  {
    "index": 1906,
    "id": "CVE-2018-8970",
    "commit_id": "0654414afcce51a16d35d05060190a3ec4618d42",
    "added_lines": [
      "if (name != NULL && namelen == 0",
      "namelen = strlen(name"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.8,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not support a certain special case of a zero name length"
    ]
  },
  {
    "index": 1942,
    "id": "CVE-2018-6412",
    "commit_id": "250c6c49e3b68756b14983c076183568636e2bde",
    "added_lines": [
      "unsigned int index, count, i",
      "unsigned int index, count, i"
    ],
    "removed_lines": [
      "int index, count, i",
      "int index, count, i"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "integer signedness error",
      "information leak"
    ]
  },
  {
    "index": 1965,
    "id": "CVE-2018-1281",
    "commit_id": "4be817e8b03e7e92517e91f2dfcc50865e91c6ea",
    "added_lines": [
      "std::string hostname = node.hostname.empty() ? \"*\" : node.hostname",
      "std::string addr = local ? \"ipc:///tmp/\" : \"tcp://\" + hostname + \":\""
    ],
    "removed_lines": [
      "std::string addr = local ? \"ipc:///tmp/\" : \"tcp://*:\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 4.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2069,
    "id": "CVE-2019-16921",
    "commit_id": "df7e40425813c50cd252e6f5e348a81ef1acae56",
    "added_lines": [
      "struct hns_roce_ib_alloc_ucontext_resp resp ="
    ],
    "removed_lines": [
      "struct hns_roce_ib_alloc_ucontext_resp resp"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize the resp data structure"
    ]
  },
  {
    "index": 2070,
    "id": "CVE-2019-16910",
    "commit_id": "33f66ba6fd234114aa37f0209dac031bb2870a9b",
    "added_lines": [
      "TEST_INVALID_PARAM_RET( MBEDTLS_ERR_ECP_BAD_INPUT_DATA,",
      "mbedtls_ecdsa_sign_det_ext( NULL, &m, &m, &m,",
      "buf, sizeof( buf ),",
      "valid_md,",
      "rnd_std_rand, NULL )",
      "TEST_INVALID_PARAM_RET( MBEDTLS_ERR_ECP_BAD_INPUT_DATA,",
      "mbedtls_ecdsa_sign_det_ext( &grp, NULL, &m, &m,",
      "buf, sizeof( buf ),",
      "valid_md,",
      "rnd_std_rand, NULL )",
      "TEST_INVALID_PARAM_RET( MBEDTLS_ERR_ECP_BAD_INPUT_DATA,",
      "mbedtls_ecdsa_sign_det_ext( &grp, &m, NULL, &m,",
      "buf, sizeof( buf ),",
      "valid_md,",
      "rnd_std_rand, NULL )",
      "TEST_INVALID_PARAM_RET( MBEDTLS_ERR_ECP_BAD_INPUT_DATA,",
      "mbedtls_ecdsa_sign_det_ext( &grp, &m, &m, NULL,",
      "buf, sizeof( buf ),",
      "valid_md,",
      "rnd_std_rand, NULL )",
      "TEST_INVALID_PARAM_RET( MBEDTLS_ERR_ECP_BAD_INPUT_DATA,",
      "mbedtls_ecdsa_sign_det_ext( &grp, &m, &m, &m,",
      "NULL, sizeof( buf ),",
      "valid_md,",
      "rnd_std_rand, NULL )",
      "mbedtls_mpi_free( &r ); mbedtls_mpi_free( &s",
      "mbedtls_mpi_init( &r ); mbedtls_mpi_init( &s",
      "TEST_ASSERT",
      "mbedtls_ecdsa_sign_det_ext( &grp, &r, &s, &d, hash, hlen,",
      "md_alg, rnd_std_rand, NULL",
      "== 0",
      "TEST_ASSERT( mbedtls_mpi_cmp_mpi( &r, &r_check ) == 0",
      "TEST_ASSERT( mbedtls_mpi_cmp_mpi( &s, &s_check ) == 0"
    ],
    "removed_lines": [],
    "cause": [
      "Cryptographic Weakness",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "side-channel attack",
      "insufficient entropy for blinding"
    ]
  },
  {
    "index": 2072,
    "id": "CVE-2019-16714",
    "commit_id": "7d0a06586b2686ba80c4a2da5f91cb10ffbea736",
    "added_lines": [
      "minfo6.tos = inc->i_conn->c_tos",
      "minfo6.flags = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "tos and flags fields are not initialized"
    ]
  },
  {
    "index": 2164,
    "id": "CVE-2019-12529",
    "commit_id": "v4",
    "added_lines": [
      "if (l < 0 || l > NTLM_MAX_FIELD_LENGTH)",
      "debug(\"ntlm_fetch_string: insane string length (pkt-sz: %d, fetch len: %d, offset: %d)\\n\", packet_size,l,o",
      "else if (o <= 0 || o > packet_size)",
      "debug(\"ntlm_fetch_string: insane string offset (pkt-sz: %d, fetch len: %d, offset: %d)\\n\", packet_size,l,o",
      "return rv",
      "else if (l > packet_size - o)",
      "debug(\"ntlm_fetch_string: truncated string data (pkt-sz: %d, fetch len: %d, offset: %d)\\n\", packet_size,l,o",
      "return rv"
    ],
    "removed_lines": [
      "if (l < 0 || l > NTLM_MAX_FIELD_LENGTH || o + l > packet_size || o == 0)",
      "debug(\"ntlm_fetch_string: insane data (pkt-sz: %d, fetch len: %d, offset: %d)\\n\", packet_size,l,o"
    ],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "no checks to ensure that the length it calculates isn't greater than the input buffer"
    ]
  },
  {
    "index": 2166,
    "id": "CVE-2019-12210",
    "commit_id": "18b1914e32b74ff52000f10e97067e841e5fff62",
    "added_lines": [
      "int is_custom_debug_file"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 5.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "file descriptor is not closed when a new process is spawned"
    ]
  },
  {
    "index": 2167,
    "id": "CVE-2019-12209",
    "commit_id": "7db3386fcdb454e33a3ea30dcfb8e8960d4c3aa3",
    "added_lines": [
      "#include \"drop_privs.h\"",
      "int openasuser = 0",
      "PAM_MODUTIL_DEF_PRIVS(privs",
      "openasuser = geteuid() == 0 ? 1 : 0",
      "if (!openasuser)",
      "DBG(\"WARNING: not dropping privileges when reading %s, please \"",
      "\"consider setting openasuser=1 in the module configuration\", buf",
      "DBG(\"Using authentication file %s\", buf",
      "if (!openasuser)",
      "openasuser = geteuid() == 0 && cfg->openasuser",
      "DBG(\"Dropping privileges\"",
      "if (pam_modutil_drop_priv(pamh, &privs, pw))",
      "DBG(\"Unable to switch user to uid %i\", pw->pw_uid",
      "DBG(\"Switched to uid %i\", pw->pw_uid",
      "if (pam_modutil_regain_priv(pamh, &privs))",
      "DBG(\"could not restore privileges\"",
      "DBG(\"Restored privileges\""
    ],
    "removed_lines": [
      "int openasuser",
      "DBG(\"Using default authentication file %s\", buf",
      "openasuser = geteuid() == 0 && cfg->openasuser",
      "if (seteuid(pw_s.pw_uid))",
      "DBG(\"Unable to switch user to uid %i\", pw_s.pw_uid",
      "DBG(\"Switched to uid %i\", pw_s.pw_uid",
      "if (seteuid(0))",
      "DBG(\"Unable to switch back to uid 0\"",
      "DBG(\"Switched back to uid 0\""
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly verify that the path lacks symlinks pointing to other files on the system owned by root. If the debug option is enabled in the PAM configuration"
    ]
  },
  {
    "index": 2171,
    "id": "CVE-2019-12107",
    "commit_id": "bec6ccec63cadc95655721bc0e1dd49dac759d94",
    "added_lines": [
      "for (;;)",
      "obj->buffer = malloc(obj->buffersize",
      "if(!obj->buffer)",
      "syslog(LOG_ERR, \"%s: malloc returned NULL\", \"upnp_event_prepare\"",
      "if(xml)",
      "free(xml",
      "obj->state = EError",
      "return",
      "obj->tosend = snprintf(obj->buffer, obj->buffersize, notifymsg,",
      "obj->path, obj->addrstr, obj->portstr, l+2,",
      "obj->sub->uuid, obj->sub->seq,",
      "l, xml",
      "if (obj->tosend < 0)",
      "syslog(LOG_ERR, \"%s: snprintf() failed\", \"upnp_event_prepare\"",
      "if(xml)",
      "free(xml",
      "obj->state = EError",
      "return",
      "} else if (obj->tosend < obj->buffersize)",
      "break;",
      "free(obj->buffer",
      "obj->buffersize = obj->tosend + 1;"
    ],
    "removed_lines": [
      "obj->buffer = malloc(obj->buffersize",
      "if(!obj->buffer)",
      "syslog(LOG_ERR, \"%s: malloc returned NULL\", \"upnp_event_prepare\"",
      "if(xml)",
      "free(xml",
      "obj->state = EError",
      "return",
      "obj->tosend = snprintf(obj->buffer, obj->buffersize, notifymsg,",
      "obj->path, obj->addrstr, obj->portstr, l+2,",
      "obj->sub->uuid, obj->sub->seq,",
      "l, xml"
    ],
    "cause": [
      "Improper Input Validation",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "MEM_ALLOC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "MEM_ALLOC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "leak information",
      "improper validation of an snprintf return value"
    ]
  },
  {
    "index": 2180,
    "id": "CVE-2019-11884",
    "commit_id": "a1616a5ac99ede5d605047a9012481ce7ff18b16",
    "added_lines": [
      "ca.name[sizeof(ca.name)-1] = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "'0' character"
    ]
  },
  {
    "index": 2181,
    "id": "CVE-2019-11833",
    "commit_id": "592acbf16821288ecdc4192c47e3774a4c48bb64",
    "added_lines": [
      "size_t ext_size = 0",
      "ext_size = sizeof(struct ext4_extent_header) +",
      "sizeof(struct ext4_extent) * le16_to_cpu(neh->eh_entries",
      "memset(bh->b_data + ext_size, 0, inode->i_sb->s_blocksize - ext_size",
      "ext_size = sizeof(struct ext4_extent_header) +",
      "(sizeof(struct ext4_extent) * le16_to_cpu(neh->eh_entries",
      "memset(bh->b_data + ext_size, 0,",
      "inode->i_sb->s_blocksize - ext_size",
      "size_t ext_size = 0",
      "ext_size = sizeof(EXT4_I(inode)->i_data",
      "memmove(bh->b_data, EXT4_I(inode)->i_data, ext_size",
      "memset(bh->b_data + ext_size, 0, inode->i_sb->s_blocksize - ext_size"
    ],
    "removed_lines": [
      "memmove(bh->b_data, EXT4_I(inode)->i_data,",
      "sizeof(EXT4_I(inode)->i_data"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 5"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not zero out the unused memory",
      "uninitialized data"
    ]
  },
  {
    "index": 2206,
    "id": "CVE-2019-10638",
    "commit_id": "df453700e8d81b1bdafdf684365ee2b9431fb702",
    "added_lines": [
      "static u32 __ipv6_select_ident(struct net *net,",
      "const struct",
      "struct in6_addr dst",
      "struct in6_addr src",
      "} __aligned(SIPHASH_ALIGNMENT) combined =",
      ".dst = *dst,",
      ".src = *src,",
      "if (unlikely(siphash_key_is_zero(&net->ipv4.ip_id_key",
      "get_random_bytes(&net->ipv4.ip_id_key,",
      "sizeof(net->ipv4.ip_id_key",
      "hash = siphash(&combined, sizeof(combined), &net->ipv4.ip_id_key",
      "id = __ipv6_select_ident(net, &addrs[1], &addrs[0]",
      "id = __ipv6_select_ident(net, daddr, saddr"
    ],
    "removed_lines": [
      "static u32 __ipv6_select_ident(struct net *net, u32 hashrnd,",
      "hash = __ipv6_addr_jhash(dst, hashrnd",
      "hash = __ipv6_addr_jhash(src, hash",
      "hash ^= net_hash_mix(net",
      "static u32 ip6_proxy_idents_hashrnd __read_mostly",
      "net_get_random_once(&ip6_proxy_idents_hashrnd,",
      "sizeof(ip6_proxy_idents_hashrnd",
      "id = __ipv6_select_ident(net, ip6_proxy_idents_hashrnd,",
      "&addrs[1], &addrs[0]",
      "static u32 ip6_idents_hashrnd __read_mostly",
      "net_get_random_once(&ip6_idents_hashrnd, sizeof(ip6_idents_hashrnd",
      "id = __ipv6_select_ident(net, ip6_idents_hashrnd, daddr, saddr"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "hash collisions"
    ]
  },
  {
    "index": 2222,
    "id": "CVE-2019-6976",
    "commit_id": "00622428bda8d7521db8d74260b519fa41d69d0a",
    "added_lines": [
      "buf = g_malloc0( size",
      "if( !(buf = g_try_malloc0( size )) )"
    ],
    "removed_lines": [
      "buf = g_malloc( size",
      "if( !(buf = g_try_malloc( size )) )"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 5"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "uninitialized memory",
      "does not zero out allocated memory"
    ]
  },
  {
    "index": 2225,
    "id": "CVE-2019-5489",
    "commit_id": "574823bfab82d9d8fa47f422778043fbb4b4f50e",
    "added_lines": [
      "unsigned char *vec = walk->private",
      "unsigned long nr = (end - addr) >> PAGE_SHIFT",
      "memset(vec, 0, nr",
      "walk->private += nr",
      "memset(vec, 1, nr"
    ],
    "removed_lines": [
      "static unsigned char mincore_page(struct address_space *mapping, pgoff_t pgoff",
      "unsigned char present = 0",
      "struct page *page",
      "#ifdef CONFIG_SWAP",
      "if (shmem_mapping(mapping))",
      "page = find_get_entry(mapping, pgoff",
      "if (xa_is_value(page))",
      "swp_entry_t swp = radix_to_swp_entry(page",
      "page = find_get_page(swap_address_space(swp),",
      "swp_offset(swp",
      "} else",
      "page = find_get_page(mapping, pgoff",
      "#else",
      "page = find_get_page(mapping, pgoff",
      "#endif",
      "if (page)",
      "present = PageUptodate(page",
      "put_page(page",
      "return present",
      "static int __mincore_unmapped_range(unsigned long addr, unsigned long end,",
      "struct vm_area_struct *vma, unsigned char *vec",
      "unsigned long nr = (end - addr) >> PAGE_SHIFT",
      "int i",
      "if (vma->vm_file)",
      "pgoff_t pgoff",
      "pgoff = linear_page_index(vma, addr",
      "for (i = 0; i < nr; i++, pgoff++",
      "vec[i] = mincore_page(vma->vm_file->f_mapping, pgoff",
      "} else",
      "for (i = 0; i < nr; i++",
      "vec[i] = 0",
      "return nr",
      "walk->private += __mincore_unmapped_range(addr, end,",
      "walk->vma, walk->private",
      "__mincore_unmapped_range(addr, end, vma, vec",
      "__mincore_unmapped_range(addr, addr + PAGE_SIZE,",
      "vma, vec",
      "if (non_swap_entry(entry))",
      "} else",
      "#ifdef CONFIG_SWAP",
      "swp_offset(entry",
      "#else",
      "WARN_ON(1",
      "#endif"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2229,
    "id": "CVE-2019-3569",
    "commit_id": "97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "added_lines": [
      "$host = 'localhost'",
      "$r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id",
      "$host_name = \"hphpd.debugger.\".\\php_uname('n'",
      "var_dump(request('localhost', $serverPort, $request"
    ],
    "removed_lines": [
      "$host = php_uname('n'",
      "$r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id",
      "$host_name = \"hphpd.debugger.\".php_uname('n'",
      "var_dump(request(php_uname('n'), $serverPort, $request"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "would bind by default to all available interfaces"
    ]
  },
  {
    "index": 2262,
    "id": "CVE-2018-18839",
    "commit_id": "92327c9ec211bd1616315abcb255861b130b97ca",
    "added_lines": [
      "void fix_google_param(char *s)",
      "if(unlikely(!s)) return",
      "for( ; *s ;s++)",
      "if(!isalnum(*s) && *s != '.' && *s != '_' && *s != '-'",
      "fix_google_param(google_out",
      "fix_google_param(google_sig",
      "fix_google_param(google_reqId",
      "fix_google_param(google_version",
      "fix_google_param(responseHandler",
      "fix_google_param(outFileName"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Full Path Disclosure"
    ]
  },
  {
    "index": 2319,
    "id": "CVE-2013-3232",
    "commit_id": "c802d759623acbd6e1ee9fbdabae89159a513913",
    "added_lines": [
      "memset(sax, 0, sizeof(*sax"
    ],
    "removed_lines": [
      "memset(sax, 0, sizeof(sax"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not initialize a certain data structure",
      "recvfrom",
      "recvmsg"
    ]
  },
  {
    "index": 2322,
    "id": "CVE-2012-6546",
    "commit_id": "3c0c5cfdcd4d69ffc4b9c0907cec99039f30a50a",
    "added_lines": [
      "memset(addr, 0, sizeof(*addr"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures"
    ]
  },
  {
    "index": 2323,
    "id": "CVE-2012-6545",
    "commit_id": "9ad2de43f1aee7e7274a4e0d41465489299e344b",
    "added_lines": [
      "sec.key_size = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 2324,
    "id": "CVE-2012-6545",
    "commit_id": "f9432c5ec8b1e9a09b9b0e5569e3c73db8de432a",
    "added_lines": [
      "dl = kzalloc(size, GFP_KERNEL"
    ],
    "removed_lines": [
      "dl = kmalloc(size, GFP_KERNEL"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 2325,
    "id": "CVE-2012-6544",
    "commit_id": "792039c73cf176c8e39a6e8beef2c94ff46522ed",
    "added_lines": [
      "memset(la, 0, sizeof(struct sockaddr_l2"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 2326,
    "id": "CVE-2012-6544",
    "commit_id": "3f68ba07b1da811bf383b4b701b129bfcb2e4988",
    "added_lines": [
      "haddr->hci_channel= 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly initialize certain structures"
    ]
  },
  {
    "index": 2327,
    "id": "CVE-2012-6537",
    "commit_id": "1f86840f897717f86d523a13e99a447e6a5d2fa5",
    "added_lines": [
      "memset(up, 0, sizeof(*up"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 2328,
    "id": "CVE-2012-6537",
    "commit_id": "7b789836f434c87168eab067cfbed1ec4783dffd",
    "added_lines": [
      "memset(p, 0, sizeof(*p"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain structures",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 2361,
    "id": "CVE-2016-5842",
    "commit_id": "d8ab7f046587f2e9f734b687ba7e6e10147c294b",
    "added_lines": [
      "unsigned int",
      "value=(unsigned int) buffer[0] << 24",
      "value|=(unsigned int) buffer[1] << 16",
      "value|=(unsigned int) buffer[2] << 8",
      "value|=(unsigned int) buffer[3]",
      "quantum.unsigned_value=value & 0xffffffff",
      "value=(unsigned short) buffer[0] << 8",
      "value|=(unsigned short) buffer[1]",
      "quantum.unsigned_value=value & 0xffff",
      "value=(unsigned int) buffer[3] << 24",
      "value|=(unsigned int) buffer[2] << 16",
      "value|=(unsigned int) buffer[1] << 8",
      "value|=(unsigned int) buffer[0]",
      "quantum.unsigned_value=value & 0xffffffff",
      "value=(unsigned int) buffer[0] << 24",
      "value|=(unsigned int) buffer[1] << 16",
      "value|=(unsigned int) buffer[2] << 8",
      "value|=(unsigned int) buffer[3]",
      "quantum.unsigned_value=value & 0xffffffff",
      "value=(unsigned int) buffer[3] << 24",
      "value|=(unsigned int) buffer[2] << 16",
      "value|=(unsigned int) buffer[1] << 8",
      "value|=(unsigned int) buffer[0]",
      "return(value & 0xffffffff",
      "value=(unsigned int) buffer[0] << 24",
      "value|=(unsigned int) buffer[1] << 16",
      "value|=(unsigned int) buffer[2] << 8",
      "value|=(unsigned int) buffer[3]",
      "return(value & 0xffffffff",
      "value=(unsigned short) buffer[1] << 8",
      "value|=(unsigned short) buffer[0]",
      "quantum.unsigned_value=value & 0xffff",
      "value=(unsigned short) buffer[0] << 8",
      "value|=(unsigned short) buffer[1]",
      "quantum.unsigned_value=value & 0xffff",
      "value=(unsigned short) buffer[1] << 8",
      "value|=(unsigned short) buffer[0]",
      "return(value & 0xffff",
      "value=(unsigned short) buffer[0] << 8",
      "value|=(unsigned short) buffer[1]",
      "return(value & 0xffff",
      "if (q > (exif+length-12",
      "break;",
      "if (components < 0",
      "break;"
    ],
    "removed_lines": [
      "size_t",
      "value=(size_t) (buffer[0] << 24",
      "value|=buffer[1] << 16",
      "value|=buffer[2] << 8",
      "value|=buffer[3]",
      "quantum.unsigned_value=(value & 0xffffffff",
      "value=(unsigned short) (buffer[0] << 8",
      "value|=buffer[1]",
      "quantum.unsigned_value=(value & 0xffff",
      "value=(unsigned int) ((buffer[3] << 24) | (buffer[2] << 16) |",
      "(buffer[1] << 8 ) | (buffer[0]",
      "quantum.unsigned_value=(value & 0xffffffff",
      "value=(unsigned int) ((buffer[0] << 24) | (buffer[1] << 16) |",
      "(buffer[2] << 8) | buffer[3]",
      "quantum.unsigned_value=(value & 0xffffffff",
      "value=(unsigned int) ((buffer[3] << 24) | (buffer[2] << 16) |",
      "(buffer[1] << 8 ) | (buffer[0]",
      "return((unsigned int) (value & 0xffffffff",
      "value=(unsigned int) ((buffer[0] << 24) | (buffer[1] << 16) |",
      "(buffer[2] << 8) | buffer[3]",
      "return((unsigned int) (value & 0xffffffff",
      "value=(unsigned short) ((buffer[1] << 8) | buffer[0]",
      "quantum.unsigned_value=(value & 0xffff",
      "value=(unsigned short) ((((unsigned char *) buffer)[0] << 8) |",
      "((unsigned char *) buffer)[1]",
      "quantum.unsigned_value=(value & 0xffff",
      "value=(unsigned short) ((buffer[1] << 8) | buffer[0]",
      "return((unsigned short) (value & 0xffff",
      "value=(unsigned short) ((((unsigned char *) buffer)[0] << 8) |",
      "((unsigned char *) buffer)[1]",
      "return((unsigned short) (value & 0xffff"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "+Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2369,
    "id": "CVE-2016-4578",
    "commit_id": "9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6",
    "added_lines": [
      "memset(&r1, 0, sizeof(r1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not initialize certain r1 data structures"
    ]
  },
  {
    "index": 2380,
    "id": "CVE-2017-1000380",
    "commit_id": "d11662f4f798b50d8c8743f433842c3e40fe3378",
    "added_lines": [
      "mutex_lock(&tu->ioctl_lock",
      "mutex_unlock(&tu->ioctl_lock",
      "mutex_lock(&tu->ioctl_lock",
      "mutex_unlock(&tu->ioctl_lock"
    ],
    "removed_lines": [
      "mutex_lock(&tu->ioctl_lock",
      "mutex_unlock(&tu->ioctl_lock"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "data race",
      "uninitialized memory"
    ]
  },
  {
    "index": 2384,
    "id": "CVE-2017-16642",
    "commit_id": "aa9156006e88565e1f1a5f7cc088b18322d57536",
    "added_lines": [
      "TS: 0 | -99999--99999--99999 -1:45:00 | frONt of 0 0",
      "TS: 0 | -99999--99999--99999 15:45:00 | frONt of 4pm",
      "TS: 0 | -99999--99999--99999 15:45:00 | frONt of 4 pm"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "leak information",
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2418,
    "id": "CVE-2017-9993",
    "commit_id": "189ff4219644532bdfa7bab28dfedaee4d6d4021",
    "added_lines": [
      "char *allowed_extensions",
      "if (av_strstart(proto_name, \"file\", NULL))",
      "if (strcmp(c->allowed_extensions, \"ALL\") && !av_match_ext(url, c->allowed_extensions))",
      "av_log(s, AV_LOG_ERROR,",
      "\"Filename extension of \\'%s\\' is not a common multimedia extension, blocked for security reasons.\\n\"",
      "\"If you wish to override this adjust allowed_extensions, you can set it to \\'ALL\\' to allow all\\n\",",
      "url",
      "return AVERROR_INVALIDDATA",
      "} else if (av_strstart(proto_name, \"http\", NULL))",
      "} else",
      "{\"allowed_extensions\", \"List of file extensions that hls is allowed to access\",",
      "OFFSET(allowed_extensions), AV_OPT_TYPE_STRING,",
      "{.str = \"3gp,aac,avi,flac,mkv,m3u8,m4a,m4s,m4v,mpg,mov,mp2,mp3,mp4,mpeg,mpegts,ogg,ogv,oga,ts,vob,wav\"},",
      "INT_MIN, INT_MAX, FLAGS},"
    ],
    "removed_lines": [
      "if (!av_strstart(proto_name, \"http\", NULL) && !av_strstart(proto_name, \"file\", NULL"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly restrict HTTP Live Streaming filename extensions and demuxer names"
    ]
  },
  {
    "index": 2463,
    "id": "CVE-2015-3400",
    "commit_id": "99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4",
    "added_lines": [
      "rc = foreach_shareopt(shareopts, get_linux_shareopts_cb,"
    ],
    "removed_lines": [
      "typedef int (*nfs_shareopt_callback_t)(const char *opt, const char *value,",
      "void *cookie",
      "static int",
      "foreach_nfs_shareopt(const char *shareopts,",
      "nfs_shareopt_callback_t callback, void *cookie",
      "char *shareopts_dup, *opt, *cur, *value",
      "int was_nul, rc",
      "if (shareopts == NULL",
      "return (SA_OK",
      "shareopts_dup = strdup(shareopts",
      "if (shareopts_dup == NULL",
      "return (SA_NO_MEMORY",
      "opt = shareopts_dup",
      "was_nul = 0",
      "while (1)",
      "cur = opt",
      "while (*cur != ',' && *cur != '\\0'",
      "cur++",
      "if (*cur == '\\0'",
      "was_nul = 1",
      "if (cur > opt)",
      "value = strchr(opt, '='",
      "if (value != NULL)",
      "value++",
      "rc = callback(opt, value, cookie",
      "if (rc != SA_OK)",
      "free(shareopts_dup",
      "return (rc",
      "opt = cur + 1",
      "if (was_nul",
      "break",
      "free(shareopts_dup",
      "return (0",
      "rc = foreach_nfs_shareopt(shareopts, get_linux_shareopts_cb,"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 3.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "provides world readable access to the shared zfs file system"
    ]
  },
  {
    "index": 2468,
    "id": "CVE-2015-1870",
    "commit_id": "8939398b82006ba1fec4ed491339fc075f43fc7c",
    "added_lines": [
      "if (g_settings_privatereports",
      "if ((g_opts & OPT_x",
      "log(\"Not going to make dump directories world readable because PrivateReports is on\"",
      "mode = DEFAULT_DUMP_DIR_MODE",
      "my_euid = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 2469,
    "id": "CVE-2015-1870",
    "commit_id": "c962918bc70a61a8cc647898ee8b1ff1c14a87c5",
    "added_lines": [
      "[Default dump dir mode (default: 0640)]),",
      "[], [with_defaultdumpdirmode=\"0640\"]"
    ],
    "removed_lines": [
      "[Default dump dir mode (default: 0660)]),",
      "[], [with_defaultdumpdirmode=\"0660\"]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 2475,
    "id": "CVE-2018-19045",
    "commit_id": "5241e4d7b177d0b6f073cfc9ed5444bf51ec89d6",
    "added_lines": [
      "return 0"
    ],
    "removed_lines": [
      "return"
    ],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "+Info ",
    "summary": [
      "used mode 0666"
    ]
  },
  {
    "index": 2495,
    "id": "CVE-2019-16910",
    "commit_id": "298a43a77ec0ed2c19a8c924ddd8571ef3e65dfd",
    "added_lines": [
      "mbedtls_mpi_free( &r ); mbedtls_mpi_free( &s",
      "mbedtls_mpi_init( &r ); mbedtls_mpi_init( &s",
      "TEST_ASSERT",
      "mbedtls_ecdsa_sign_det_ext( &grp, &r, &s, &d, hash, hlen,",
      "md_alg, rnd_std_rand, NULL",
      "== 0",
      "TEST_ASSERT( mbedtls_mpi_cmp_mpi( &r, &r_check ) == 0",
      "TEST_ASSERT( mbedtls_mpi_cmp_mpi( &s, &s_check ) == 0"
    ],
    "removed_lines": [],
    "cause": [
      "Cryptographic Weakness",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "side-channel attack",
      "insufficient entropy for blinding"
    ]
  },
  {
    "index": 2531,
    "id": "CVE-2019-10638",
    "commit_id": "55f0fc7a02de8f12757f4937143d8d5091b2e40b",
    "added_lines": [
      "static u32 ip6_idents_hashrnd_extra __read_mostly",
      "net_get_random_once(&ip6_idents_hashrnd_extra, sizeof(ip6_idents_hashrnd_extra",
      "hash = jhash_1word(hash, ip6_idents_hashrnd_extra"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "hash collisions"
    ]
  },
  {
    "index": 2532,
    "id": "CVE-2019-10638",
    "commit_id": "355b98553789b646ed97ad801a619ff898471b92",
    "added_lines": [
      "get_random_bytes(&net->hash_mix, sizeof(u32"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "hash collisions"
    ]
  },
  {
    "index": 3099,
    "id": "CVE-2011-2784",
    "commit_id": "225e7438996c9c939bd239376dfa93e562972cf8",
    "added_lines": [
      "#include \"chrome/common/render_messages.h\"",
      "LOG(INFO) << \"Checking for prerender with NEW code\\n\""
    ],
    "removed_lines": [
      "#include \"chrome/common/render_messages.h\"",
      "LOG(INFO) << \"Checking for prerender iwth NEW code\\n\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3115,
    "id": "CVE-2011-2800",
    "commit_id": "f3c73feb5fa49300cada382dd9304442a5674c74",
    "added_lines": [
      "function reloadAllStyles",
      "delete this._reloadAllStylesTimer",
      "WebInspector.cssModel.getStylesAsync(this._allStylesNodeId, stylesCallback.bind(this",
      "else",
      "this._allStylesNodeId = node.id",
      "if (\"_reloadAllStylesTimer\" in this",
      "return",
      "this._reloadAllStylesTimer = setTimeout(reloadAllStyles.bind(this), 0"
    ],
    "removed_lines": [
      "else",
      "WebInspector.cssModel.getStylesAsync(node.id, stylesCallback.bind(this"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3244,
    "id": "CVE-2012-2891",
    "commit_id": "116d0963cadfbf55ef2ec3d13781987c4d80517a",
    "added_lines": [
      "PRINTING_EXPORT extern const char kPreviewUIID[]",
      "HP_COLOR_COLOR,  // Used in HP color printer ppds.",
      "HP_COLOR_BLACK,  // Used in HP color printer ppds."
    ],
    "removed_lines": [
      "PRINTING_EXPORT extern const char kPreviewUIAddr[]",
      "HP_COLOR_COLOR, // Used in HP color printer ppds.",
      "HP_COLOR_BLACK, // Used in HP color printer ppds."
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3287,
    "id": "CVE-2012-2815",
    "commit_id": "13ea6f4f06a97cd781736847795c452c9e17cacc",
    "added_lines": [],
    "removed_lines": [
      "BUGWK81310 : fast/dom/shadow/content-element-in-media-element.html = TEXT"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "leveraging access to an IFRAME element associated with a different domain"
    ]
  },
  {
    "index": 3403,
    "id": "CVE-2013-6629",
    "commit_id": "7525c48236905b36a2f0ba515573ddef8f6c30a0",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Ghostscript, and other products, does not check for certain duplications of component data during the reading of segments that follow Start Of Scan (SOS) JPEG markers",
      "uninitialized memory"
    ]
  },
  {
    "index": 3404,
    "id": "CVE-2013-6630",
    "commit_id": "805eabb91d386c86bd64336c7643f6dfa864151d",
    "added_lines": [
      "for (size_t i = 0; i < arraysize(cases); ++i)",
      "for (size_t i = 0; i < arraysize(cases); ++i)",
      "for (size_t i = 0; i < arraysize(cases); ++i)",
      "for (size_t i = 0; i < arraysize(cases); ++i)"
    ],
    "removed_lines": [
      "for (size_t i = 0; i < ARRAYSIZE_UNSAFE(cases); ++i)",
      "for (size_t i = 0; i < ARRAYSIZE_UNSAFE(cases); ++i)",
      "for (size_t i = 0; i < ARRAYSIZE_UNSAFE(cases); ++i)",
      "for (size_t i = 0; i < ARRAYSIZE_UNSAFE(cases); ++i)"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "and other products, does not set all elements of a certain Huffman value array during the reading of segments that follow Define Huffman Table (DHT) JPEG markers",
      "uninitialized memory"
    ]
  },
  {
    "index": 3433,
    "id": "CVE-2013-2905",
    "commit_id": "afb848acb43ba316097ab4fddfa38dbd80bc6a71",
    "added_lines": [
      "#include \"base/rand_util.h\"",
      "#include \"base/strings/string_number_conversions.h\"",
      "#include <sys/stat.h>",
      "#include <sys/types.h>",
      "#include <unistd.h>",
      "#if !defined(OS_ANDROID",
      "class ScopedUmaskSetter",
      "public:",
      "explicit ScopedUmaskSetter(mode_t target_mask)",
      "old_umask_ = umask(target_mask",
      "~ScopedUmaskSetter() { umask(old_umask_);",
      "private:",
      "mode_t old_umask_",
      "DISALLOW_IMPLICIT_CONSTRUCTORS(ScopedUmaskSetter",
      "TEST(SharedMemoryTest, FilePermissionsAnonymous)",
      "const uint32 kTestSize = 1 << 8",
      "SharedMemory shared_memory",
      "SharedMemoryCreateOptions options",
      "options.size = kTestSize",
      "ScopedUmaskSetter permissive_mask(S_IWGRP | S_IWOTH",
      "EXPECT_TRUE(shared_memory.Create(options",
      "int shm_fd = shared_memory.handle().fd",
      "struct stat shm_stat",
      "EXPECT_EQ(0, fstat(shm_fd, &shm_stat",
      "EXPECT_FALSE(shm_stat.st_mode & S_IRWXO",
      "EXPECT_FALSE(shm_stat.st_mode & S_IRWXG",
      "TEST(SharedMemoryTest, FilePermissionsNamed)",
      "const uint32 kTestSize = 1 << 8",
      "SharedMemory shared_memory",
      "SharedMemoryCreateOptions options",
      "options.size = kTestSize",
      "std::string shared_mem_name = \"shared_perm_test-\" + IntToString(getpid()) +",
      "\"-\" + Uint64ToString(RandUint64",
      "options.name = &shared_mem_name",
      "ScopedUmaskSetter permissive_mask(S_IWGRP | S_IWOTH",
      "EXPECT_TRUE(shared_memory.Create(options",
      "EXPECT_TRUE(shared_memory.Delete(shared_mem_name",
      "int shm_fd = shared_memory.handle().fd",
      "struct stat shm_stat",
      "EXPECT_EQ(0, fstat(shm_fd, &shm_stat",
      "EXPECT_FALSE(shm_stat.st_mode & S_IRWXO",
      "EXPECT_FALSE(shm_stat.st_mode & S_IRWXG",
      "#endif  // !defined(OS_ANDROID",
      "#endif  // defined(OS_POSIX"
    ],
    "removed_lines": [
      "#endif"
    ],
    "cause": [
      "Configuration or Permissions Errors",
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "permissions",
      "uses weak permissions under /dev/shm/"
    ]
  },
  {
    "index": 3446,
    "id": "CVE-2013-2879",
    "commit_id": "afbc71b7a78ac99810a6b22b2b0a2e85dde18794",
    "added_lines": [
      "#include \"chrome/browser/ui/sync/sync_promo_ui.h\"",
      "OneClickSigninSyncStarter::NO_CONFIRMATION,",
      "SyncPromoUI::SOURCE_UNKNOWN"
    ],
    "removed_lines": [
      "OneClickSigninSyncStarter::NO_CONFIRMATION"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 5.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly determine the circumstances in which a renderer process can be considered a trusted process for sign-in and subsequent sync operations"
    ]
  },
  {
    "index": 3457,
    "id": "CVE-2013-2876",
    "commit_id": "016da29386308754274675e65fdb73cf9d59dc2d",
    "added_lines": [
      "NavigationEntry* last_committed_entry =",
      "web_contents->GetController().GetLastCommittedEntry",
      "GURL last_committed_url = last_committed_entry ?",
      "last_committed_entry->GetURL() : GURL",
      "if (!GetExtension()->CanCaptureVisiblePage(last_committed_url,",
      "SessionID::IdForTab(web_contents),",
      "&error_))"
    ],
    "removed_lines": [
      "if (!GetExtension()->CanCaptureVisiblePage",
      "web_contents->GetURL(),",
      "SessionID::IdForTab(web_contents),",
      "&error_))"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not properly enforce restrictions on the capture of screenshots by extensions"
    ]
  },
  {
    "index": 3462,
    "id": "CVE-2013-2866",
    "commit_id": "69827e08e9e0a30ce452589705d7336edaffd490",
    "added_lines": [
      "if (update_content_setting)",
      "if ((IsSchemeSecure() && !devices.empty()) ||",
      "request_.request_type == content::MEDIA_OPEN_DEVICE)",
      "SetPermission(true",
      "if (policy == ALWAYS_DENY",
      "if (policy == POLICY_NOT_SET)",
      "if (!IsSchemeSecure() &&",
      "request_.request_type != content::MEDIA_OPEN_DEVICE)",
      "return false",
      "if (profile_->GetHostContentSettingsMap()->GetContentSetting",
      "request_.security_origin, request_.security_origin,",
      "device_checks[i].settings_type, NO_RESOURCE_IDENTIFIER) !=",
      "CONTENT_SETTING_ALLOW)",
      "return false"
    ],
    "removed_lines": [
      "if (update_content_setting && IsSchemeSecure() && !devices.empty",
      "SetPermission(true",
      "if (policy == ALWAYS_DENY ||",
      "(policy == POLICY_NOT_SET &&",
      "profile_->GetHostContentSettingsMap()->GetContentSetting",
      "request_.security_origin, request_.security_origin,",
      "device_checks[i].settings_type, NO_RESOURCE_IDENTIFIER) !=",
      "CONTENT_SETTING_ALLOW))"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "vuln": "+Info ",
    "summary": [
      "and separately, does not properly determine whether a user wishes to permit camera or microphone access by a Flash application"
    ]
  },
  {
    "index": 3528,
    "id": "CVE-2013-0909",
    "commit_id": "537abce1bcf7378e760e904d6e5540a02a2fca9f",
    "added_lines": [
      "FilePath original_cwd",
      "base::ThreadRestrictions::ScopedAllowIO allow_io",
      "file_util::GetCurrentDirectory(&original_cwd",
      "base::ThreadRestrictions::ScopedAllowIO allow_io",
      "file_util::SetCurrentDirectory(original_cwd"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "XSS +Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "XSS +Info ",
    "summary": [
      "xss",
      "unspecified vectors"
    ]
  },
  {
    "index": 3589,
    "id": "CVE-2014-3195",
    "commit_id": "183615d125816b996710f8aa282c42bdeb73168e",
    "added_lines": [
      "crbug.com/553838 imported/csswg-test/vendor-imports/mozilla/mozilla-central-reftests/writing-modes-3/text-combine-upright-compression-007.html [ Failure ]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly track JavaScript heap-memory allocations as allocations of uninitialized memory and does not properly concatenate arrays of double-precision floating-point numbers",
      "uninitialized memory"
    ]
  },
  {
    "index": 3591,
    "id": "CVE-2014-3197",
    "commit_id": "ea2730123956cc7cd538919573330f7c3dccb493",
    "added_lines": [
      "removeAddress: assertNotReached,",
      "removeCreditCard: assertNotReached,",
      "removeAddress: function(address)",
      "chrome.autofillPrivate.removeEntry((address.guid",
      "},",
      "removeCreditCard: function(creditCard)",
      "chrome.autofillPrivate.removeEntry((creditCard.guid",
      "},",
      "'remove-address': 'removeAddress_',",
      "'remove-credit-card': 'removeCreditCard_',",
      "removeAddress_: function(event)",
      "this.autofillManager_.removeAddress(event.detail",
      "},",
      "removeCreditCard_: function(event)",
      "this.autofillManager_.removeCreditCard(event.detail",
      "},"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "XSS +Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "XSS +Info ",
    "summary": [
      "xss"
    ]
  },
  {
    "index": 3608,
    "id": "CVE-2014-3166",
    "commit_id": "6f680f548f24b12a47c17f0701545a1b2dfb7ae2",
    "added_lines": [
      "if (window.testRunner",
      "testRunner.waitUntilDone"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "on Android, does not correctly consider the properties of SPDY connections"
    ]
  },
  {
    "index": 3728,
    "id": "CVE-2015-6759",
    "commit_id": "aa6e017b0fb87bc373294f28f5bf2541d240210b",
    "added_lines": [
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/frames-timing-functions-output.html [ Skip ]",
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/frames-timing-functions-syntax.html [ Skip ]",
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/step-timing-functions-output.html [ Skip ]"
    ],
    "removed_lines": [
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/frames-timing-functions-output.html [ Failure Crash Pass ]",
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/frames-timing-functions-syntax.html [ Failure Crash Pass ]",
      "crbug.com/781171 [ Android ] external/wpt/css/css-timing/step-timing-functions-output.html [ Failure Crash Pass ]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      " does not ensure that the origin of a LocalStorage resource is considered unique"
    ]
  },
  {
    "index": 3744,
    "id": "CVE-2015-1300",
    "commit_id": "9c391ac04f9ac478c8b0e43b359c2b43a6c892ab",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly restrict the availability of IFRAME Resource Timing API times"
    ]
  },
  {
    "index": 3764,
    "id": "CVE-2015-1285",
    "commit_id": "39595f8d4dffcb644d438106dcb64a30c139ff0e",
    "added_lines": [
      "bool update_wallpaper,",
      "bool update_wallpaper,",
      "bool update_wallpaper,",
      "void OnCustomWallpaperFileNotFound(const AccountId& account_id,",
      "const base::FilePath& expected_path,",
      "bool update_wallpaper,",
      "MovableOnDestroyCallbackHolder on_finish"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "XSS +Info",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "XSS +Info ",
    "summary": [
      "xss"
    ]
  },
  {
    "index": 3822,
    "id": "CVE-2016-5172",
    "commit_id": "06fa2ca5a3ca56601aa9d901c23a674c3c2d6977",
    "added_lines": [
      "distribution = distribution.upper",
      "if config.has_section(distribution):",
      "CopySectionFilesToStagingDir(config, distribution,",
      "staging_dir, build_dir"
    ],
    "removed_lines": [
      "CopySectionFilesToStagingDir(config, distribution.upper(),",
      "staging_dir, build_dir"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "mishandles scopes"
    ]
  },
  {
    "index": 3844,
    "id": "CVE-2016-5166",
    "commit_id": "5da127a872b1e2c9fb1cf128ae309b4d6ce4e3ce",
    "added_lines": [
      "const JavaParamRef<jstring>& java_share_target_action,",
      "const JavaParamRef<jstring>& java_share_target_param_title,",
      "const JavaParamRef<jstring>& java_share_target_param_text,",
      "const JavaParamRef<jstring>& java_share_target_param_url,",
      "GURL share_target_action =",
      "GURL(ConvertJavaStringToUTF8(env, java_share_target_action",
      "if (!share_target_action.is_empty())",
      "info.share_target = ShareTarget",
      "info.share_target->action = share_target_action",
      "info.share_target->params.title =",
      "ConvertJavaStringToUTF16(java_share_target_param_title",
      "info.share_target->params.text =",
      "ConvertJavaStringToUTF16(java_share_target_param_text",
      "info.share_target->params.url =",
      "ConvertJavaStringToUTF16(java_share_target_param_url"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "+Info",
    "score": 2.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "on Linux does not properly restrict saving a file:// URL that is referenced by an http:// URL"
    ]
  },
  {
    "index": 3900,
    "id": "CVE-2016-1637",
    "commit_id": "dd3d87d399131dccd5586d33a5bcaeac25b49951",
    "added_lines": [],
    "removed_lines": [
      "# Flaky: https://bugs.chromium.org/p/chromedriver/issues/detail?id=653",
      "'PageLoadingTest.testShouldBeAbleToNavigateBackInTheBrowserHistoryInPresenceOfIframes',",
      "'PageLoadingTest.testShouldBeAbleToNavigateBackInTheBrowserHistory',"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      ", mishandles arctangent calculations"
    ]
  },
  {
    "index": 3908,
    "id": "CVE-2016-1614",
    "commit_id": "02a4180d7d533fab4df07d355ec029e719e353af",
    "added_lines": [
      "void TearDown() override",
      "WebView().Scheduler()->DisableVirtualTimeForTesting",
      "ScrollbarsTest::TearDown"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "mishandles the initialization mode"
    ]
  },
  {
    "index": 3911,
    "id": "CVE-2016-1617",
    "commit_id": "568075bbc5d16239a5cbdeb579a8768f9836f13e",
    "added_lines": [
      "EXPECT_TRUE(source.matches(KURL(base, \"https://example.com:8000/foo\"), ContentSecurityPolicy::DidRedirect",
      "TEST_F(CSPSourceTest, InsecureSourceMatchesSecure",
      "KURL base",
      "CSPSource source(csp.get(), \"http\", \"\", 0, \"/\", CSPSource::NoWildcard, CSPSource::HasWildcard",
      "EXPECT_TRUE(source.matches(KURL(base, \"http://example.com:8000/\"",
      "EXPECT_TRUE(source.matches(KURL(base, \"https://example.com:8000/\"",
      "EXPECT_TRUE(source.matches(KURL(base, \"http://not-example.com:8000/\"",
      "EXPECT_TRUE(source.matches(KURL(base, \"https://not-example.com:8000/\"",
      "EXPECT_FALSE(source.matches(KURL(base, \"ftp://example.com:8000/\"",
      "TEST_F(CSPSourceTest, InsecureHostMatchesSecure",
      "KURL base",
      "CSPSource source(csp.get(), \"http\", \"example.com\", 0, \"/\", CSPSource::NoWildcard, CSPSource::HasWildcard",
      "EXPECT_TRUE(source.matches(KURL(base, \"http://example.com:8000/\"",
      "EXPECT_FALSE(source.matches(KURL(base, \"http://not-example.com:8000/\"",
      "EXPECT_TRUE(source.matches(KURL(base, \"https://example.com:8000/\"",
      "EXPECT_FALSE(source.matches(KURL(base, \"https://not-example.com:8000/\""
    ],
    "removed_lines": [
      "EXPECT_FALSE(source.matches(KURL(base, \"https://example.com:8000/foo\"), ContentSecurityPolicy::DidRedirect"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "implementation in blink"
    ]
  },
  {
    "index": 3917,
    "id": "CVE-2016-1698",
    "commit_id": "5fb2548448bd1b76a59d941b729d7a7f90d53bc8",
    "added_lines": [
      "void DeepFreeze(const v8::Local<v8::Object>& object,",
      "const v8::Local<v8::Context>& context)",
      "v8::Maybe<bool> maybe =",
      "object->SetPrototype(context, v8::Null(context->GetIsolate",
      "CHECK(maybe.IsJust() && maybe.FromJust",
      "v8::Local<v8::Array> property_names = object->GetOwnPropertyNames",
      "for (uint32_t i = 0; i < property_names->Length(); ++i)",
      "v8::Local<v8::Value> child = object->Get(property_names->Get(i",
      "if (child->IsObject",
      "DeepFreeze(v8::Local<v8::Object>::Cast(child), context",
      "object->SetIntegrityLevel(context, v8::IntegrityLevel::kFrozen",
      "DeepFreeze(v8_schema, context"
    ],
    "removed_lines": [
      "v8_schema->SetIntegrityLevel(context, v8::IntegrityLevel::kFrozen"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "does not validate module types"
    ]
  },
  {
    "index": 3956,
    "id": "CVE-2017-5096",
    "commit_id": "70f2da55aa80a2d6dff890139ae39f78c019e4ea",
    "added_lines": [
      "'spv_tools_revision': '12e54dae167c8ea2c194447805ac6f96f09448f6',"
    ],
    "removed_lines": [
      "'spv_tools_revision': '3e4abc9ac382b6fc7a88316a700652404b6fb9f7',"
    ],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 3965,
    "id": "CVE-2017-5107",
    "commit_id": "c25b198675380f713a56649c857b4367601d4a3d",
    "added_lines": [
      "void HandleSeeking(const gfx::Point& location"
    ],
    "removed_lines": [
      "void HandleSeeking(const gfx::Point& location_in_bar"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.6,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "A timing attack in SVG rendering"
    ]
  },
  {
    "index": 3974,
    "id": "CVE-2017-5075",
    "commit_id": "fea16c8b60ff3d0756d5eb392394963b647bc41a",
    "added_lines": [
      "String strippedURL = stripURLForUseInReport",
      "context, blockedURL, RedirectStatus::NoRedirect,",
      "ContentSecurityPolicy::DirectiveType::DefaultSrc",
      "init.setDocumentURI(strippedURL",
      "init.setBlockedURI(strippedURL",
      "String strippedURL = stripURLForUseInReport",
      "context, context->url(), RedirectStatus::NoRedirect,",
      "ContentSecurityPolicy::DirectiveType::DefaultSrc",
      "init.setDocumentURI(strippedURL"
    ],
    "removed_lines": [
      "init.setDocumentURI(blockedURL.getString",
      "init.setBlockedURI(blockedURL.getString",
      "init.setDocumentURI(context->url().getString"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "inappropriate implementation in csp reporting"
    ]
  },
  {
    "index": 3982,
    "id": "CVE-2017-5082",
    "commit_id": "416588f2ea472b4f9273cbd0e40c1d18f71d1cba",
    "added_lines": [
      "import android.view.WindowManager",
      "import org.chromium.chrome.browser.ChromeVersionInfo",
      "if (ChromeVersionInfo.isBetaBuild() || ChromeVersionInfo.isStableBuild())",
      "WindowManager.LayoutParams attributes = getActivity().getWindow().getAttributes",
      "attributes.flags |= WindowManager.LayoutParams.FLAG_SECURE",
      "getActivity().getWindow().setAttributes(attributes"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Failure to take advantage of available mitigations in credit card autofill"
    ]
  },
  {
    "index": 4013,
    "id": "CVE-2017-5040",
    "commit_id": "faf2c7fde0d73eb0264c373c86e8e2abea9daa58",
    "added_lines": [
      "[Exposed=Window, SecureContext]"
    ],
    "removed_lines": [
      "[SecureContext]"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "+Info ",
    "summary": [
      "missing a neutering check"
    ]
  },
  {
    "index": 4021,
    "id": "CVE-2017-5046",
    "commit_id": "1f959adce3efa86d7d9560f9642c6ae816f8d81c",
    "added_lines": [
      "{% if interface_name == 'Location' %",
      "instanceTemplate->Set(v8::Symbol::GetToPrimitive(isolate),",
      "v8::Undefined(isolate),",
      "static_cast<v8::PropertyAttribute>",
      "v8::ReadOnly | v8::DontEnum | v8::DontDelete",
      "{% endif %"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 4026,
    "id": "CVE-2017-5011",
    "commit_id": "eea3300239f0b53e172a320eb8de59d0bea65f27",
    "added_lines": [
      "\"../browser/devtools/devtools_ui_bindings_unittest.cc\","
    ],
    "removed_lines": [
      "\"../browser/ui/webui/devtools_ui_unittest.cc\","
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "insufficiently sanitized devtools urls"
    ]
  },
  {
    "index": 4035,
    "id": "CVE-2017-5017",
    "commit_id": "4ef48a4037ea44d220fbe9f468d3ac659a38f9cb",
    "added_lines": [
      "\"version\": \"12.08\",",
      "},",
      "\"id\": 130,",
      "\"description\": \"Older NVIDIA GPUs on macOS render incorrectly\",",
      "\"cr_bugs\": [676975],",
      "\"os\":",
      "\"type\": \"macosx\"",
      "},",
      "\"vendor_id\": \"0x10de\",",
      "\"device_id\": [\"0x0407\"],",
      "\"features\": [",
      "\"all\"",
      "]"
    ],
    "removed_lines": [
      "\"version\": \"12.07\","
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "insufficiently cleared video memory"
    ]
  },
  {
    "index": 4054,
    "id": "CVE-2016-5212",
    "commit_id": "f865c2dfddb1d95af3a2467587c62566e3f7dfe4",
    "added_lines": [],
    "removed_lines": [
      "if (Runtime.queryParam(\"hideNavigation\"",
      "this._navigationBar.classList.add(\"hidden\""
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "insufficiently sanitized devtools urls"
    ]
  },
  {
    "index": 4064,
    "id": "CVE-2016-5220",
    "commit_id": "c6f0d22d508a551a40fc8bd7418941b77435aac3",
    "added_lines": [
      "extern const base::Feature kUIExperimentShowPlaceholderWhenCaretShowing"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "incorrectly handled navigation within pdfs"
    ]
  },
  {
    "index": 4073,
    "id": "CVE-2016-5201",
    "commit_id": "87fc78f999fc90a2663e3d05d44d40b6d8985305",
    "added_lines": [
      "<affected-histogram name=\"Apps.PaginationTransition.AnimationSmoothness\"/>",
      "<affected-histogram name=\"Apps.StateTransition.Drag.PresentationTime\"/>",
      "<affected-histogram name=\"Ash.Overview.WindowDrag.PresentationTime\"/>"
    ],
    "removed_lines": [
      "<affected-histogram name=\"Apps.StateTransition.Drag.PresentationTime\"/>"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "The extensions API",
      "A leak of privateClass in the extensions API"
    ]
  },
  {
    "index": 4082,
    "id": "CVE-2016-1665",
    "commit_id": "282f53ffdc3b1902da86f6a0791af736837efbf8",
    "added_lines": [
      "<histogram name=\"Signin.RefreshTokenRevoked.Source\"",
      "enum=\"SourceForRefreshTokenOperation\">",
      "<owner>droger@chromium.org</owner>",
      "<owner>msarda@chromium.org</owner>",
      "<summary>",
      "Source for refresh token revocation. This is used to track the sources for",
      "signing out of Google accounts and is required to validate that the browser",
      "is not revoking tokens for large parts of the user population.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Signin.RefreshTokenUpdated.ToInvalidToken.Source\"",
      "enum=\"SourceForRefreshTokenOperation\">",
      "<owner>droger@chromium.org</owner>",
      "<owner>msarda@chromium.org</owner>",
      "<summary>",
      "Source for refresh token updated to invalid tokens. The refresh token is",
      "updated to an permanently invalid token when the user attempts to sign out",
      "of the primary account without turning off sync. This histogram is used to",
      "track the sources for invalidating the token of the primary account and is",
      "required to validate that the browser is not invalidating the token of the",
      "primary account for large parts of the user population.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Signin.RefreshTokenUpdated.ToValidToken.Source\"",
      "enum=\"SourceForRefreshTokenOperation\">",
      "<owner>droger@chromium.org</owner>",
      "<owner>msarda@chromium.org</owner>",
      "<summary>",
      "Source for refresh token updated to valid tokens. This is used to track the",
      "sources for adding Google accounts to the browser.",
      "</summary>",
      "</histogram>"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "mishandles comparison operators"
    ]
  },
  {
    "index": 4122,
    "id": "CVE-2018-17468",
    "commit_id": "5fe74f831fddb92afa5ddfe46490bb49f083132b",
    "added_lines": [
      "frame->SetShouldSendResourceTimingInfoToParent(false",
      "if (MasterDocumentLoader()->LoadType() == WebFrameLoadType::kBackForward)",
      "GetFrame()->SetShouldSendResourceTimingInfoToParent(false"
    ],
    "removed_lines": [
      "frame->DidSendResourceTimingInfoToParent",
      "if (MasterDocumentLoader()->LoadType() == WebFrameLoadType::kBackForward"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect handling of timer information"
    ]
  },
  {
    "index": 4135,
    "id": "CVE-2018-6035",
    "commit_id": "2649de11c562aa96d336c06136a1a20c01711be0",
    "added_lines": [
      "-DevToolsFrontendInWebRequestApiTest.HiddenRequests"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 4136,
    "id": "CVE-2018-6037",
    "commit_id": "c1441e7a1fdc5a7b654103608bdabb3bb11901a6",
    "added_lines": [
      "Version: 1.12.1"
    ],
    "removed_lines": [
      "Version: 1.0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "implementation in autofill"
    ]
  },
  {
    "index": 4142,
    "id": "CVE-2018-6045",
    "commit_id": "2649de11c562aa96d336c06136a1a20c01711be0",
    "added_lines": [
      "-DevToolsFrontendInWebRequestApiTest.HiddenRequests"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 4145,
    "id": "CVE-2018-6048",
    "commit_id": "931711135c90568f677cf42d94f2591a7eeced2e",
    "added_lines": [
      "SetReferrerPolicy(entered_document->GetReferrerPolicy"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 4149,
    "id": "CVE-2018-6052",
    "commit_id": "61dea44cd66a9b8a0616ae74b18010ce377ae969",
    "added_lines": [
      "deps += [ \":cast_shell_android_things_sys_info_java\" ]",
      "if (is_android_things_non_public && !build_for_android_things_n)",
      "android_library(\"cast_shell_android_things_sys_info_java\")",
      "java_files = [ \"//chromecast/browser/android/apk/src/org/chromium/chromecast/shell/CastSysInfoAndroidThings.java\" ]",
      "deps = [",
      "\"//base:base_java\",",
      "\"//chromecast/internal/android/prebuilt/things:support_lib_java\",",
      "]",
      "generate_jni(\"cast_shell_android_things_sys_info_jni_headers\")",
      "sources = [",
      "\"//chromecast/browser/android/apk/src/org/chromium/chromecast/shell/CastSysInfoAndroidThings.java\",",
      "]",
      "deps = [",
      "\"//chromecast/internal/android/prebuilt/things:support_lib_java\",",
      "]",
      "jni_package = \"chromecast\""
    ],
    "removed_lines": [
      "java_files += [ \"$java_src_dir/org/chromium/chromecast/shell/CastSysInfoAndroidThings.java\" ]",
      "deps += [ \"//chromecast/internal/android/prebuilt/things:support_lib_java\" ]"
    ],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "Lack of support for a non standard no-referrer policy value in Blink"
    ]
  },
  {
    "index": 4150,
    "id": "CVE-2018-6053",
    "commit_id": "6c6888565ff1fde9ef21ef17c27ad4c8304643d2",
    "added_lines": [
      "EXPECT_FALSE(top_sites()->GetPageThumbnail(url, false, &result"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "inappropriate implementation in new tab page"
    ]
  },
  {
    "index": 4159,
    "id": "CVE-2018-6095",
    "commit_id": "31f50deaacf54de542d01c557cf9f01cab4aa154",
    "added_lines": [
      "- (BOOL)panel:(id)sender validateURL:(NSURL*)url error:(NSError**)outError",
      "if ([[NSApp currentEvent] type] == NSKeyDown &&",
      "[[NSApp currentEvent] isARepeat])",
      "return NO",
      "return YES"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "dismissal of file picker on keyboard events"
    ]
  },
  {
    "index": 4163,
    "id": "CVE-2018-6099",
    "commit_id": "038e2d8e8775b6262ff5997b6f4a820702713106",
    "added_lines": [
      "promise_test(t =>",
      "let url = '/media/foo.vtt'",
      "redirector_url = host_info.HTTPS_ORIGIN + base_path() + 'resources/redirect.py?Redirect='",
      "redirect_target = host_info.HTTPS_ORIGIN + '/media/foo.vtt'",
      "url += '?url=' + encodeURIComponent(redirector_url + encodeURIComponent(redirect_target",
      "return load_track(url",
      ".then(result =>",
      "assert_equals(result, 'load event'",
      "}, 'same-origin text track that redirects same-origin should load'",
      "promise_test(t =>",
      "let url = '/media/foo.vtt'",
      "redirector_url = host_info.HTTPS_ORIGIN + base_path() + 'resources/redirect.py?Redirect='",
      "redirect_target = host_info.HTTPS_REMOTE_ORIGIN + '/media/foo.vtt'",
      "url += '?url=' + encodeURIComponent(redirector_url + encodeURIComponent(redirect_target",
      "return load_track(url",
      ".then(result =>",
      "assert_equals(result, 'error event'",
      "}, 'same-origin text track that redirects cross-origin should not load'",
      "promise_test(t =>",
      "let url = '/media/foo.vtt'",
      "redirector_url = host_info.HTTPS_ORIGIN + base_path() + 'resources/redirect.py?Redirect='",
      "redirect_target = host_info.HTTPS_REMOTE_ORIGIN + '/media/foo-no-cors.vtt'",
      "url += '?url=' + encodeURIComponent(redirector_url + encodeURIComponent(redirect_target",
      "url += '&mode=cors'",
      "url += '&credentials=anonymous'",
      "return load_track(url",
      ".then(result =>",
      "assert_equals(result, 'error event'",
      "}, 'same-origin text track that redirects to a cross-origin text track with rejected cors should not load'",
      "promise_test(t =>",
      "let url = '/media/foo.vtt'",
      "redirector_url = host_info.HTTPS_ORIGIN + base_path() + 'resources/redirect.py?Redirect='",
      "redirect_target = host_info.HTTPS_REMOTE_ORIGIN + '/media/foo.vtt'",
      "url += '?url=' + encodeURIComponent(redirector_url + encodeURIComponent(redirect_target",
      "url += '&mode=cors'",
      "url += '&credentials=anonymous'",
      "return load_track(url",
      ".then(result =>",
      "assert_equals(result, 'load event'",
      "}, 'same-origin text track that redirects to a cross-origin text track with approved cors should load'"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "A lack of CORS checks in Blink"
    ]
  },
  {
    "index": 4179,
    "id": "CVE-2018-6117",
    "commit_id": "52f6eb4221430b6248fd5a59bec53bfef9fdd9a7",
    "added_lines": [
      "{\"autofillFormsLabel\", IDS_SETTINGS_AUTOFILL_TOGGLE_LABEL},",
      "{\"passwordsSavePasswordsLabel\",",
      "IDS_SETTINGS_PASSWORDS_SAVE_PASSWORDS_TOGGLE_LABEL},"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Confusing settings in Autofill"
    ]
  },
  {
    "index": 4181,
    "id": "CVE-2017-11215",
    "commit_id": "674733a38d32b51dbc4b054dcc3495027164ded2",
    "added_lines": [],
    "removed_lines": [
      "function waitForVideoWithResolution(element, expected_width, expected_height)",
      "addExpectedEvent",
      "detectVideoPlaying(element",
      ".then((resolution) =>",
      "assertEquals(expected_width, resolution.width",
      "assertEquals(expected_height, resolution.height",
      "eventOccured"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 7"
    ],
    "effect": "ExecCode Mem. Corr. +Info",
    "score": 10.0,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "Exec Code Mem. Corr. +Info ",
    "summary": [
      "information leak",
      "use after free",
      "code execution"
    ]
  },
  {
    "index": 4182,
    "id": "CVE-2017-11225",
    "commit_id": "9b9f4d8120bb85c926b6e8ebe557633b2e66e3c2",
    "added_lines": [
      "web_state_->GetNavigationManager()->GetVisibleItem"
    ],
    "removed_lines": [
      "web_state()->GetNavigationManager()->GetVisibleItem"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 7"
    ],
    "effect": "ExecCode Mem. Corr. +Info",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "Exec Code Mem. Corr. +Info ",
    "summary": [
      "information leak",
      "use after free",
      "code execution"
    ]
  },
  {
    "index": 4187,
    "id": "CVE-2018-6066",
    "commit_id": "fad67a5b73639d7211b24fd9bdb242e82039b765",
    "added_lines": [
      "bool PassesAccessControlCheck(const SecurityOrigin&) const"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Lack of CORS checking by ResourceFetcher/ResourceLoader in Blink"
    ]
  },
  {
    "index": 4194,
    "id": "CVE-2018-6075",
    "commit_id": "39f676e6d2817c5b85d1a8ef9ba0f96cd4a970b1",
    "added_lines": [
      "flattenUnions(unions)",
      "const targetRouter = new liteJsTest.mojom.TestMessageTargetCallbackRouter",
      "const targetProxy = targetRouter.createProxy",
      "promise_test(() =>",
      "const targetRouter = new liteJsTest.mojom.TestMessageTargetCallbackRouter",
      "const targetProxy = targetRouter.createProxy",
      "targetRouter.flattenUnions.addListener(unions =>",
      "return {x: unions.filter(u => u.x !== undefined).map(u => u.x),",
      "s: unions.filter(u => u.s !== undefined).map(u => u.s.x",
      "return targetProxy.flattenUnions",
      "[{x: 1}, {x: 2}, {s: {x: 3}}, {s: {x: 4}}, {x: 5}, {s: {x: 6}}]",
      ".then(reply =>",
      "assert_array_equals(reply.x, [1, 2, 5]",
      "assert_array_equals(reply.s, [3, 4, 6]",
      "}, 'can serialize and deserialize unions'",
      "promise_test(() =>",
      "let impl = new TargetImpl",
      "let proxy = impl.target.createProxy",
      "const kNumPokes = 100",
      "for (let i = 0; i < kNumPokes; ++i",
      "proxy.poke",
      "return proxy.flushForTesting().then(() =>",
      "assert_equals(impl.numPokes, kNumPokes",
      "}, 'can use generated flushForTesting API for synchronization in tests'"
    ],
    "removed_lines": [
      "let targetRouter = new liteJsTest.mojom.TestMessageTargetCallbackRouter",
      "let targetProxy = targetRouter.createProxy"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect handling of specified filenames"
    ]
  },
  {
    "index": 4196,
    "id": "CVE-2018-6077",
    "commit_id": "6ed26f014f76f10e76e80636027a2db9dcbe1664",
    "added_lines": [
      "void SetOriginTaintedByContent",
      "bool origin_tainted_by_content_"
    ],
    "removed_lines": [
      "void ClearResolvedFilters"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "+Info ",
    "summary": [
      "Displacement map filters being applied to cross-origin images in Blink SVG rendering"
    ]
  },
  {
    "index": 4198,
    "id": "CVE-2018-6079",
    "commit_id": "d128139d53e9268e87921e82d89b3f2053cb83fd",
    "added_lines": [
      "options.context_type = CONTEXT_TYPE_OPENGLES3",
      "if (!gl_real_.IsInitialized())",
      "options.context_type = CONTEXT_TYPE_OPENGLES2",
      "gl_real_.InitializeWithWorkarounds(options, workarounds",
      "TEST_P(GLVirtualContextsTest, Texture2DArrayAnd3DRestore)",
      "if (gl1_.GetContextType() == CONTEXT_TYPE_OPENGLES2",
      "return",
      "gl1_.MakeCurrent",
      "GLuint tex1_2d_array = 0, tex1_3d = 0",
      "glActiveTexture(GL_TEXTURE0",
      "glGenTextures(1, &tex1_2d_array",
      "glBindTexture(GL_TEXTURE_2D_ARRAY, tex1_2d_array",
      "glTexParameteri(GL_TEXTURE_2D_ARRAY, GL_TEXTURE_MIN_FILTER, GL_NEAREST",
      "glGenTextures(1, &tex1_3d",
      "glBindTexture(GL_TEXTURE_3D, tex1_3d",
      "glTexParameteri(GL_TEXTURE_3D, GL_TEXTURE_MIN_FILTER,",
      "GL_NEAREST_MIPMAP_NEAREST",
      "glFinish",
      "gl2_.MakeCurrent",
      "GLuint tex2_2d_array = 0, tex2_3d = 0",
      "glActiveTexture(GL_TEXTURE0",
      "glGenTextures(1, &tex2_2d_array",
      "glBindTexture(GL_TEXTURE_2D_ARRAY, tex2_2d_array",
      "glTexParameteri(GL_TEXTURE_2D_ARRAY, GL_TEXTURE_MIN_FILTER, GL_LINEAR",
      "glGenTextures(1, &tex2_3d",
      "glBindTexture(GL_TEXTURE_3D, tex2_3d",
      "glTexParameteri(GL_TEXTURE_3D, GL_TEXTURE_MIN_FILTER,",
      "GL_LINEAR_MIPMAP_LINEAR",
      "glFinish",
      "gl1_.MakeCurrent",
      "GLint tex_2d_array_params = 0, tex_3d_params = 0",
      "glGetTexParameteriv(GL_TEXTURE_2D_ARRAY, GL_TEXTURE_MIN_FILTER,",
      "&tex_2d_array_params",
      "glGetTexParameteriv(GL_TEXTURE_3D, GL_TEXTURE_MIN_FILTER, &tex_3d_params",
      "EXPECT_EQ(GL_NEAREST, tex_2d_array_params",
      "EXPECT_EQ(GL_NEAREST_MIPMAP_NEAREST, tex_3d_params",
      "GLTestHelper::CheckGLError(\"no errors\", __LINE__"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "sharing of texture_2d_array/texture_3d data between tabs in webgl"
    ]
  },
  {
    "index": 4201,
    "id": "CVE-2018-6082",
    "commit_id": "112756ed920162dcb74660b0bed57a3f559710c8",
    "added_lines": [],
    "removed_lines": [
      "22,  // ssh"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "Including port 22 in the list of allowed FTP ports in Networking"
    ]
  },
  {
    "index": 4230,
    "id": "CVE-2017-5133",
    "commit_id": "60ffdffea2683c732514874a7d3548d5acecf740",
    "added_lines": [
      "'pdfium_revision': '131c0eb2e34ece6ede6288842cb3004ec3c600d4',"
    ],
    "removed_lines": [
      "'pdfium_revision': 'ee1e757902d0096cc482c74d4fc0e568e0b18541',"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "ExecCode +Info",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "Exec Code +Info ",
    "summary": [
      "leak information",
      "off-by-one",
      "Off-by-one read/write on the heap in Blink"
    ]
  },
  {
    "index": 4249,
    "id": "CVE-2019-5837",
    "commit_id": "04aaacb936a08d70862d6d9d7e8354721ae46be8",
    "added_lines": [
      "#include \"url/gurl.h\"",
      "COMPONENT_EXPORT(STORAGE_BROWSER",
      "const crypto::SymmetricKey* GetDefaultPaddingKey"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "information leak"
    ]
  },
  {
    "index": 4261,
    "id": "CVE-2019-5810",
    "commit_id": "0bd10e13a008389ec14bbe7cc95f17d82ea151c1",
    "added_lines": [
      "select:-internal-autofill-previewed",
      "font-family: system-ui !important",
      "background-color: #E8F0FE !important",
      "background-image:none !important",
      "color: #000000 !important",
      "input:-internal-autofill-selected,"
    ],
    "removed_lines": [
      "input:-internal-autofill-selected,",
      "select:-internal-autofill-previewed,"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "information leak"
    ]
  },
  {
    "index": 4268,
    "id": "CVE-2019-5818",
    "commit_id": "929f77d4173022a731ae91218ce6894d20f87f35",
    "added_lines": [
      "uint64_t value = 0",
      "if (!reader->ReadBits(num_bits, &value",
      "return 0",
      "size_t sampling_freq_index = ReadBits(&reader, 4",
      "RCHECK(sampling_freq_index < base::size(kSamplingFrequencyValid",
      "RCHECK(kSamplingFrequencyValid[sampling_freq_index]",
      "size_t audio_id_index = ReadBits(&reader, 3",
      "RCHECK(audio_id_index < base::size(kExtAudioIdValid",
      "RCHECK(kExtAudioIdValid[audio_id_index]"
    ],
    "removed_lines": [
      "uint64_t value",
      "reader->ReadBits(num_bits, &value",
      "RCHECK(kSamplingFrequencyValid[ReadBits(&reader, 4)]",
      "RCHECK(kExtAudioIdValid[ReadBits(&reader, 3)]"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "Uninitialized data in media",
      "uninitialized data"
    ]
  },
  {
    "index": 4301,
    "id": "CVE-2019-5765",
    "commit_id": "f68b18e1ec1cadb432998d3ccc084e0a8c1ae5cd",
    "added_lines": [
      "import org.chromium.base.BuildInfo",
      "if (BuildInfo.isDebugAndroid())",
      "ThreadUtils.postOnUiThread(new Runnable()",
      "@Override",
      "public void run()",
      "addStartupCompletedObserver(new StartupCallback()",
      "@Override",
      "public void onSuccess()",
      "assert mTracingController == null",
      "Context context = ContextUtils.getApplicationContext",
      "mTracingController = new TracingControllerAndroidImpl(context",
      "mTracingController.registerReceiver(context",
      "@Override",
      "public void onFailure()"
    ],
    "removed_lines": [
      "ThreadUtils.postOnUiThread(new Runnable()",
      "@Override",
      "public void run()",
      "addStartupCompletedObserver(new StartupCallback()",
      "@Override",
      "public void onSuccess()",
      "assert mTracingController == null",
      "Context context = ContextUtils.getApplicationContext",
      "mTracingController = new TracingControllerAndroidImpl(context",
      "mTracingController.registerReceiver(context",
      "@Override",
      "public void onFailure()"
    ],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "An exposed debugging endpoint in the browser"
    ]
  },
  {
    "index": 4315,
    "id": "CVE-2018-20073",
    "commit_id": "2f01a0cb03732fdb982dd42786d95736322d2241",
    "added_lines": [
      "#if !defined(OS_CHROMEOS",
      "#endif  // !defined(OS_CHROMEOS"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "+Info",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Use of extended attributes in downloads"
    ]
  },
  {
    "index": 4328,
    "id": "CVE-2018-6159",
    "commit_id": "01b42e2bc2aac531b17596729ae4e5c223ae7124",
    "added_lines": [
      "const KURL& response_url = response.WasFetchedViaServiceWorker",
      "? response.OriginalURLViaServiceWorker",
      ": response.Url",
      "SecurityOrigin::Create(response_url"
    ],
    "removed_lines": [
      "SecurityOrigin::Create(response.Url"
    ],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "insufficient policy enforcement"
    ]
  },
  {
    "index": 4333,
    "id": "CVE-2018-6164",
    "commit_id": "0c45ffd2a1b2b6b91aaaac989ad10a76765083c6",
    "added_lines": [
      "cached_style_sheet->GetResponse().IsOpaqueResponseFromServiceWorker(),"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "insufficient origin checks for css content"
    ]
  },
  {
    "index": 4337,
    "id": "CVE-2018-6168",
    "commit_id": "c9450503817e3575a8acb049371b592863e6d555",
    "added_lines": [
      "const mojom::AssistantAllowedState kAllowedStates[] =",
      "mojom::AssistantAllowedState::ALLOWED,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_ARC_DISALLOWED,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_ARC_POLICY,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_LOCALE,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_FLAG,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_NONPRIMARY_USER,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_SUPERVISED_USER,",
      "mojom::AssistantAllowedState::DISALLOWED_BY_INCOGNITO,",
      "for (mojom::AssistantAllowedState allowed_state : kAllowedStates)",
      "for (int enabled = 0; enabled <= 1; enabled++)",
      "for (int context = 0; context <= 1; context++)",
      "const bool allowed =",
      "allowed_state == mojom::AssistantAllowedState::ALLOWED",
      "const bool ready = state != mojom::VoiceInteractionState::NOT_READY",
      "const bool selectable = allowed && enabled && context && ready",
      "Shell::Get()->voice_interaction_controller()->NotifyStatusChanged",
      "state",
      "Shell::Get()->voice_interaction_controller()->NotifySettingsEnabled",
      "enabled",
      "Shell::Get()->voice_interaction_controller()->NotifyContextEnabled",
      "context",
      "Shell::Get()->voice_interaction_controller()->NotifyFeatureAllowed",
      "allowed_state",
      "std::unique_ptr<views::View> view =",
      "base::WrapUnique(tool_->CreateView",
      "EXPECT_TRUE(view",
      "EXPECT_EQ(selectable, view->enabled",
      "const base::string16 label_text =",
      "static_cast<HoverHighlightView*>(view.get",
      "->text_label",
      "->text",
      "const bool label_contains_loading =",
      "label_text.find(kLoading) != base::string16::npos",
      "EXPECT_EQ(allowed && enabled && context && !ready,",
      "label_contains_loading",
      "tool_->OnViewDestroyed"
    ],
    "removed_lines": [
      "for (int enabled = 0; enabled <= 1; enabled++)",
      "for (int context = 0; context <= 1; context++)",
      "const bool ready = state != mojom::VoiceInteractionState::NOT_READY",
      "const bool selectable = enabled && context && ready",
      "Shell::Get()->voice_interaction_controller()->NotifyStatusChanged",
      "state",
      "Shell::Get()->voice_interaction_controller()->NotifySettingsEnabled",
      "enabled",
      "Shell::Get()->voice_interaction_controller()->NotifyContextEnabled",
      "context",
      "std::unique_ptr<views::View> view =",
      "base::WrapUnique(tool_->CreateView",
      "EXPECT_TRUE(view",
      "EXPECT_EQ(selectable, view->enabled",
      "const base::string16 label_text =",
      "static_cast<HoverHighlightView*>(view.get())->text_label()->text",
      "const bool label_contains_loading =",
      "label_text.find(kLoading) != base::string16::npos",
      "EXPECT_EQ(enabled && context && !ready, label_contains_loading",
      "tool_->OnViewDestroyed"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "information leak"
    ]
  },
  {
    "index": 4340,
    "id": "CVE-2018-6171",
    "commit_id": "c5c6320f80159dc41dffc3cfbf0298925c7dcf1b",
    "added_lines": [
      "std::unique_ptr<bluetooth_socket::Send::Params> params_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "+Info",
    "score": 2.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "use after free"
    ]
  },
  {
    "index": 4346,
    "id": "CVE-2018-6177",
    "commit_id": "4504a474c069d07104237d0c03bfce7b29a42de6",
    "added_lines": [
      "return GetWebMediaPlayer() ? GetWebMediaPlayer()->HasSingleSecurityOrigin",
      ": true",
      "bool MediaShouldBeOpaque() const"
    ],
    "removed_lines": [
      "return GetWebMediaPlayer() &&",
      "GetWebMediaPlayer()->HasSingleSecurityOrigin"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "information leak"
    ]
  },
  {
    "index": 4348,
    "id": "CVE-2018-6179",
    "commit_id": "f020de9f4788d81c05f0a4947dabfdb777604cc6",
    "added_lines": [
      "window.onload = function()",
      "var iframe = document.getElementById('file_iframe'",
      "try",
      "var url = iframe.contentWindow.location.href",
      "if (url === 'about:blank'",
      "chrome.test.sendMessage('denied'",
      "} catch (e)",
      "var expectedError =",
      "`Blocked a frame with origin \"${window.location.origin}\" from ` +",
      "`accessing a cross-origin frame.`",
      "if (e.message === expectedError",
      "chrome.test.sendMessage('allowed'"
    ],
    "removed_lines": [],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "file access permission"
    ]
  },
  {
    "index": 4352,
    "id": "CVE-2018-6150",
    "commit_id": "5a4aa3bcaf8a52637ef445b2d2d6112364984122",
    "added_lines": [
      "const topSha256 = \"sha256-KHIDZcXnR2oBHk9DrAA+5fFiR6JjudYjqoXtMR1zvzk=\"",
      "const topSha384 = \"sha384-MgZYnnAzPM/MjhqfOIMfQK5qcFvGZsGLzx4Phd7/A8fHTqqLqXqKo8cNzY3xEPTL\"",
      "const topSha512 = \"sha512-D6yns0qxG0E7+TwkevZ4Jt5t7Iy3ugmAajG/dlf6Pado1JqTyneKXICDiqFIkLMRExgtvg8PlxbKTkYfRejSOg==\"",
      "const invalidSha256 = \"sha256-dKUcPOn/AlUjWIwcHeHNqYXPlvyGiq+2dWOdFcE+24I=\"",
      "const invalidSha512 = \"sha512-oUceBRNxPxnY60g/VtPCj2syT4wo4EZh2CgYdWy9veW8+OsReTXoh7dizMGZafvx9+QhMS39L/gIkxnPIn41Zg==\"",
      "const path = dirname(location.pathname) + RESOURCES_DIR + \"top.txt\"",
      "const url = path",
      "const corsUrl =",
      "`http://{{host}}:{{ports[http][1]}}${path}?pipe=header(Access-Control-Allow-Origin,*)`",
      "const corsUrl2 = `https://{{host}}:{{ports[https][0]}}${path}`"
    ],
    "removed_lines": [
      "var topSha256 = \"sha256-KHIDZcXnR2oBHk9DrAA+5fFiR6JjudYjqoXtMR1zvzk=\"",
      "var topSha384 = \"sha384-MgZYnnAzPM/MjhqfOIMfQK5qcFvGZsGLzx4Phd7/A8fHTqqLqXqKo8cNzY3xEPTL\"",
      "var topSha512 = \"sha512-D6yns0qxG0E7+TwkevZ4Jt5t7Iy3ugmAajG/dlf6Pado1JqTyneKXICDiqFIkLMRExgtvg8PlxbKTkYfRejSOg==\"",
      "var invalidSha256 = \"sha256-dKUcPOn/AlUjWIwcHeHNqYXPlvyGiq+2dWOdFcE+24I=\"",
      "var invalidSha512 = \"sha512-oUceBRNxPxnY60g/VtPCj2syT4wo4EZh2CgYdWy9veW8+OsReTXoh7dizMGZafvx9+QhMS39L/gIkxnPIn41Zg==\"",
      "var url = \"../resources/top.txt\"",
      "var corsUrl = \"http://{{host}}:{{ports[http][1]}}\" + dirname(location.pathname) + RESOURCES_DIR + \"top.txt\"",
      "corsUrl += \"?pipe=header(Access-Control-Allow-Origin,*)\"",
      "var corsUrl2 = \"https://{{host}}:{{ports[https][0]}}/fetch/api/resource/top.txt\""
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "incorrect handling of cors in serviceworker"
    ]
  },
  {
    "index": 4371,
    "id": "CVE-2018-16078",
    "commit_id": "b025e82307a8490501bb030266cd955c391abcb7",
    "added_lines": [
      "histogram_tester.ExpectTotalCount(\"Autofill.AddressSuggestionsCount\", 1"
    ],
    "removed_lines": [
      "histogram_tester.ExpectTotalCount(\"Autofill.AddressSuggestionsCount\", 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 0.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "+Info ",
    "summary": [
      "Unsafe handling of credit card details in Autofill"
    ]
  },
  {
    "index": 4389,
    "id": "CVE-2018-6132",
    "commit_id": "a79e1bbb765af34d446e42d34cd00a312b381113",
    "added_lines": [
      "description_text->SetTextLayoutMode(TextLayoutMode::kSingleLineFixedWidth"
    ],
    "removed_lines": [
      "content_text->SetTextLayoutMode(TextLayoutMode::kSingleLineFixedWidth"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "+Info ",
    "summary": [
      "Uninitialized data in WebRTC",
      "uninitialized data"
    ]
  },
  {
    "index": 4393,
    "id": "CVE-2018-6137",
    "commit_id": "67d9b414fa64448abc398ae9fc57c3ddf5de5998",
    "added_lines": [
      "if (InsideLink() != EInsideLink::kNotInsideLink",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "CSS Paint API in Blink"
    ]
  },
  {
    "index": 4400,
    "id": "CVE-2018-6147",
    "commit_id": "f1574f25e1402e748bf2bd7e28ce3dd96ceb1ca4",
    "added_lines": [
      "#if defined(OS_MACOSX",
      "#include \"ui/base/cocoa/secure_password_input.h\"",
      "#endif",
      "TEST_F(TextfieldTest, SecurePasswordInput)",
      "InitTextfield",
      "ASSERT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->OnFocus",
      "EXPECT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->SetTextInputType(ui::TEXT_INPUT_TYPE_PASSWORD",
      "textfield_->OnFocus",
      "EXPECT_TRUE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->OnBlur",
      "EXPECT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "+Info",
    "score": 0.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "Lack of secure text entry mode in Browser UI"
    ]
  },
  {
    "index": 4412,
    "id": "CVE-2016-1677",
    "commit_id": "b63b45e4c49bf9af674e09d9bd362a1a10ee6bff",
    "added_lines": [
      "intent.putExtra(CustomTabIntentDataProvider.EXTRA_IS_OPENED_BY_WEBAPK, true"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 4422,
    "id": "CVE-2016-1687",
    "commit_id": "57cea39f336a9465aafdec373867b9c36de9394c",
    "added_lines": [
      "<int value=\"359601954\" label=\"CrostiniUsbSupport:enabled\"/>",
      "<int value=\"773563826\" label=\"CrostiniUsbSupport:disabled\"/>"
    ],
    "removed_lines": [],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "+Info",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "+Info ",
    "summary": [
      "does not properly restrict public exposure of classes"
    ]
  }
]