[
  {
    "index": 4,
    "id": "CVE-2010-1152",
    "commit_id": "d9cd01ede97f4145af9781d448c62a3318952719",
    "added_lines": [
      "if (ptr - c->rcurr > 100 ||",
      "(strncmp(ptr, \"get \", 4) && strncmp(ptr, \"gets \", 5)))"
    ],
    "removed_lines": [
      "if (strcmp(ptr, \"get \") && strcmp(ptr, \"gets \"))"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 6,
    "id": "CVE-2011-2161",
    "commit_id": "8312e3fc9041027a33c8bc667bb99740fdf41dd5",
    "added_lines": [
      "if(!ape->totalframes",
      "av_log(s, AV_LOG_ERROR, \"No frames in the file!\\n\"",
      "return AVERROR(EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 9,
    "id": "CVE-2012-5532",
    "commit_id": "95a69adab9acfc3981c504737a2b6578e4d846ef",
    "added_lines": [
      "if (len < 0)",
      "if (addr.nl_pid)",
      "syslog(LOG_WARNING, \"Received packet from untrusted pid:%u\",",
      "addr.nl_pid",
      "continue"
    ],
    "removed_lines": [
      "if (len < 0 || addr.nl_pid)"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 10,
    "id": "CVE-2012-5517",
    "commit_id": "08dff7b7d629807dbb1f398c68dd9cd58dd657a1",
    "added_lines": [
      "if (onlined_pages)",
      "node_set_state(zone_to_nid(zone), N_HIGH_MEMORY",
      "if (need_zonelists_rebuild",
      "build_all_zonelists(NULL, zone",
      "else",
      "zone_pcp_update(zone",
      "if (onlined_pages"
    ],
    "removed_lines": [
      "if (need_zonelists_rebuild",
      "build_all_zonelists(NULL, zone",
      "else",
      "zone_pcp_update(zone",
      "if (onlined_pages)",
      "node_set_state(zone_to_nid(zone), N_HIGH_MEMORY"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 11,
    "id": "CVE-2012-4565",
    "commit_id": "8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664",
    "added_lines": [
      "if (info.tcpv_rttcnt > 0)",
      "u64 t = ca->sum_rtt",
      "do_div(t, info.tcpv_rttcnt",
      "info.tcpv_rtt = t"
    ],
    "removed_lines": [
      "u64 t = ca->sum_rtt",
      "do_div(t, ca->cnt_rtt",
      "info.tcpv_rtt = t"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 13,
    "id": "CVE-2012-4467",
    "commit_id": "ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d",
    "added_lines": [
      "err = compat_put_timeval(&ktv, up",
      "err = compat_put_timespec(&kts, up"
    ],
    "removed_lines": [
      "err = compat_put_timeval(up, &ktv",
      "err = compat_put_timespec(up, &kts"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 6.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 15,
    "id": "CVE-2012-3552",
    "commit_id": "f6d8bd051c391c1c0458a30b2a7abcd939329259",
    "added_lines": [
      "struct ip_options_rcu *inet_opt",
      "inet_opt = rcu_dereference_protected(inet->inet_opt,",
      "sock_owned_by_user(sk",
      "if (inet_opt && inet_opt->opt.srr",
      "daddr = inet_opt->opt.faddr"
    ],
    "removed_lines": [
      "struct ip_options *opt = inet->opt",
      "if (opt && opt->srr",
      "daddr = opt->faddr"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 18,
    "id": "CVE-2012-3511",
    "commit_id": "9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb",
    "added_lines": [
      "#include <linux/file.h>",
      "struct file *f",
      "f = vma->vm_file",
      "if (!f || !f->f_mapping || !f->f_mapping->host)",
      "get_file(f",
      "error = do_fallocate(f,",
      "fput(f"
    ],
    "removed_lines": [
      "if (!vma->vm_file || !vma->vm_file->f_mapping",
      "|| !vma->vm_file->f_mapping->host)",
      "error = do_fallocate(vma->vm_file,"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.2,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 19,
    "id": "CVE-2012-3510",
    "commit_id": "f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9",
    "added_lines": [
      "struct mm_struct *mm",
      "mm = get_task_mm(p",
      "if (mm)",
      "stats->hiwater_rss   = mm->hiwater_rss * PAGE_SIZE / KB",
      "stats->hiwater_vm    = mm->hiwater_vm * PAGE_SIZE / KB",
      "mmput(mm"
    ],
    "removed_lines": [
      "if (p->mm)",
      "stats->hiwater_rss   = p->mm->hiwater_rss * PAGE_SIZE / KB",
      "stats->hiwater_vm    = p->mm->hiwater_vm * PAGE_SIZE / KB"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 5.6,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 21,
    "id": "CVE-2012-3412",
    "commit_id": "68cb695ccecf949d48949e72f8ce591fdaaa325c",
    "added_lines": [
      "unsigned int efx_tx_max_skb_descs(struct efx_nic *efx",
      "unsigned int max_descs = EFX_TSO_MAX_SEGS * 2 + MAX_SKB_FRAGS",
      "if (EFX_WORKAROUND_5391(efx",
      "max_descs += EFX_TSO_MAX_SEGS",
      "if (PAGE_SIZE > EFX_PAGE_SIZE",
      "max_descs += max_t(unsigned int, MAX_SKB_FRAGS,",
      "DIV_ROUND_UP(GSO_MAX_SIZE, EFX_PAGE_SIZE",
      "return max_descs"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 23,
    "id": "CVE-2012-3375",
    "commit_id": "13d518074a952d33d47c428419693f63389547e9",
    "added_lines": [
      "if (ep_loop_check(ep, tfile) != 0)",
      "clear_tfile_check_list"
    ],
    "removed_lines": [
      "if (ep_loop_check(ep, tfile) != 0"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle ELOOP errors in EPOLL_CTL_ADD operations"
    ]
  },
  {
    "index": 25,
    "id": "CVE-2012-2744",
    "commit_id": "9e2dcf72023d1447f09c47d77c99b0c49659e5ce",
    "added_lines": [
      "if (fp && NFCT_FRAG6_CB(fp)->orig == NULL"
    ],
    "removed_lines": [
      "if (NFCT_FRAG6_CB(fp)->orig == NULL",
      "if (!(fhdr->frag_off & htons(0xFFF9)))",
      "pr_debug(\"Invalid fragment offset\\n\"",
      "goto ret_orig"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 29,
    "id": "CVE-2012-2390",
    "commit_id": "c50ac050811d6485616a193eb0f37bfbd191cc89",
    "added_lines": [
      "static void resv_map_put(struct vm_area_struct *vma",
      "struct resv_map *reservations = vma_resv_map(vma",
      "if (!reservations",
      "return",
      "kref_put(&reservations->refs, resv_map_release",
      "resv_map_put(vma",
      "if (chg < 0)",
      "ret = chg",
      "goto out_err",
      "if (hugepage_subpool_get_pages(spool, chg))",
      "ret = -ENOSPC",
      "goto out_err",
      "goto out_err",
      "out_err:",
      "resv_map_put(vma",
      "return ret"
    ],
    "removed_lines": [
      "kref_put(&reservations->refs, resv_map_release",
      "if (chg < 0",
      "return chg",
      "if (hugepage_subpool_get_pages(spool, chg",
      "return -ENOSPC",
      "return ret"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 30,
    "id": "CVE-2012-2385",
    "commit_id": "9791768705528e911bfca6c4d8aa88139035060e",
    "added_lines": [
      "static const int PARAM_MAX = 65535"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 33,
    "id": "CVE-2012-2375",
    "commit_id": "20e0fa98b751facf9a1101edaefbc19c82616a68",
    "added_lines": [
      "acl_len"
    ],
    "removed_lines": [
      "res.acl_len"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses an incorrect length variable during a copy operation"
    ]
  },
  {
    "index": 34,
    "id": "CVE-2012-2373",
    "commit_id": "26c191788f18129af0eb32a358cdaea0c7479626",
    "added_lines": [
      "#ifndef pmd_read_atomic",
      "static inline pmd_t pmd_read_atomic(pmd_t *pmdp",
      "return *pmdp",
      "#endif",
      "pmd_t pmdval = pmd_read_atomic(pmd"
    ],
    "removed_lines": [
      "pmd_t pmdval = *pmd"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 38,
    "id": "CVE-2012-2133",
    "commit_id": "90481622d75715bfcb68501280a917dbfe516029",
    "added_lines": [
      "static inline void unlock_or_release_subpool(struct hugepage_subpool *spool",
      "bool free = (spool->count == 0) && (spool->used_hpages == 0",
      "spin_unlock(&spool->lock",
      "if (free",
      "kfree(spool",
      "struct hugepage_subpool *hugepage_new_subpool(long nr_blocks",
      "struct hugepage_subpool *spool",
      "spool = kmalloc(sizeof(*spool), GFP_KERNEL",
      "if (!spool",
      "return NULL",
      "spin_lock_init(&spool->lock",
      "spool->count = 1",
      "spool->max_hpages = nr_blocks",
      "spool->used_hpages = 0",
      "return spool",
      "void hugepage_put_subpool(struct hugepage_subpool *spool",
      "spin_lock(&spool->lock",
      "BUG_ON(!spool->count",
      "spool->count--",
      "unlock_or_release_subpool(spool",
      "static int hugepage_subpool_get_pages(struct hugepage_subpool *spool,",
      "long delta",
      "int ret = 0",
      "if (!spool",
      "return 0",
      "spin_lock(&spool->lock",
      "if ((spool->used_hpages + delta) <= spool->max_hpages)",
      "spool->used_hpages += delta",
      "} else",
      "ret = -ENOMEM",
      "spin_unlock(&spool->lock",
      "return ret",
      "static void hugepage_subpool_put_pages(struct hugepage_subpool *spool,",
      "long delta",
      "if (!spool",
      "return",
      "spin_lock(&spool->lock",
      "spool->used_hpages -= delta",
      "unlock_or_release_subpool(spool",
      "static inline struct hugepage_subpool *subpool_inode(struct inode *inode",
      "return HUGETLBFS_SB(inode->i_sb)->spool",
      "static inline struct hugepage_subpool *subpool_vma(struct vm_area_struct *vma",
      "return subpool_inode(vma->vm_file->f_dentry->d_inode",
      "struct hugepage_subpool *spool =",
      "(struct hugepage_subpool *)page_private(page",
      "hugepage_subpool_put_pages(spool, 1",
      "struct hugepage_subpool *spool = subpool_vma(vma",
      "if (hugepage_subpool_get_pages(spool, chg",
      "hugepage_subpool_put_pages(spool, chg",
      "set_page_private(page, (unsigned long)spool",
      "struct hugepage_subpool *spool = subpool_vma(vma",
      "hugepage_subpool_put_pages(spool, reserve",
      "mapping = vma->vm_file->f_dentry->d_inode->i_mapping",
      "struct hugepage_subpool *spool = subpool_inode(inode",
      "if (hugepage_subpool_get_pages(spool, chg",
      "hugepage_subpool_put_pages(spool, chg",
      "struct hugepage_subpool *spool = subpool_inode(inode",
      "hugepage_subpool_put_pages(spool, (chg - freed"
    ],
    "removed_lines": [
      "struct address_space *mapping",
      "mapping = (struct address_space *) page_private(page",
      "if (mapping",
      "hugetlb_put_quota(mapping, 1",
      "struct address_space *mapping = vma->vm_file->f_mapping",
      "struct inode *inode = mapping->host",
      "if (hugetlb_get_quota(inode->i_mapping, chg",
      "hugetlb_put_quota(inode->i_mapping, chg",
      "set_page_private(page, (unsigned long) mapping",
      "hugetlb_put_quota(vma->vm_file->f_mapping, reserve",
      "mapping = (struct address_space *)page_private(page",
      "if (hugetlb_get_quota(inode->i_mapping, chg",
      "hugetlb_put_quota(inode->i_mapping, chg",
      "hugetlb_put_quota(inode->i_mapping, (chg - freed"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 4.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 41,
    "id": "CVE-2012-2121",
    "commit_id": "09ca8e1173bcb12e2a449698c9ae3b86a8a10195",
    "added_lines": [
      "} else",
      "kvm_iommu_unmap_pages(kvm, &old"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 42,
    "id": "CVE-2012-2100",
    "commit_id": "d50f2ab6f050311dbf7b8f5501b25f0bf64a439b",
    "added_lines": [
      "unsigned int groups_per_flex = 0",
      "if (sbi->s_log_groups_per_flex < 1 || sbi->s_log_groups_per_flex > 31)",
      "groups_per_flex = 1 << sbi->s_log_groups_per_flex"
    ],
    "removed_lines": [
      "int groups_per_flex = 0",
      "groups_per_flex = 1 << sbi->s_log_groups_per_flex",
      "if (groups_per_flex < 2)"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 43,
    "id": "CVE-2012-1910",
    "commit_id": "8864019f6d88b13d3442843d9e6ebeb8dd938831",
    "added_lines": [
      "sed 's/QMAKE_LIBS_QT_ENTRY     = -lmingw32 -lqtmain/QMAKE_LIBS_QT_ENTRY     = -lqtmain/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "does not use MinGW multithread-safe exception handling"
    ]
  },
  {
    "index": 45,
    "id": "CVE-2012-1601",
    "commit_id": "9c895160d25a76c21b65bad141b08e8d4f99afef",
    "added_lines": [
      "if (!kvm_vcpu_compatible(vcpu))",
      "r = -EINVAL",
      "goto unlock_vcpu_destroy"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference"
    ]
  },
  {
    "index": 47,
    "id": "CVE-2012-1583",
    "commit_id": "d0772b70faaf8e9f2013b6c4273d94d5eac8047a",
    "added_lines": [
      "return xfrm6_rcv_spi(skb, spi) > 0 ? : 0"
    ],
    "removed_lines": [
      "return xfrm6_rcv_spi(skb, spi"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 49,
    "id": "CVE-2012-1179",
    "commit_id": "4a1d704194a441bf83c636004a479e01360ec850",
    "added_lines": [
      "if (pmd_none_or_trans_huge_or_clear_bad(pmd"
    ],
    "removed_lines": [
      "if (unlikely(pmd_trans_huge(*pmd",
      "continue",
      "if (pmd_none_or_clear_bad(pmd"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.2,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "administrative access to the guest OS, related to the pmd_none_or_clear_bad function and page faults for huge pages"
    ]
  },
  {
    "index": 51,
    "id": "CVE-2012-1146",
    "commit_id": "371528caec553785c37f73fa3926ea0de84f986f",
    "added_lines": [
      "if (!thresholds->primary",
      "goto unlock",
      "unlock:"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 52,
    "id": "CVE-2012-1108",
    "commit_id": "b3646a07348ffa276ea41a9dae03ddc63ea6c532",
    "added_lines": [
      "uint commentFields = data.mid(pos, 4).toUInt(false",
      "if(commentFields > (data.size() - 8) / 4)",
      "return",
      "for(uint i = 0; i < commentFields; i++)",
      "uint commentLength = data.mid(pos, 4).toUInt(false",
      "if(pos > data.size())",
      "break",
      "if(commentSeparatorPosition == -1)",
      "break"
    ],
    "removed_lines": [
      "int commentFields = data.mid(pos, 4).toUInt(false",
      "for(int i = 0; i < commentFields; i++)",
      "int commentLength = data.mid(pos, 4).toUInt(false"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 53,
    "id": "CVE-2012-1107",
    "commit_id": "77d61c6eca4d08b9b025738acf6b926cc750db23",
    "added_lines": [
      "d->length = d->sampleRate > 0 ? totalBlocks / d->sampleRate : 0"
    ],
    "removed_lines": [
      "d->length = totalBlocks / d->sampleRate"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 54,
    "id": "CVE-2012-1097",
    "commit_id": "c8e252586f8d5de906385d8cf6385fee289a825e",
    "added_lines": [
      "if (!regset->get",
      "return -EOPNOTSUPP",
      "if (!regset->set",
      "return -EOPNOTSUPP"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 55,
    "id": "CVE-2012-1090",
    "commit_id": "88d7d4e4a439f32acc56a6d860e415ee71d3df08",
    "added_lines": [
      "switch (rc)",
      "case 0:",
      "if (newInode && !S_ISREG(newInode->i_mode))",
      "CIFSSMBClose(xid, pTcon, fileHandle",
      "break",
      "case -ENOENT:",
      "case -EOPNOTSUPP:",
      "break",
      "default:"
    ],
    "removed_lines": [
      "if ((rc == 0) || (rc == -ENOENT",
      "else if ((rc == -EINVAL) || (rc != -EOPNOTSUPP"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 56,
    "id": "CVE-2012-1013",
    "commit_id": "c5be6209311d4a8f10fda37d0d3f876c1b33b77b",
    "added_lines": [
      "if (password == NULL || !(mask & KADM5_ATTRIBUTES) ||"
    ],
    "removed_lines": [
      "if (!(mask & KADM5_ATTRIBUTES) ||"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 58,
    "id": "CVE-2012-0879",
    "commit_id": "61cc74fbb87af6aa551a06a370590c9bc07e29d9",
    "added_lines": [
      "put_io_context(ioc"
    ],
    "removed_lines": [
      "put_io_context(ioc"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle the CLONE_IO feature"
    ]
  },
  {
    "index": 61,
    "id": "CVE-2012-0207",
    "commit_id": "a8c1f65c79cbbb2f7da782d4c9d15639a9b94b27",
    "added_lines": [
      "if (!max_delay",
      "max_delay = 1;"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 62,
    "id": "CVE-2012-0058",
    "commit_id": "802f43594d6e4d2ac61086d239153c17873a0428",
    "added_lines": [
      "static void kiocb_batch_free(struct kioctx *ctx, struct kiocb_batch *batch",
      "if (list_empty(&batch->head",
      "return",
      "spin_lock_irq(&ctx->ctx_lock",
      "list_del(&req->ki_list",
      "ctx->reqs_active--",
      "spin_unlock_irq(&ctx->ctx_lock",
      "kiocb_batch_free(ctx, &batch"
    ],
    "removed_lines": [
      "static void kiocb_batch_free(struct kiocb_batch *batch",
      "kiocb_batch_free(&batch"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 63,
    "id": "CVE-2012-0045",
    "commit_id": "c2226fc9e87ba3da060e47333657cd6616652b84",
    "added_lines": [
      "static bool em_syscall_is_enabled(struct x86_emulate_ctxt *ctxt",
      "struct x86_emulate_ops *ops = ctxt->ops",
      "u32 eax, ebx, ecx, edx",
      "if (ctxt->mode == X86EMUL_MODE_PROT64",
      "return true",
      "eax = 0x00000000",
      "ecx = 0x00000000",
      "if (ops->get_cpuid(ctxt, &eax, &ebx, &ecx, &edx))",
      "if (ebx == X86EMUL_CPUID_VENDOR_GenuineIntel_ebx &&",
      "ecx == X86EMUL_CPUID_VENDOR_GenuineIntel_ecx &&",
      "edx == X86EMUL_CPUID_VENDOR_GenuineIntel_edx",
      "return false",
      "if (ebx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ebx &&",
      "ecx == X86EMUL_CPUID_VENDOR_AuthenticAMD_ecx &&",
      "edx == X86EMUL_CPUID_VENDOR_AuthenticAMD_edx",
      "return true",
      "if (ebx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ebx &&",
      "ecx == X86EMUL_CPUID_VENDOR_AMDisbetterI_ecx &&",
      "edx == X86EMUL_CPUID_VENDOR_AMDisbetterI_edx",
      "return true",
      "return false",
      "if (!(em_syscall_is_enabled(ctxt",
      "return emulate_ud(ctxt",
      "if (!(efer & EFER_SCE",
      "return emulate_ud(ctxt"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle the 0f05 (aka syscall) opcode,"
    ]
  },
  {
    "index": 68,
    "id": "CVE-2012-0028",
    "commit_id": "8141c7f3e7aee618312fa1c15109e1219de784a7",
    "added_lines": [
      "#include <linux/compat.h>",
      "#ifdef CONFIG_FUTEX",
      "if (unlikely(tsk->robust_list",
      "exit_robust_list(tsk",
      "#ifdef CONFIG_COMPAT",
      "if (unlikely(tsk->compat_robust_list",
      "compat_exit_robust_list(tsk",
      "#endif",
      "#endif"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "does not properly handle processes that make exec system calls"
    ]
  },
  {
    "index": 69,
    "id": "CVE-2011-4914",
    "commit_id": "e0bccd315db0c2f919e7fcf9cb60db21d9986f52",
    "added_lines": [
      "if (len < 2",
      "return -1",
      "if (len < 3",
      "return -1",
      "if (len < 4",
      "return -1",
      "if (len < 2",
      "return -1",
      "if (len < 2 + l",
      "return -1",
      "if (l < AX25_ADDR_LEN",
      "return -1",
      "if (l < AX25_ADDR_LEN",
      "return -1",
      "if (l < AX25_ADDR_LEN",
      "return -1",
      "if (l < 1 + ROSE_ADDR_LEN",
      "return -1",
      "if (l % AX25_ADDR_LEN",
      "return -1",
      "if (len < 2",
      "return -1",
      "if (len < 3",
      "return -1",
      "if (len < 4",
      "return -1",
      "if (len < 2",
      "return -1",
      "int rose_parse_facilities(unsigned char *p, unsigned packet_len,",
      "if (facilities_len == 0 || (unsigned)facilities_len > packet_len",
      "while (facilities_len >= 3 && *p == 0x00)",
      "facilities_len--",
      "p++",
      "switch (*p)",
      "case FAC_NATIONAL:",
      "len = rose_parse_national(p + 1, facilities, facilities_len - 1",
      "break",
      "case FAC_CCITT:",
      "len = rose_parse_ccitt(p + 1, facilities, facilities_len - 1",
      "break",
      "default:",
      "printk(KERN_DEBUG \"ROSE: rose_parse_facilities - unknown facilities family %02X\\n\", *p",
      "len = 1",
      "break",
      "if (len < 0",
      "return 0",
      "if (WARN_ON(len >= facilities_len",
      "return 0",
      "facilities_len -= len + 1",
      "p += len + 1",
      "return facilities_len == 0"
    ],
    "removed_lines": [
      "int rose_parse_facilities(unsigned char *p,",
      "if (facilities_len == 0",
      "while (facilities_len > 0)",
      "if (*p == 0x00)",
      "facilities_len--",
      "p++",
      "switch (*p)",
      "case FAC_NATIONAL:",
      "len = rose_parse_national(p + 1, facilities, facilities_len - 1",
      "if (len < 0",
      "return 0",
      "facilities_len -= len + 1",
      "p += len + 1",
      "break",
      "case FAC_CCITT:",
      "len = rose_parse_ccitt(p + 1, facilities, facilities_len - 1",
      "if (len < 0",
      "return 0",
      "facilities_len -= len + 1",
      "p += len + 1",
      "break",
      "default:",
      "printk(KERN_DEBUG \"ROSE: rose_parse_facilities - unknown facilities family %02X\\n\", *p",
      "facilities_len--",
      "p++",
      "break",
      "} else",
      "break;",
      "return 1"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 6.4,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 71,
    "id": "CVE-2011-4621",
    "commit_id": "f26f9aff6aaf67e9a430d16c266f91b13a5bff64",
    "added_lines": [
      "int cpu = cpu_of(rq",
      "u64 irq_time",
      "if (rq->skip_clock_update",
      "return",
      "rq->clock = sched_clock_cpu(cpu",
      "irq_time = irq_time_cpu(cpu",
      "if (rq->clock - irq_time > rq->clock_task",
      "rq->clock_task = rq->clock - irq_time",
      "sched_irq_time_avg_update(rq, irq_time",
      "if (rq->curr->se.on_rq && test_tsk_need_resched(rq->curr",
      "clear_tsk_need_resched(prev",
      "rq->skip_clock_update = 0",
      "WARN_ON_ONCE(test_tsk_need_resched(next"
    ],
    "removed_lines": [
      "if (!rq->skip_clock_update)",
      "int cpu = cpu_of(rq",
      "u64 irq_time",
      "rq->clock = sched_clock_cpu(cpu",
      "irq_time = irq_time_cpu(cpu",
      "if (rq->clock - irq_time > rq->clock_task",
      "rq->clock_task = rq->clock - irq_time",
      "sched_irq_time_avg_update(rq, irq_time",
      "if (test_tsk_need_resched(rq->curr",
      "rq->skip_clock_update = 0",
      "clear_tsk_need_resched(prev"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS ExecCode",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "does not properly implement a certain clock-update optimization"
    ]
  },
  {
    "index": 73,
    "id": "CVE-2011-4594",
    "commit_id": "bc909d9ddbf7778371e36a651d6e4194b1cc7d4c",
    "added_lines": [
      "if (used_address && msg_sys->msg_name &&",
      "used_address->name_len == msg_sys->msg_namelen &&",
      "!memcmp(&used_address->name, msg_sys->msg_name,",
      "if (msg_sys->msg_name",
      "memcpy(&used_address->name, msg_sys->msg_name,",
      "used_address->name_len"
    ],
    "removed_lines": [
      "if (used_address && used_address->name_len == msg_sys->msg_namelen &&",
      "!memcmp(&used_address->name, msg->msg_name,",
      "memcpy(&used_address->name, msg->msg_name,",
      "used_address->name_len"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer"
    ]
  },
  {
    "index": 74,
    "id": "CVE-2011-4326",
    "commit_id": "a9cf73ea7ff78f52662c8658d93c226effbbedde",
    "added_lines": [
      "if ((skb_mac_header(skb) < skb->head + frag_hdr_sz) &&"
    ],
    "removed_lines": [
      "if ((skb_headroom(skb) < frag_hdr_sz) &&"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "by sending fragmented IPv6 UDP packets to a bridge device"
    ]
  },
  {
    "index": 75,
    "id": "CVE-2011-4324",
    "commit_id": "dc0b027dfadfcb8a5504f7d8052754bf8d501ab9",
    "added_lines": [
      "fmode_t\t\t\tfmode",
      "fmode_t\t\t\tfmode"
    ],
    "removed_lines": [
      "int\t\t\topen_flags"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "by using the mknod system call with a pathname on an NFSv4 filesystem"
    ]
  },
  {
    "index": 76,
    "id": "CVE-2011-4131",
    "commit_id": "bf118a342f10dafe44b14451a1392c3254629a1f",
    "added_lines": [
      "void",
      "EXPORT_SYMBOL_GPL(_copy_from_pages"
    ],
    "removed_lines": [
      "static void"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle bitmap sizes in GETACL replies"
    ]
  },
  {
    "index": 78,
    "id": "CVE-2011-4112",
    "commit_id": "550fd08c2cebad61c548def135f67aba284c6162",
    "added_lines": [
      "dev->priv_flags &= ~IFF_TX_SKB_SHARING"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict use of the IFF_TX_SKB_SHARING flag,",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 81,
    "id": "CVE-2011-4081",
    "commit_id": "7ed47b7d142ec99ad6880bbbec51e9f12b3af74c",
    "added_lines": [
      "if (!ctx->gf128",
      "return -ENOKEY",
      "if (!ctx->gf128",
      "return -ENOKEY"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 83,
    "id": "CVE-2011-3637",
    "commit_id": "76597cd31470fa130784c78fadb4dab2e624a723",
    "added_lines": [
      "if (!IS_ERR(vma",
      "vma_stop(priv, vma"
    ],
    "removed_lines": [
      "vma_stop(priv, vma"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 84,
    "id": "CVE-2011-3363",
    "commit_id": "70945643722ffeac779d2529a348f99567fa5c33",
    "added_lines": [
      "if (!rc && tcon)"
    ],
    "removed_lines": [
      "if (!rc && cifs_sb->prepathlen && tcon)"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle DFS referrals"
    ]
  },
  {
    "index": 87,
    "id": "CVE-2011-3209",
    "commit_id": "f8bd2258e2d520dff28c855658bd24bdafb5102d",
    "added_lines": [
      "#include <linux/math64.h>",
      "l->min_time,",
      "(long)div_u64(l->sum_time, l->count),",
      "l->max_time"
    ],
    "removed_lines": [
      "unsigned long remainder",
      "l->min_time,",
      "div_long_long_rem(l->sum_time, l->count, &remainder),",
      "l->max_time"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 88,
    "id": "CVE-2011-3191",
    "commit_id": "9438fabb73eb48055b58b89fc51e0bc4db22fabd",
    "added_lines": [
      "int bytes_returned",
      "unsigned int name_len"
    ],
    "removed_lines": [
      "int bytes_returned, name_len"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 10.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "integer signedness error"
    ]
  },
  {
    "index": 89,
    "id": "CVE-2011-3188",
    "commit_id": "6e5714eaf77d79ae1c8b47e3e040ff5411b717ec",
    "added_lines": [
      "#include <net/secure_seq.h>"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use a modified MD4 algorithm to generate sequence numbers and Fragment Identification values"
    ]
  },
  {
    "index": 91,
    "id": "CVE-2011-2906",
    "commit_id": "b5b515445f4f5a905c5dd27e6e682868ccd6c09d",
    "added_lines": [
      "} else if (request_size < 0)",
      "rc = -EINVAL",
      "goto out_free_buffer"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "ioctl call",
      "integer signedness error"
    ]
  },
  {
    "index": 94,
    "id": "CVE-2011-2699",
    "commit_id": "87c48fa3b4630905f98268dde838ee43626a060c",
    "added_lines": [
      "ipv6_select_ident(fptr, (struct rt6_info *)skb_dst(skb"
    ],
    "removed_lines": [
      "ipv6_select_ident(fptr"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not generate Fragment Identification values separately for each destination"
    ]
  },
  {
    "index": 95,
    "id": "CVE-2011-2521",
    "commit_id": "fc66c5210ec2539e800e87d7b3a985323c7be96e",
    "added_lines": [
      "hwc->event_base = MSR_ARCH_PERFMON_FIXED_CTR0 + (hwc->idx - X86_PMC_IDX_FIXED"
    ],
    "removed_lines": [
      "hwc->event_base = MSR_ARCH_PERFMON_FIXED_CTR0"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly calculate counter values"
    ]
  },
  {
    "index": 96,
    "id": "CVE-2011-2518",
    "commit_id": "4e78c724d47e2342aa8fde61f6b8536f662f795f",
    "added_lines": [
      "if (!dev_name || kern_path(dev_name, LOOKUP_FOLLOW, &path))"
    ],
    "removed_lines": [
      "if (kern_path(dev_name, LOOKUP_FOLLOW, &path))"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "calls the kern_path function with arguments taken directly from a mount system call"
    ]
  },
  {
    "index": 101,
    "id": "CVE-2011-2493",
    "commit_id": "0449641130f5652b344ef6fa39fa019d7e94660a",
    "added_lines": [
      "init_timer(&sbi->s_err_report",
      "sbi->s_err_report.function = print_daily_error_info",
      "sbi->s_err_report.data = (unsigned long) sb",
      "del_timer(&sbi->s_err_report"
    ],
    "removed_lines": [
      "init_timer(&sbi->s_err_report",
      "sbi->s_err_report.function = print_daily_error_info",
      "sbi->s_err_report.data = (unsigned long) sb"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly initialize a certain error-report data structure"
    ]
  },
  {
    "index": 104,
    "id": "CVE-2011-2183",
    "commit_id": "2b472611a32a72f4a118c069c2d62a1a3f087afd",
    "added_lines": [
      "if (slot == &ksm_mm_head",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "null pointer dereference"
    ]
  },
  {
    "index": 106,
    "id": "CVE-2011-1927",
    "commit_id": "64f3b9e203bd06855072e295557dca1485a2ecba",
    "added_lines": [
      "const struct iphdr *iph",
      "int err",
      "skb_dst_drop(head",
      "iph = ip_hdr(head",
      "err = ip_route_input_noref(head, iph->daddr, iph->saddr,",
      "iph->tos, head->dev",
      "if (err",
      "goto out_rcu_unlock",
      "if (qp->user == IP_DEFRAG_CONNTRACK_IN &&",
      "skb_rtable(head)->rt_type != RTN_LOCAL",
      "goto out_rcu_unlock"
    ],
    "removed_lines": [
      "if (qp->user == IP_DEFRAG_CONNTRACK_IN && !skb_dst(head))",
      "const struct iphdr *iph = ip_hdr(head",
      "int err = ip_route_input(head, iph->daddr, iph->saddr,",
      "iph->tos, head->dev",
      "if (unlikely(err",
      "goto out_rcu_unlock",
      "if (skb_rtable(head)->rt_type != RTN_LOCAL",
      "goto out_rcu_unlock"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid pointer dereference"
    ]
  },
  {
    "index": 108,
    "id": "CVE-2011-1768",
    "commit_id": "d5aa407f59f5b83d2c50ec88f5bf56d40f1f8978",
    "added_lines": [
      "xfrm6_tunnel_spi_kmem = kmem_cache_create(\"xfrm6_tunnel_spi\",",
      "sizeof(struct xfrm6_tunnel_spi),",
      "0, SLAB_HWCACHE_ALIGN,",
      "NULL",
      "if (!xfrm6_tunnel_spi_kmem",
      "return -ENOMEM",
      "rv = register_pernet_subsys(&xfrm6_tunnel_net_ops",
      "if (rv < 0",
      "goto out_pernet",
      "goto out_type",
      "goto out_xfrm6",
      "goto out_xfrm46",
      "out_xfrm46:",
      "out_xfrm6:",
      "out_type:",
      "unregister_pernet_subsys(&xfrm6_tunnel_net_ops",
      "out_pernet:",
      "kmem_cache_destroy(xfrm6_tunnel_spi_kmem",
      "unregister_pernet_subsys(&xfrm6_tunnel_net_ops",
      "kmem_cache_destroy(xfrm6_tunnel_spi_kmem"
    ],
    "removed_lines": [
      "static int __init xfrm6_tunnel_spi_init(void",
      "xfrm6_tunnel_spi_kmem = kmem_cache_create(\"xfrm6_tunnel_spi\",",
      "sizeof(struct xfrm6_tunnel_spi),",
      "0, SLAB_HWCACHE_ALIGN,",
      "NULL",
      "if (!xfrm6_tunnel_spi_kmem",
      "return -ENOMEM",
      "return 0",
      "static void xfrm6_tunnel_spi_fini(void",
      "kmem_cache_destroy(xfrm6_tunnel_spi_kmem",
      "goto err",
      "goto unreg",
      "goto dereg6",
      "rv = xfrm6_tunnel_spi_init",
      "if (rv < 0",
      "goto dereg46",
      "rv = register_pernet_subsys(&xfrm6_tunnel_net_ops",
      "if (rv < 0",
      "goto deregspi",
      "deregspi:",
      "xfrm6_tunnel_spi_fini",
      "dereg46:",
      "xfrm6_tunnel_deregister(&xfrm46_tunnel_handler, AF_INET",
      "dereg6:",
      "unreg:",
      "err:",
      "unregister_pernet_subsys(&xfrm6_tunnel_net_ops",
      "xfrm6_tunnel_spi_fini"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "by sending a packet during module loading"
    ]
  },
  {
    "index": 109,
    "id": "CVE-2011-1767",
    "commit_id": "c2892f02712e9516d72841d5c019ed6916329794",
    "added_lines": [
      "return err",
      "err = inet_add_protocol(&ipgre_protocol, IPPROTO_GRE",
      "if (err < 0)",
      "printk(KERN_INFO \"ipgre init: can't add protocol\\n\"",
      "goto add_proto_failed",
      "add_proto_failed:",
      "unregister_pernet_device(&ipgre_net_ops",
      "unregister_pernet_device(&ipgre_net_ops"
    ],
    "removed_lines": [
      "if (inet_add_protocol(&ipgre_protocol, IPPROTO_GRE) < 0)",
      "printk(KERN_INFO \"ipgre init: can't add protocol\\n\"",
      "return -EAGAIN",
      "goto gen_device_failed",
      "unregister_pernet_device(&ipgre_net_ops",
      "gen_device_failed:",
      "unregister_pernet_device(&ipgre_net_ops"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "by sending a packet during module loading"
    ]
  },
  {
    "index": 111,
    "id": "CVE-2011-1479",
    "commit_id": "d0de4dc584ec6aa3b26fffea320a8457827768fc",
    "added_lines": [
      "static struct fsnotify_group *inotify_new_group(unsigned int max_events",
      "group->inotify_data.user = get_current_user",
      "if (atomic_inc_return(&group->inotify_data.user->inotify_devs) >",
      "inotify_max_user_instances)",
      "fsnotify_put_group(group",
      "return ERR_PTR(-EMFILE",
      "group = inotify_new_group(inotify_max_queued_events",
      "if (IS_ERR(group",
      "return PTR_ERR(group",
      "if (ret < 0",
      "fsnotify_put_group(group"
    ],
    "removed_lines": [
      "struct user_struct *user = group->inotify_data.user",
      "atomic_dec(&user->inotify_devs",
      "static struct fsnotify_group *inotify_new_group(struct user_struct *user, unsigned int max_events",
      "group->inotify_data.user = user",
      "struct user_struct *user",
      "user = get_current_user",
      "if (unlikely(atomic_read(&user->inotify_devs) >=",
      "inotify_max_user_instances))",
      "ret = -EMFILE",
      "goto out_free_uid",
      "group = inotify_new_group(user, inotify_max_queued_events",
      "if (IS_ERR(group))",
      "ret = PTR_ERR(group",
      "goto out_free_uid",
      "atomic_inc(&user->inotify_devs",
      "if (ret >= 0",
      "return ret",
      "fsnotify_put_group(group",
      "atomic_dec(&user->inotify_devs",
      "out_free_uid:",
      "free_uid(user"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 113,
    "id": "CVE-2011-1476",
    "commit_id": "b769f49463711205d57286e64cf535ed4daf59e9",
    "added_lines": [
      "err = synth_devs[dev]->load_patch(dev, fmt, buf + p, c, 0"
    ],
    "removed_lines": [
      "err = synth_devs[dev]->load_patch(dev, fmt, buf, p + 4, c, 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "integer underflow",
      "integer underflow"
    ]
  },
  {
    "index": 116,
    "id": "CVE-2011-1079",
    "commit_id": "43629f8f5ea32a998d06d1bb41eefa0e821ff573",
    "added_lines": [
      "ca.device[sizeof(ca.device)-1] = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 5.4,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Info ",
    "summary": [
      "'0' character"
    ]
  },
  {
    "index": 118,
    "id": "CVE-2011-1023",
    "commit_id": "6094628bfd94323fc1cea05ec2c6affd98c18f7f",
    "added_lines": [
      "struct scatterlist *sgp = &rm->data.op_sg[sg]",
      "int ret = sizeof(struct rds_header) +",
      "be32_to_cpu(rm->m_inc.i_hdr.h_len",
      "ret = min_t(int, ret, sgp->length - conn->c_xmit_data_off",
      "goto out",
      "out:",
      "return ret"
    ],
    "removed_lines": [
      "return sizeof(struct rds_header) + RDS_CONG_MAP_BYTES",
      "return sizeof(struct rds_header) + be32_to_cpu(rm->m_inc.i_hdr.h_len"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle congestion map updates"
    ]
  },
  {
    "index": 120,
    "id": "CVE-2011-0716",
    "commit_id": "6b0d6a9b4296fa16a28d10d416db7a770fc03287",
    "added_lines": [
      "if (hlist_unhashed(&mp->mglist",
      "hlist_add_head(&mp->mglist, &br->mglist"
    ],
    "removed_lines": [
      "hlist_add_head(&mp->mglist, &br->mglist"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "by sending IGMP packets to a local interface"
    ]
  },
  {
    "index": 124,
    "id": "CVE-2010-4250",
    "commit_id": "a2ae4cc9a16e211c8a128ba10d22a85431f093ab",
    "added_lines": [
      "fsnotify_put_group(group"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 126,
    "id": "CVE-2013-7026",
    "commit_id": "a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1",
    "added_lines": [
      "struct file *shm_file",
      "shm_file = shp->shm_file",
      "shp->shm_file = NULL",
      "if (!is_file_hugepages(shm_file",
      "shmem_lock(shm_file, 0, shp->mlock_user",
      "user_shm_unlock(file_inode(shm_file)->i_size, shp->mlock_user",
      "fput(shm_file",
      "if (shm_file == NULL)",
      "err = -EIDRM",
      "goto out_unlock0",
      "if (shp->shm_file == NULL)",
      "ipc_unlock_object(&shp->shm_perm",
      "err = -EIDRM",
      "goto out_unlock"
    ],
    "removed_lines": [
      "if (!is_file_hugepages(shp->shm_file",
      "shmem_lock(shp->shm_file, 0, shp->mlock_user",
      "user_shm_unlock(file_inode(shp->shm_file)->i_size,",
      "shp->mlock_user",
      "fput (shp->shm_file"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 130,
    "id": "CVE-2013-7021",
    "commit_id": "cdd5df8189ff1537f7abe8defe971f80602cc2d2",
    "added_lines": [
      "if (buf->pts == AV_NOPTS_VALUE || av_fifo_size(s->fifo) <= 0)"
    ],
    "removed_lines": [
      "if (buf->pts == AV_NOPTS_VALUE)"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 132,
    "id": "CVE-2013-7019",
    "commit_id": "a1b9004b768bef606ee98d417bceb9392ceb788d",
    "added_lines": [
      "if (c->nreslevels <= s->reduction_factor)",
      "not compatible with this bitstream, and as we might have used it",
      "already in setup earlier we have to fail this frame until",
      "reinitialization is implemented */",
      "av_log(s->avctx, AV_LOG_ERROR, \"reduction_factor too large for this bitstream, max is %d\\n\", c->nreslevels - 1",
      "s->reduction_factor = c->nreslevels - 1",
      "return AVERROR(EINVAL",
      "c->nreslevels2decode = c->nreslevels - s->reduction_factor"
    ],
    "removed_lines": [
      "if (c->nreslevels < s->reduction_factor",
      "c->nreslevels2decode = 1",
      "else",
      "c->nreslevels2decode = c->nreslevels - s->reduction_factor"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 134,
    "id": "CVE-2013-7017",
    "commit_id": "912ce9dd2080c5837285a471d750fa311e09b555",
    "added_lines": [
      "reslevel->band = av_calloc(reslevel->nbands, sizeof(*reslevel->band",
      "band->prec = av_calloc(reslevel->num_precincts_x *",
      "if (band->prec)",
      "Jpeg2000Prec *prec = band->prec + precno",
      "av_freep(&prec->zerobits",
      "av_freep(&prec->cblkincl",
      "av_freep(&prec->cblk"
    ],
    "removed_lines": [
      "reslevel->band = av_malloc_array(reslevel->nbands, sizeof(*reslevel->band",
      "band->prec = av_malloc_array(reslevel->num_precincts_x *",
      "Jpeg2000Prec *prec = band->prec + precno",
      "av_freep(&prec->zerobits",
      "av_freep(&prec->cblkincl",
      "av_freep(&prec->cblk"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid pointer dereference"
    ]
  },
  {
    "index": 136,
    "id": "CVE-2013-7015",
    "commit_id": "880c73cd76109697447fbfbaa8e5ee5683309446",
    "added_lines": [
      "if (s->diff_start + s->diff_height > cur_blk_height)",
      "av_log(avctx, AV_LOG_ERROR, \"Block parameters invalid\\n\"",
      "return AVERROR_INVALIDDATA"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 137,
    "id": "CVE-2013-7014",
    "commit_id": "86736f59d6a527d8bc807d09b93f971c0fe0bb07",
    "added_lines": [
      "for (i = 0; i <= w - (int)sizeof(long); i += sizeof(long))"
    ],
    "removed_lines": [
      "for (i = 0; i <= w - sizeof(long); i += sizeof(long))"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "integer signedness error",
      "out-of-bounds"
    ]
  },
  {
    "index": 138,
    "id": "CVE-2013-7013",
    "commit_id": "821a5938d100458f4d09d634041b05c860554ce0",
    "added_lines": [
      "c->tile_stride = FFALIGN(c->tile_width, 16) * 3"
    ],
    "removed_lines": [
      "c->tile_stride = FFALIGN(c->tile_width * 3, 16"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 141,
    "id": "CVE-2013-7010",
    "commit_id": "454a11a1c9c686c78aa97954306fb63453299760",
    "added_lines": [
      "for(i=0; i<=w-(int)sizeof(long); i+=sizeof(long",
      "for(i=0; i<=w-(int)sizeof(long); i+=sizeof(long"
    ],
    "removed_lines": [
      "for(i=0; i<=w-sizeof(long); i+=sizeof(long",
      "for(i=0; i<=w-sizeof(long); i+=sizeof(long"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "integer signedness error",
      "out-of-bounds"
    ]
  },
  {
    "index": 143,
    "id": "CVE-2013-7008",
    "commit_id": "29ffeef5e73b8f41ff3a3f2242d356759c66f91f",
    "added_lines": [
      "if (h0->cur_pic_ptr->tf.owner == h0->avctx)",
      "if (last_pic_structure != PICT_FRAME)",
      "if (last_pic_structure != PICT_FRAME)"
    ],
    "removed_lines": [
      "if (!last_pic_droppable && h0->cur_pic_ptr->tf.owner == h0->avctx)",
      "if (!last_pic_droppable && last_pic_structure != PICT_FRAME)",
      "if (!last_pic_droppable && last_pic_structure != PICT_FRAME)"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrectly relies on a certain droppable field"
    ]
  },
  {
    "index": 144,
    "id": "CVE-2013-6800",
    "commit_id": "c2ccf4197f697c4ff143b8a786acdd875e70a89d",
    "added_lines": [
      "if (sprinc == NULL",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 146,
    "id": "CVE-2013-6432",
    "commit_id": "cf970c002d270c36202bd5b9c2804d3097a52da0",
    "added_lines": [
      "if (sin)",
      "sin->sin_family = AF_INET",
      "sin->sin_port = 0",
      "sin->sin_addr.s_addr = ip_hdr(skb)->saddr",
      "memset(sin->sin_zero, 0, sizeof(sin->sin_zero",
      "if (sin6)",
      "sin6->sin6_family = AF_INET6",
      "sin6->sin6_port = 0",
      "sin6->sin6_addr = ip6->saddr",
      "sin6->sin6_flowinfo = 0",
      "if (np->sndflow",
      "sin6->sin6_flowinfo = ip6_flowinfo(ip6",
      "sin6->sin6_scope_id =",
      "ipv6_iface_scope_id(&sin6->sin6_addr,",
      "IP6CB(skb)->iif"
    ],
    "removed_lines": [
      "sin->sin_family = AF_INET",
      "sin->sin_port = 0",
      "sin->sin_addr.s_addr = ip_hdr(skb)->saddr",
      "memset(sin->sin_zero, 0, sizeof(sin->sin_zero",
      "sin6->sin6_family = AF_INET6",
      "sin6->sin6_port = 0",
      "sin6->sin6_addr = ip6->saddr",
      "sin6->sin6_flowinfo = 0",
      "if (np->sndflow",
      "sin6->sin6_flowinfo = ip6_flowinfo(ip6",
      "sin6->sin6_scope_id = ipv6_iface_scope_id(&sin6->sin6_addr,",
      "IP6CB(skb)->iif"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "recvmsg",
      "null pointer dereference"
    ]
  },
  {
    "index": 147,
    "id": "CVE-2013-6431",
    "commit_id": "ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2",
    "added_lines": [
      "fn = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 151,
    "id": "CVE-2013-6380",
    "commit_id": "b4789b8e6be3151a955ade74872822f30e8cd914",
    "added_lines": [
      "if ((fibsize < (sizeof(struct user_aac_srb) - sizeof(struct user_sgentry))) ||",
      "(fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr))))"
    ],
    "removed_lines": [
      "if (fibsize > (dev->max_fib_size - sizeof(struct aac_fibhdr)))"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid pointer dereference",
      "ioctl call"
    ]
  },
  {
    "index": 152,
    "id": "CVE-2013-6378",
    "commit_id": "a497e47d4aec37aaf8f13509f3ef3d1f6a717d88",
    "added_lines": [
      "if (cnt == 0",
      "return 0",
      "pdata = kmalloc(cnt + 1, GFP_KERNEL",
      "pdata[cnt] = '\\0'"
    ],
    "removed_lines": [
      "pdata = kmalloc(cnt, GFP_KERNEL"
    ],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "DoS",
    "score": 4.4,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "root privileges for a zero-length write operation"
    ]
  },
  {
    "index": 153,
    "id": "CVE-2013-6376",
    "commit_id": "17d68b763f09a9ce824ae23eb62c9efc57b69271",
    "added_lines": [
      "#define KVM_X2APIC_CID_BITS 0",
      "new->cid_mask = (1 << KVM_X2APIC_CID_BITS) - 1",
      "new->lid_mask = 0xffff"
    ],
    "removed_lines": [
      "new->cid_mask = new->lid_mask = 0xffff"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.2,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 154,
    "id": "CVE-2013-6368",
    "commit_id": "fda4e2e85589191b123d31cdc21fd33ee70f50fd",
    "added_lines": [
      "r = kvm_lapic_set_vapic_addr(vcpu, va.vapic_addr"
    ],
    "removed_lines": [
      "r = 0",
      "kvm_lapic_set_vapic_addr(vcpu, va.vapic_addr",
      "static int vapic_enter(struct kvm_vcpu *vcpu",
      "struct kvm_lapic *apic = vcpu->arch.apic",
      "struct page *page",
      "if (!apic || !apic->vapic_addr",
      "return 0",
      "page = gfn_to_page(vcpu->kvm, apic->vapic_addr >> PAGE_SHIFT",
      "if (is_error_page(page",
      "return -EFAULT",
      "vcpu->arch.apic->vapic_page = page",
      "return 0",
      "static void vapic_exit(struct kvm_vcpu *vcpu",
      "struct kvm_lapic *apic = vcpu->arch.apic",
      "int idx",
      "if (!apic || !apic->vapic_addr",
      "return",
      "idx = srcu_read_lock(&vcpu->kvm->srcu",
      "kvm_release_page_dirty(apic->vapic_page",
      "mark_page_dirty(vcpu->kvm, apic->vapic_addr >> PAGE_SHIFT",
      "srcu_read_unlock(&vcpu->kvm->srcu, idx",
      "r = vapic_enter(vcpu",
      "if (r)",
      "srcu_read_unlock(&kvm->srcu, vcpu->srcu_idx",
      "return r",
      "vapic_exit(vcpu"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS +Priv",
    "score": 6.2,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 155,
    "id": "CVE-2013-6367",
    "commit_id": "b963a22e6d1a266a67e9eecc88134713fd54775c",
    "added_lines": [
      "if (kvm_apic_get_reg(apic, APIC_TMICT) == 0 ||",
      "apic->lapic_timer.period == 0"
    ],
    "removed_lines": [
      "if (kvm_apic_get_reg(apic, APIC_TMICT) == 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 157,
    "id": "CVE-2013-5634",
    "commit_id": "e8180dcaa8470ceca21109f143876fdcd9fe050a",
    "added_lines": [
      "static int kvm_vcpu_initialized(struct kvm_vcpu *vcpu",
      "return vcpu->arch.target >= 0",
      "if (unlikely(!kvm_vcpu_initialized(vcpu",
      "if (unlikely(!kvm_vcpu_initialized(vcpu",
      "return -ENOEXEC",
      "if (unlikely(!kvm_vcpu_initialized(vcpu",
      "return -ENOEXEC"
    ],
    "removed_lines": [
      "if (unlikely(vcpu->arch.target < 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference"
    ]
  },
  {
    "index": 158,
    "id": "CVE-2013-4623",
    "commit_id": "1922a4e6aade7b1d685af19d4d9339ddb5c02859",
    "added_lines": [
      "ret = x509parse_crt_der( ssl->session_negotiate->peer_cert,",
      "ssl->in_msg + i, n"
    ],
    "removed_lines": [
      "ret = x509parse_crt( ssl->session_negotiate->peer_cert, ssl->in_msg + i,",
      "n"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 159,
    "id": "CVE-2013-4592",
    "commit_id": "12d6e7538e2d418c08f082b1b44ffa5fb7270ed8",
    "added_lines": [
      "if (!npages || base_gfn != old.base_gfn)"
    ],
    "removed_lines": [
      "if (!npages)"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 163,
    "id": "CVE-2013-4563",
    "commit_id": "0e033e04c2678dbbe74a46b23fffb7bb918c288e",
    "added_lines": [
      "if (skb->mac_header < (tnl_hlen + frag_hdr_sz))"
    ],
    "removed_lines": [
      "if (skb_headroom(skb) < (tnl_hlen + frag_hdr_sz))"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a certain size comparison before inserting a fragment header,"
    ]
  },
  {
    "index": 169,
    "id": "CVE-2013-4483",
    "commit_id": "6062a8dc0517bce23e3c2f7d2fea5e22411269a3",
    "added_lines": [
      "int ipc_rcu_getref(void *ptr"
    ],
    "removed_lines": [
      "void ipc_rcu_getref(void *ptr"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly manage a reference count"
    ]
  },
  {
    "index": 170,
    "id": "CVE-2013-4470",
    "commit_id": "e93b7d748be887cd7639b113ba7d7ef792a7efb9",
    "added_lines": [
      "} else if (skb_is_gso(skb))",
      "goto append",
      "skb->ip_summed = CHECKSUM_PARTIAL",
      "skb_shinfo(skb)->gso_size = maxfraglen - fragheaderlen",
      "skb_shinfo(skb)->gso_type = SKB_GSO_UDP",
      "append:"
    ],
    "removed_lines": [
      "skb->ip_summed = CHECKSUM_PARTIAL",
      "skb_shinfo(skb)->gso_size = maxfraglen - fragheaderlen",
      "skb_shinfo(skb)->gso_type = SKB_GSO_UDP"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 6.9,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "does not properly initialize certain data structures,"
    ]
  },
  {
    "index": 179,
    "id": "CVE-2013-4254",
    "commit_id": "c95eb3184ea1a3a2551df57190c81da695e2144b",
    "added_lines": [
      "if (is_software_event(event",
      "return 1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 180,
    "id": "CVE-2013-4247",
    "commit_id": "1fc29bacedeabb278080e31bb9c1ecb49f143c3b",
    "added_lines": [
      "strncpy(pos + 1, vol->prepath, pplen"
    ],
    "removed_lines": [
      "strncpy(pos, vol->prepath, pplen"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "off-by-one",
      "off-by-one error"
    ]
  },
  {
    "index": 182,
    "id": "CVE-2013-4220",
    "commit_id": "9955ac47f4ba1c95ecb6092aeaefb40a22e99268",
    "added_lines": [
      "siginfo_t info",
      "void __user *pc = (void __user *)instruction_pointer(regs",
      "__show_regs(regs",
      "info.si_signo = SIGILL",
      "info.si_errno = 0",
      "info.si_code  = ILL_ILLOPC",
      "info.si_addr  = pc",
      "arm64_notify_die(\"Oops - bad mode\", regs, &info, 0"
    ],
    "removed_lines": [
      "die(\"Oops - bad mode\", regs, 0",
      "local_irq_disable",
      "panic(\"bad mode\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 183,
    "id": "CVE-2013-4205",
    "commit_id": "6160968cee8b90a5dd95318d716e31d7775c4ef3",
    "added_lines": [
      "int err = -ENOMEM",
      "if (cred)",
      "err = create_user_ns(cred",
      "if (err",
      "put_cred(cred",
      "else",
      "return err"
    ],
    "removed_lines": [
      "if (!cred",
      "return -ENOMEM",
      "return create_user_ns(cred"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 184,
    "id": "CVE-2013-4163",
    "commit_id": "75a493e60ac4bbe2e977e7129d6d8cbb0dd236be",
    "added_lines": [
      "static void ip6_append_data_mtu(unsigned int *mtu,",
      "struct rt6_info *rt,",
      "bool pmtuprobe",
      "rt->dst.dev->mtu :",
      "dst_mtu(rt->dst.path",
      "unsigned int maxfraglen, fragheaderlen, mtu",
      "fragheaderlen, skb, rt,",
      "np->pmtudisc ==",
      "IPV6_PMTUDISC_PROBE"
    ],
    "removed_lines": [
      "static void ip6_append_data_mtu(int *mtu,",
      "struct rt6_info *rt",
      "unsigned int maxfraglen, fragheaderlen",
      "int mtu",
      "fragheaderlen, skb, rt"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly maintain information about whether the IPV6_MTU setsockopt option had been specified"
    ]
  },
  {
    "index": 185,
    "id": "CVE-2013-4162",
    "commit_id": "8822b64a0fa64a5dd1dfcf837c5b0be83f8c05d1",
    "added_lines": [
      "struct flowi6 *fl6",
      "if (up->pending == AF_INET",
      "return udp_push_pending_frames(sk",
      "fl6 = &inet->cork.fl.u.ip6"
    ],
    "removed_lines": [
      "struct flowi6 *fl6 = &inet->cork.fl.u.ip6"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "makes an incorrect function call for pending data"
    ]
  },
  {
    "index": 187,
    "id": "CVE-2013-4129",
    "commit_id": "c7e8e8a8f7a70b343ca1e0f90a31e35ab2d16de1",
    "added_lines": [
      "if (!mp->ports && !mp->mglist && mp->timer_armed &&"
    ],
    "removed_lines": [
      "if (!mp->ports && !mp->mglist &&"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not check whether a certain timer is armed before modifying the timeout value of that timer,"
    ]
  },
  {
    "index": 188,
    "id": "CVE-2013-4127",
    "commit_id": "dd7633ecd553a5e304d349aa6f8eb8a0417098c5",
    "added_lines": [
      "static void vhost_net_ubuf_put_wait_and_free(struct vhost_net_ubuf_ref *ubufs",
      "vhost_net_ubuf_put_and_wait(ubufs",
      "vhost_net_ubuf_put_wait_and_free(oldubufs",
      "vhost_net_ubuf_put_wait_and_free(ubufs"
    ],
    "removed_lines": [
      "vhost_net_ubuf_put_and_wait(oldubufs",
      "vhost_net_ubuf_put_and_wait(ubufs"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 189,
    "id": "CVE-2013-4125",
    "commit_id": "307f2fb95e9b96b3577916e73d92e104f8f26494",
    "added_lines": [
      "static inline bool rt6_qualify_for_ecmp(struct rt6_info *rt",
      "return (rt->rt6i_flags & (RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC)) ==",
      "RTF_GATEWAY",
      "bool rt_can_ecmp = rt6_qualify_for_ecmp(rt",
      "if (rt_can_ecmp &&",
      "rt6_qualify_for_ecmp(iter",
      "if (sibling->rt6i_metric == rt->rt6i_metric &&",
      "rt6_qualify_for_ecmp(sibling))"
    ],
    "removed_lines": [
      "if (rt->rt6i_flags & RTF_GATEWAY &&",
      "!(rt->rt6i_flags & RTF_EXPIRES) &&",
      "!(iter->rt6i_flags & RTF_EXPIRES",
      "if (sibling->rt6i_metric == rt->rt6i_metric)"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle Router Advertisement (RA) messages in certain circumstances involving three routes that initially qualified for membership in an ECMP route set until a change occurred for one of the first two routes"
    ]
  },
  {
    "index": 190,
    "id": "CVE-2013-3735",
    "commit_id": "fb58e69a84f4fde603a630d2c9df2fa3be16d846",
    "added_lines": [
      "if (compiler_result != 0) {",
      "if (compiler_result != 0)"
    ],
    "removed_lines": [
      "if (compiler_result==1) {",
      "if (compiler_result==1)"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly determine whether a parser error occurred,"
    ]
  },
  {
    "index": 191,
    "id": "CVE-2013-3302",
    "commit_id": "ea702b80e0bbb2448e201472127288beb82ca2fe",
    "added_lines": [
      "if (ssocket == NULL",
      "return -ENOTSOCK"
    ],
    "removed_lines": [
      "if (ssocket == NULL",
      "return -ENOTSOCK;"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.4,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "null pointer dereference"
    ]
  },
  {
    "index": 192,
    "id": "CVE-2013-3301",
    "commit_id": "6a76f8c0ab19f215af2a3442870eeb5f0e81998d",
    "added_lines": [
      ".llseek = ftrace_filter_lseek,"
    ],
    "removed_lines": [
      ".llseek = ftrace_regex_lseek,"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 213,
    "id": "CVE-2013-2765",
    "commit_id": "0840b13612a0b7ef1ce7441cf811dcfc6b463fba",
    "added_lines": [
      "&& (msr->txcfg->reqbody_buffering != REQUEST_BODY_FORCEBUF_ON"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 221,
    "id": "CVE-2013-2232",
    "commit_id": "a963a37d384d71ad43b3e9e79d68d42fbe0901f3",
    "added_lines": [
      "struct rt6_info *rt",
      "if (dst->ops->family != AF_INET6)",
      "dst_release(dst",
      "return NULL",
      "rt = (struct rt6_info *)dst"
    ],
    "removed_lines": [
      "struct rt6_info *rt = (struct rt6_info *)dst"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "by using an AF_INET6 socket for a connection to an IPv4 interface"
    ]
  },
  {
    "index": 224,
    "id": "CVE-2013-2206",
    "commit_id": "f2815633504b442ca0b0605c16bf3d88a3a0fcea",
    "added_lines": [
      "sctp_add_cmd_sf(commands, SCTP_CMD_SET_ASOC, SCTP_ASOC(new_asoc"
    ],
    "removed_lines": [
      "sctp_add_cmd_sf(commands, SCTP_CMD_NEW_ASOC, SCTP_ASOC(new_asoc"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 226,
    "id": "CVE-2013-2146",
    "commit_id": "f1923820c447e986a9da0fc6bf60c1dccdf0408e",
    "added_lines": [
      "INTEL_EVENT_EXTRA_REG(0xb7, MSR_OFFCORE_RSP_0, 0x3f807f8fffull, RSP_0),",
      "INTEL_EVENT_EXTRA_REG(0xbb, MSR_OFFCORE_RSP_1, 0x3f807f8fffull, RSP_1),",
      "EVENT_EXTRA_END",
      "static struct extra_reg intel_snbep_extra_regs[] __read_mostly =",
      "INTEL_EVENT_EXTRA_REG(0xb7, MSR_OFFCORE_RSP_0, 0x3fffff8fffull, RSP_0),",
      "INTEL_EVENT_EXTRA_REG(0xbb, MSR_OFFCORE_RSP_1, 0x3fffff8fffull, RSP_1),",
      "if (boot_cpu_data.x86_model == 45",
      "x86_pmu.extra_regs = intel_snbep_extra_regs",
      "else",
      "x86_pmu.extra_regs = intel_snb_extra_regs",
      "if (boot_cpu_data.x86_model == 62",
      "x86_pmu.extra_regs = intel_snbep_extra_regs",
      "else",
      "x86_pmu.extra_regs = intel_snb_extra_regs"
    ],
    "removed_lines": [
      "INTEL_EVENT_EXTRA_REG(0xb7, MSR_OFFCORE_RSP_0, 0x3fffffffffull, RSP_0),",
      "INTEL_EVENT_EXTRA_REG(0xbb, MSR_OFFCORE_RSP_1, 0x3fffffffffull, RSP_1),",
      "x86_pmu.extra_regs = intel_snb_extra_regs",
      "x86_pmu.extra_regs = intel_snb_extra_regs"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "specifies an incorrect bitmask"
    ]
  },
  {
    "index": 228,
    "id": "CVE-2013-2140",
    "commit_id": "604c499cbbcc3d5fe5fb8d53306aa0fae1990109",
    "added_lines": [
      "struct phys_req preq",
      "preq.sector_number = req->u.discard.sector_number",
      "preq.nr_sects      = req->u.discard.nr_sectors",
      "err = xen_vbd_translate(&preq, blkif, WRITE",
      "if (err)",
      "pr_warn(DRV_PFX \"access denied: DISCARD [%llu->%llu] on dev=%04x\\n\",",
      "preq.sector_number,",
      "preq.sector_number + preq.nr_sects, blkif->vbd.pdevice",
      "goto fail_response",
      "fail_response:"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 3.8,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 231,
    "id": "CVE-2013-2126",
    "commit_id": "19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6",
    "added_lines": [
      "imgdata.rawdata.raw_alloc = 0",
      "imgdata.image = (ushort (*)[4]) calloc(S.iwidth*S.iheight,sizeof(*imgdata.image",
      "if (decoder_info.decoder_flags & LIBRAW_DECODER_LEGACY",
      "imgdata.rawdata.raw_alloc = imgdata.image",
      "imgdata.image = 0"
    ],
    "removed_lines": [
      "imgdata.rawdata.raw_alloc = calloc(S.iwidth*S.iheight,sizeof(*imgdata.image",
      "imgdata.image = (ushort (*)[4]) imgdata.rawdata.raw_alloc"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "MEM_ALLOC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "MEM_ALLOC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 236,
    "id": "CVE-2013-2020",
    "commit_id": "270e368b99e93aa5447d46c797c92c3f9f39f375",
    "added_lines": [
      "else if(skew > ssize)",
      "cli_dbgmsg(\"UPX: Ignoring bad skew of %d bytes\\n\", skew",
      "skew = 0",
      "else",
      "if(upxfn(src + skew, ssize - skew, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep-skew) >= 0 || upxfn(src, ssize, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep) >= 0)",
      "upx_success = 1",
      "else if(skew && (upxfn(src, ssize, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep) >= 0))",
      "upx_success = 1"
    ],
    "removed_lines": [
      "if(upxfn(src, ssize, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep) >= 0",
      "upx_success = 1",
      "} else",
      "if(upxfn(src + skew, ssize - skew, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep-skew) >= 0 || upxfn(src, ssize, dest, &dsize, exe_sections[i].rva, exe_sections[i + 1].rva, vep) >= 0",
      "upx_success = 1"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "integer underflow",
      "out-of-bounds read",
      "integer underflow"
    ]
  },
  {
    "index": 237,
    "id": "CVE-2013-2017",
    "commit_id": "6ec82562ffc6f297d0de36d65776cff8e5704867",
    "added_lines": [
      "if (!(dev->flags & IFF_UP) ||",
      "(skb->len > (dev->mtu + dev->hard_header_len)))",
      "kfree_skb(skb"
    ],
    "removed_lines": [
      "if (!(dev->flags & IFF_UP",
      "return NET_RX_DROP",
      "if (skb->len > (dev->mtu + dev->hard_header_len"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "double-free"
    ]
  },
  {
    "index": 238,
    "id": "CVE-2013-2015",
    "commit_id": "0e9a9a1ad619e7e987815d20262d36a2f95717ca",
    "added_lines": [
      "if ((!EXT4_SB(inode->i_sb)->s_journal) &&",
      "!(EXT4_SB(inode->i_sb)->s_mount_state & EXT4_ORPHAN_FS"
    ],
    "removed_lines": [
      "if (!EXT4_SB(inode->i_sb)->s_journal"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle orphan-list entries for non-journal filesystems,"
    ]
  },
  {
    "index": 248,
    "id": "CVE-2013-1915",
    "commit_id": "d4d80b38aa85eccb26e3c61b04d16e8ca5de76fe",
    "added_lines": [
      "static xmlParserInputBufferPtr",
      "xml_unload_external_entity(const char *URI, xmlCharEncoding enc)",
      "return NULL",
      "xmlParserInputBufferCreateFilenameFunc entity",
      "if(msr->txcfg->xml_external_entity == 0)",
      "entity = xmlParserInputBufferCreateFilenameDefault(xml_unload_external_entity"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "XML External Entity (XXE) vulnerability"
    ]
  },
  {
    "index": 253,
    "id": "CVE-2013-1827",
    "commit_id": "276bdb82dedb290511467a5a4fdbe9f0b52dce6f",
    "added_lines": [
      "if (ccid != NULL && ccid->ccid_ops->ccid_hc_rx_getsockopt != NULL",
      "if (ccid != NULL && ccid->ccid_ops->ccid_hc_tx_getsockopt != NULL"
    ],
    "removed_lines": [
      "if (ccid->ccid_ops->ccid_hc_rx_getsockopt != NULL",
      "if (ccid->ccid_ops->ccid_hc_tx_getsockopt != NULL"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 6.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "null pointer dereference",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 254,
    "id": "CVE-2013-1826",
    "commit_id": "864745d291b5ba80ea0bd0edcbe67273de368836",
    "added_lines": [
      "int err",
      "err = dump_one_state(x, 0, &info",
      "if (err)",
      "return ERR_PTR(err"
    ],
    "removed_lines": [
      "if (dump_one_state(x, 0, &info))",
      "return NULL"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 6.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "null pointer dereference",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 255,
    "id": "CVE-2013-1819",
    "commit_id": "eb178619f930fa2ba2348de332a1ff1c66a31424",
    "added_lines": [
      "xfs_daddr_t\t\teofs",
      "eofs = XFS_FSB_TO_BB(btp->bt_mount, btp->bt_mount->m_sb.sb_dblocks",
      "if (blkno >= eofs)",
      "xfs_alert(btp->bt_mount,",
      "\"%s: Block out of range: block 0x%llx, EOFS 0x%llx \",",
      "__func__, blkno, eofs",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 256,
    "id": "CVE-2013-1798",
    "commit_id": "a2c118bfab8bc6b8bb213abfc35201e441693d55",
    "added_lines": [
      "if (redir_index < IOAPIC_NUM_PINS",
      "redir_content =",
      "ioapic->redirtbl[redir_index].bits",
      "else",
      "redir_content = ~0ULL"
    ],
    "removed_lines": [
      "ASSERT(redir_index < IOAPIC_NUM_PINS",
      "redir_content = ioapic->redirtbl[redir_index].bits"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Info",
    "score": 6.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "does not properly handle a certain combination of invalid IOAPIC_REG_SELECT and IOAPIC_REG_WINDOW operations"
    ]
  },
  {
    "index": 257,
    "id": "CVE-2013-1797",
    "commit_id": "0b79459b482e85cb7426aa7da683a9f2c97aeae1",
    "added_lines": [
      "struct pvclock_vcpu_time_info guest_hv_clock",
      "if (!vcpu->pv_time_enabled",
      "if (unlikely(kvm_read_guest_cached(v->kvm, &vcpu->pv_time,",
      "&guest_hv_clock, sizeof(guest_hv_clock",
      "return 0",
      "pvclock_flags = (guest_hv_clock.flags & PVCLOCK_GUEST_STOPPED",
      "kvm_write_guest_cached(v->kvm, &vcpu->pv_time,",
      "&vcpu->hv_clock,",
      "sizeof(vcpu->hv_clock",
      "vcpu->arch.pv_time_enabled = false",
      "u64 gpa_offset",
      "gpa_offset = data & ~(PAGE_MASK | 1",
      "if (gpa_offset & (sizeof(struct pvclock_vcpu_time_info) - 1",
      "if (kvm_gfn_to_hva_cache_init(vcpu->kvm,",
      "&vcpu->arch.pv_time, data & ~1ULL",
      "vcpu->arch.pv_time_enabled = false",
      "else",
      "vcpu->arch.pv_time_enabled = true",
      "if (!vcpu->arch.pv_time_enabled",
      "vcpu->arch.pv_time_enabled = false"
    ],
    "removed_lines": [
      "void *shared_kaddr",
      "struct pvclock_vcpu_time_info *guest_hv_clock",
      "if (!vcpu->time_page",
      "shared_kaddr = kmap_atomic(vcpu->time_page",
      "guest_hv_clock = shared_kaddr + vcpu->time_offset",
      "pvclock_flags = (guest_hv_clock->flags & PVCLOCK_GUEST_STOPPED",
      "memcpy(shared_kaddr + vcpu->time_offset, &vcpu->hv_clock,",
      "sizeof(vcpu->hv_clock",
      "kunmap_atomic(shared_kaddr",
      "mark_page_dirty(v->kvm, vcpu->time >> PAGE_SHIFT",
      "if (vcpu->arch.time_page)",
      "kvm_release_page_dirty(vcpu->arch.time_page",
      "vcpu->arch.time_page = NULL",
      "vcpu->arch.time_offset = data & ~(PAGE_MASK | 1",
      "if (vcpu->arch.time_offset &",
      "(sizeof(struct pvclock_vcpu_time_info) - 1",
      "vcpu->arch.time_page =",
      "gfn_to_page(vcpu->kvm, data >> PAGE_SHIFT",
      "if (is_error_page(vcpu->arch.time_page",
      "vcpu->arch.time_page = NULL",
      "if (!vcpu->arch.time_page"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 259,
    "id": "CVE-2013-1792",
    "commit_id": "0da9dfdd2cd9889201bc6f6f43580c99165cd087",
    "added_lines": [
      "if (user->uid_keyring && user->session_keyring)"
    ],
    "removed_lines": [
      "if (user->uid_keyring)"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "null pointer dereference"
    ]
  },
  {
    "index": 260,
    "id": "CVE-2013-1774",
    "commit_id": "1ee0a224bc9aad1de496c795f96bc6ba2c394811",
    "added_lines": [
      "if (!tty",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 263,
    "id": "CVE-2013-1767",
    "commit_id": "5f00110f7273f9ff04ac69a5f85bb535a4fd0987",
    "added_lines": [
      "config.mpol = NULL",
      "if (config.mpol)",
      "mpol_put(sbinfo->mpol",
      "sbinfo->mpol = config.mpol;"
    ],
    "removed_lines": [
      "mpol_put(sbinfo->mpol",
      "sbinfo->mpol        = config.mpol;"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 6.2,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 265,
    "id": "CVE-2013-1439",
    "commit_id": "11909cc59e712e09b508dda729b99aeaac2b29ad",
    "added_lines": [
      "if(INT64(sz)>size",
      "throw LIBRAW_EXCEPTION_IO_CORRUPT",
      "if(!ret) // failed new should throw std::exception",
      "throw LIBRAW_EXCEPTION_ALLOC",
      "if(INT64(sz)>size",
      "throw LIBRAW_EXCEPTION_IO_CORRUPT",
      "if(!ret) // failed new should throw std::exception",
      "throw LIBRAW_EXCEPTION_ALLOC"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 267,
    "id": "CVE-2013-1417",
    "commit_id": "4c023ba43c16396f0d199e2df1cfa59b88b62acc",
    "added_lines": [
      "if (retval == 0 && server_ptr == NULL",
      "retval = KRB5_KDB_NOENTRY",
      "if (realms == NULL || realms[0] == NULL || *realms[0] == '\\0' ||"
    ],
    "removed_lines": [
      "if (realms == NULL || realms[0] == '\\0' ||"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 3.5,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 269,
    "id": "CVE-2013-1415",
    "commit_id": "f249555301940c6df3a2cdda13b56b5674eebc2e",
    "added_lines": [
      "return retval"
    ],
    "removed_lines": [
      "goto cleanup",
      "cleanup:"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 273,
    "id": "CVE-2013-0313",
    "commit_id": "a67adb997419fb53540d4a4f79c6471c60bc69b6",
    "added_lines": [
      "} else if (rc == -ENODATA && inode->i_op->removexattr)"
    ],
    "removed_lines": [
      "else if (rc == -ENODATA"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.2,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 277,
    "id": "CVE-2013-0290",
    "commit_id": "77c1090f94d1b0b5186fb13a1b71b47b1343f87f",
    "added_lines": [
      "if (*off >= skb->len && skb->len)"
    ],
    "removed_lines": [
      "if (*off >= skb->len)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 278,
    "id": "CVE-2013-0281",
    "commit_id": "564f7cc2a51dcd2f28ab12a13394f31be5aa3c93",
    "added_lines": [
      "print_as(\"Notification setup not supported, won't be able to reconnect after failure\""
    ],
    "removed_lines": [
      "print_as(\"Notification setup failed, won't be able to reconnect after failure\""
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not limit the duration of connections to the blocking sockets"
    ]
  },
  {
    "index": 281,
    "id": "CVE-2013-0217",
    "commit_id": "7d5145d8eb2b9791533ffe4dc003b129b9696c48",
    "added_lines": [
      "static void xen_netbk_idx_release(struct xen_netbk *netbk, u16 pending_idx,",
      "u8 status",
      "if (unlikely(err",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_ERROR",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY",
      "xen_netbk_idx_release(netbk, pending_idx, XEN_NETIF_RSP_OKAY",
      "static void xen_netbk_idx_release(struct xen_netbk *netbk, u16 pending_idx,",
      "u8 status",
      "make_tx_response(vif, &pending_tx_info->req, status"
    ],
    "removed_lines": [
      "static void xen_netbk_idx_release(struct xen_netbk *netbk, u16 pending_idx",
      "struct pending_tx_info *pending_tx_info = netbk->pending_tx_info",
      "struct xenvif *vif = pending_tx_info[pending_idx].vif",
      "struct xen_netif_tx_request *txp",
      "if (unlikely(err))",
      "pending_ring_idx_t index",
      "index = pending_index(netbk->pending_prod++",
      "txp = &pending_tx_info[pending_idx].req",
      "make_tx_response(vif, txp, XEN_NETIF_RSP_ERROR",
      "netbk->pending_ring[index] = pending_idx",
      "xenvif_put(vif",
      "pending_ring_idx_t index",
      "xen_netbk_idx_release(netbk, pending_idx",
      "txp = &netbk->pending_tx_info[pending_idx].req",
      "make_tx_response(vif, txp, XEN_NETIF_RSP_ERROR",
      "index = pending_index(netbk->pending_prod++",
      "netbk->pending_ring[index] = pending_idx",
      "xenvif_put(vif",
      "xen_netbk_idx_release(netbk, pending_idx",
      "xen_netbk_idx_release(netbk, pending_idx",
      "xen_netbk_idx_release(netbk, pending_idx",
      "xen_netbk_idx_release(netbk, pending_idx",
      "static void xen_netbk_idx_release(struct xen_netbk *netbk, u16 pending_idx",
      "make_tx_response(vif, &pending_tx_info->req, XEN_NETIF_RSP_OKAY"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 5.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 282,
    "id": "CVE-2013-0216",
    "commit_id": "48856286b64e4b66ec62b94e504d0b29c1ade664",
    "added_lines": [
      "static void netbk_fatal_tx_err(struct xenvif *vif",
      "netdev_err(vif->dev, \"fatal error; disabling device\\n\"",
      "xenvif_carrier_off(vif",
      "xenvif_put(vif",
      "netdev_err(vif->dev, \"Need more frags\\n\"",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"Too many frags\\n\"",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"Frag is bigger than frame.\\n\"",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"txp->offset: %x, size: %u\\n\",",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"Missing extra info\\n\"",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev,",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"GSO size must not be zero.\\n\"",
      "netbk_fatal_tx_err(vif",
      "netdev_err(vif->dev, \"Bad GSO type %d.\\n\", gso->u.gso.type",
      "netbk_fatal_tx_err(vif",
      "if (vif->tx.sring->req_prod - vif->tx.req_cons >",
      "XEN_NETIF_TX_RING_SIZE)",
      "netdev_err(vif->dev,",
      "\"Impossible number of requests. \"",
      "\"req_prod %d, req_cons %d, size %ld\\n\",",
      "vif->tx.sring->req_prod, vif->tx.req_cons,",
      "XEN_NETIF_TX_RING_SIZE",
      "netbk_fatal_tx_err(vif",
      "continue",
      "if (unlikely(work_to_do < 0",
      "if (unlikely(ret < 0",
      "netdev_err(vif->dev,",
      "netbk_fatal_tx_err(vif"
    ],
    "removed_lines": [
      "netdev_dbg(vif->dev, \"Need more frags\\n\"",
      "netdev_dbg(vif->dev, \"Too many frags\\n\"",
      "netdev_dbg(vif->dev, \"Frags galore\\n\"",
      "netdev_dbg(vif->dev, \"txp->offset: %x, size: %u\\n\",",
      "netdev_dbg(vif->dev, \"Missing extra info\\n\"",
      "netdev_dbg(vif->dev,",
      "netdev_dbg(vif->dev, \"GSO size must not be zero.\\n\"",
      "netdev_dbg(vif->dev, \"Bad GSO type %d.\\n\", gso->u.gso.type",
      "if (unlikely(work_to_do < 0))",
      "netbk_tx_err(vif, &txreq, idx",
      "if (unlikely(ret < 0))",
      "netbk_tx_err(vif, &txreq, idx - ret",
      "netdev_dbg(vif->dev,",
      "netbk_tx_err(vif, &txreq, idx",
      "netbk_tx_err(vif, &txreq, idx"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering ring pointer corruption"
    ]
  },
  {
    "index": 298,
    "id": "CVE-2012-5375",
    "commit_id": "9c52057c698fb96f8f07e7a4bcf4801a092bda89",
    "added_lines": [
      "BUG_ON(ret == -EEXIST || ret == -EOVERFLOW"
    ],
    "removed_lines": [
      "BUG_ON(ret == -EEXIST"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "the ability to write to a directory important to the victim, and creating a file with a crafted name that is associated with a specific CRC32C hash value"
    ]
  },
  {
    "index": 302,
    "id": "CVE-2012-1016",
    "commit_id": "db64ca25d661a47b996b4e2645998b5d7f0eb52c",
    "added_lines": [
      "if (rep != NULL && rep->u.dh_Info.kdfID)",
      "secret.data = (char *)server_key"
    ],
    "removed_lines": [
      "if (rep->u.dh_Info.kdfID)",
      "secret.data = server_key"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 304,
    "id": "CVE-2011-4348",
    "commit_id": "ae53b5bd77719fed58086c5be60ce4f22bffe1c6",
    "added_lines": [
      "if (sk != rcvr->sk)",
      "sctp_bh_unlock_sock(sk",
      "sk = rcvr->sk",
      "sctp_bh_lock_sock(sk"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 305,
    "id": "CVE-2011-4347",
    "commit_id": "c4e7f9022e506c6635a5037713c37118e23193e4",
    "added_lines": [
      "#include <linux/namei.h>",
      "#include <linux/fs.h>",
      "static int probe_sysfs_permissions(struct pci_dev *dev",
      "#ifdef CONFIG_SYSFS",
      "int i",
      "bool bar_found = false",
      "for (i = PCI_STD_RESOURCES; i <= PCI_STD_RESOURCE_END; i++)",
      "char *kpath, *syspath",
      "struct path path",
      "struct inode *inode",
      "int r",
      "if (!pci_resource_len(dev, i",
      "continue",
      "kpath = kobject_get_path(&dev->dev.kobj, GFP_KERNEL",
      "if (!kpath",
      "return -ENOMEM",
      "syspath = kasprintf(GFP_KERNEL, \"/sys%s/resource%d\", kpath, i",
      "kfree(kpath",
      "if (!syspath",
      "return -ENOMEM",
      "r = kern_path(syspath, LOOKUP_FOLLOW, &path",
      "kfree(syspath",
      "if (r",
      "return r",
      "inode = path.dentry->d_inode",
      "r = inode_permission(inode, MAY_READ | MAY_WRITE | MAY_ACCESS",
      "path_put(&path",
      "if (r",
      "return r",
      "bar_found = true",
      "if (!bar_found",
      "return -EPERM",
      "return 0",
      "#else",
      "return -EINVAL;",
      "#endif",
      "u8 header_type",
      "pci_read_config_byte(dev, PCI_HEADER_TYPE, &header_type",
      "if ((header_type & PCI_HEADER_TYPE) != PCI_HEADER_TYPE_NORMAL)",
      "r = -EPERM",
      "goto out_put",
      "r = probe_sysfs_permissions(dev",
      "if (r",
      "goto out_put"
    ],
    "removed_lines": [],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not verify permission to access PCI configuration space and BAR resources"
    ]
  },
  {
    "index": 307,
    "id": "CVE-2011-4087",
    "commit_id": "f8e9881c2aef1e982e5abc25c046820cd0b7cf64",
    "added_lines": [
      "memset(IPCB(skb), 0, sizeof(struct inet_skb_parm",
      "if (iph->ihl == 5"
    ],
    "removed_lines": [
      "if (iph->ihl == 5)",
      "memset(IPCB(skb), 0, sizeof(struct inet_skb_parm"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly initialize a certain data structure"
    ]
  },
  {
    "index": 308,
    "id": "CVE-2011-3638",
    "commit_id": "667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3",
    "added_lines": [
      "struct ext4_map_blocks split_map",
      "struct ext4_extent zero_ex",
      "struct ext4_extent *ex",
      "int split_flag = 0",
      "WARN_ON(map->m_lblk < ee_block",
      "split_flag |= ee_block + ee_len <= eof_block ? EXT4_EXT_MAY_ZEROOUT : 0",
      "if (ee_len <= 2*EXT4_EXT_ZERO_LEN &&",
      "(EXT4_EXT_MAY_ZEROOUT & split_flag))",
      "err = ext4_ext_zeroout(inode, ex",
      "ext4_ext_mark_initialized(ex",
      "ext4_ext_try_to_merge(inode, path, ex",
      "err = ext4_ext_dirty(handle, inode, path + depth",
      "goto out",
      "split_map.m_lblk = map->m_lblk",
      "split_map.m_len = map->m_len",
      "if (allocated > map->m_len)",
      "if (allocated <= EXT4_EXT_ZERO_LEN &&",
      "(EXT4_EXT_MAY_ZEROOUT & split_flag))",
      "zero_ex.ee_block =",
      "cpu_to_le32(map->m_lblk + map->m_len",
      "zero_ex.ee_len = cpu_to_le16(allocated - map->m_len",
      "ext4_ext_store_pblock(&zero_ex,",
      "ext4_ext_pblock(ex) + map->m_lblk - ee_block",
      "err = ext4_ext_zeroout(inode, &zero_ex",
      "split_map.m_lblk = map->m_lblk",
      "split_map.m_len = allocated",
      "} else if ((map->m_lblk - ee_block + map->m_len <",
      "EXT4_EXT_ZERO_LEN) &&",
      "(EXT4_EXT_MAY_ZEROOUT & split_flag))",
      "if (map->m_lblk != ee_block)",
      "zero_ex.ee_block = ex->ee_block",
      "zero_ex.ee_len = cpu_to_le16(map->m_lblk -",
      "ee_block",
      "ext4_ext_store_pblock(&zero_ex,",
      "ext4_ext_pblock(ex",
      "err = ext4_ext_zeroout(inode, &zero_ex",
      "if (err",
      "goto out",
      "allocated = map->m_lblk - ee_block + map->m_len",
      "split_map.m_lblk = ee_block",
      "split_map.m_len = allocated",
      "allocated = ext4_split_extent(handle, inode, path,",
      "&split_map, split_flag, 0",
      "if (allocated < 0",
      "err = allocated",
      "ext4_lblk_t eof_block",
      "ext4_lblk_t ee_block",
      "struct ext4_extent *ex",
      "unsigned int ee_len",
      "int split_flag = 0, depth",
      "depth = ext_depth(inode",
      "ex = path[depth].p_ext",
      "ee_block = le32_to_cpu(ex->ee_block",
      "ee_len = ext4_ext_get_actual_len(ex",
      "split_flag |= ee_block + ee_len <= eof_block ? EXT4_EXT_MAY_ZEROOUT : 0",
      "split_flag |= EXT4_EXT_MARK_UNINIT2",
      "flags |= EXT4_GET_BLOCKS_PRE_IO",
      "return ext4_split_extent(handle, inode, path, map, split_flag, flags"
    ],
    "removed_lines": [
      "struct ext4_extent *ex, newex, orig_ex",
      "struct ext4_extent *ex1 = NULL",
      "struct ext4_extent *ex2 = NULL",
      "struct ext4_extent *ex3 = NULL",
      "struct ext4_extent_header *eh",
      "ext4_fsblk_t newblock",
      "int ret = 0",
      "int may_zeroout",
      "eh = path[depth].p_hdr",
      "newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex",
      "ex2 = ex",
      "orig_ex.ee_block = ex->ee_block",
      "orig_ex.ee_len   = cpu_to_le16(ee_len",
      "ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex",
      "may_zeroout = ee_block + ee_len <= eof_block",
      "err = ext4_ext_get_access(handle, inode, path + depth",
      "if (err",
      "goto out",
      "if (ee_len <= 2*EXT4_EXT_ZERO_LEN && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "if (map->m_lblk > ee_block)",
      "ex1 = ex",
      "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block",
      "ext4_ext_mark_uninitialized(ex1",
      "ex2 = &newex",
      "if (!ex1 && allocated > map->m_len",
      "ex2->ee_len = cpu_to_le16(map->m_len",
      "if (allocated > map->m_len)",
      "unsigned int newdepth",
      "if (allocated <= EXT4_EXT_ZERO_LEN && may_zeroout)",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = cpu_to_le16(ee_len - allocated",
      "ext4_ext_mark_uninitialized(ex",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "ex3 = &newex",
      "ex3->ee_block = cpu_to_le32(map->m_lblk",
      "ext4_ext_store_pblock(ex3, newblock",
      "ex3->ee_len = cpu_to_le16(allocated",
      "err = ext4_ext_insert_extent(handle, inode, path,",
      "ex3, 0",
      "if (err == -ENOSPC)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex,",
      "ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "} else if (err",
      "goto fix_extent_len",
      "err =  ext4_ext_zeroout(inode, ex3",
      "if (err)",
      "depth = ext_depth(inode",
      "ext4_ext_drop_refs(path",
      "path = ext4_ext_find_extent(inode, map->m_lblk,",
      "path",
      "if (IS_ERR(path))",
      "err = PTR_ERR(path",
      "return err",
      "ex = path[depth].p_ext",
      "err = ext4_ext_get_access(handle, inode,",
      "path + depth",
      "if (err",
      "return err",
      "ext4_ext_mark_uninitialized(ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return err",
      "return allocated",
      "ex3 = &newex",
      "ex3->ee_block = cpu_to_le32(map->m_lblk + map->m_len",
      "ext4_ext_store_pblock(ex3, newblock + map->m_len",
      "ex3->ee_len = cpu_to_le16(allocated - map->m_len",
      "ext4_ext_mark_uninitialized(ex3",
      "err = ext4_ext_insert_extent(handle, inode, path, ex3, 0",
      "if (err == -ENOSPC && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "} else if (err",
      "goto fix_extent_len",
      "newdepth = ext_depth(inode",
      "ee_len -= ext4_ext_get_actual_len(ex3",
      "orig_ex.ee_len = cpu_to_le16(ee_len",
      "may_zeroout = ee_block + ee_len <= eof_block",
      "depth = newdepth",
      "ext4_ext_drop_refs(path",
      "path = ext4_ext_find_extent(inode, map->m_lblk, path",
      "if (IS_ERR(path))",
      "err = PTR_ERR(path",
      "eh = path[depth].p_hdr",
      "ex = path[depth].p_ext",
      "if (ex2 != &newex",
      "ex2 = ex",
      "allocated = map->m_len",
      "if (le16_to_cpu(orig_ex.ee_len) <= EXT4_EXT_ZERO_LEN &&",
      "map->m_lblk != ee_block && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "if (ex1 && ex1 != ex)",
      "ex1 = ex",
      "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block",
      "ext4_ext_mark_uninitialized(ex1",
      "ex2 = &newex",
      "ex2->ee_block = cpu_to_le32(map->m_lblk",
      "ext4_ext_store_pblock(ex2, newblock",
      "ex2->ee_len = cpu_to_le16(allocated",
      "if (ex2 != ex",
      "goto insert",
      "if (ex2 > EXT_FIRST_EXTENT(eh))",
      "ret = ext4_ext_try_to_merge(inode, path, ex2 - 1",
      "if (ret)",
      "err = ext4_ext_correct_indexes(handle, inode, path",
      "if (err",
      "goto out",
      "depth = ext_depth(inode",
      "ex2--",
      "if (!ex3)",
      "ret = ext4_ext_try_to_merge(inode, path, ex2",
      "if (ret)",
      "err = ext4_ext_correct_indexes(handle, inode, path",
      "err = ext4_ext_dirty(handle, inode, path + depth",
      "goto out",
      "insert:",
      "err = ext4_ext_insert_extent(handle, inode, path, &newex, 0",
      "if (err == -ENOSPC && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "} else if (err",
      "goto fix_extent_len",
      "ext4_ext_show_leaf(inode, path",
      "fix_extent_len:",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_mark_uninitialized(ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return err",
      "struct ext4_extent *ex, newex, orig_ex",
      "struct ext4_extent *ex1 = NULL",
      "struct ext4_extent *ex2 = NULL",
      "struct ext4_extent *ex3 = NULL",
      "ext4_lblk_t ee_block, eof_block",
      "unsigned int allocated, ee_len, depth",
      "ext4_fsblk_t newblock",
      "int err = 0",
      "int may_zeroout",
      "depth = ext_depth(inode",
      "ex = path[depth].p_ext",
      "ee_block = le32_to_cpu(ex->ee_block",
      "ee_len = ext4_ext_get_actual_len(ex",
      "allocated = ee_len - (map->m_lblk - ee_block",
      "newblock = map->m_lblk - ee_block + ext4_ext_pblock(ex",
      "ex2 = ex",
      "orig_ex.ee_block = ex->ee_block",
      "orig_ex.ee_len   = cpu_to_le16(ee_len",
      "ext4_ext_store_pblock(&orig_ex, ext4_ext_pblock(ex",
      "may_zeroout = ee_block + ee_len <= eof_block",
      "if ((map->m_lblk == ee_block) && (allocated <= map->m_len",
      "return allocated",
      "err = ext4_ext_get_access(handle, inode, path + depth",
      "if (err",
      "goto out",
      "if (map->m_lblk > ee_block)",
      "ex1 = ex",
      "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block",
      "ext4_ext_mark_uninitialized(ex1",
      "ex2 = &newex",
      "if (!ex1 && allocated > map->m_len",
      "ex2->ee_len = cpu_to_le16(map->m_len",
      "if (allocated > map->m_len)",
      "unsigned int newdepth",
      "ex3 = &newex",
      "ex3->ee_block = cpu_to_le32(map->m_lblk + map->m_len",
      "ext4_ext_store_pblock(ex3, newblock + map->m_len",
      "ex3->ee_len = cpu_to_le16(allocated - map->m_len",
      "ext4_ext_mark_uninitialized(ex3",
      "err = ext4_ext_insert_extent(handle, inode, path, ex3, flags",
      "if (err == -ENOSPC && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "} else if (err",
      "goto fix_extent_len",
      "newdepth = ext_depth(inode",
      "ee_len -= ext4_ext_get_actual_len(ex3",
      "orig_ex.ee_len = cpu_to_le16(ee_len",
      "may_zeroout = ee_block + ee_len <= eof_block",
      "depth = newdepth",
      "ext4_ext_drop_refs(path",
      "path = ext4_ext_find_extent(inode, map->m_lblk, path",
      "if (IS_ERR(path))",
      "err = PTR_ERR(path",
      "goto out",
      "ex = path[depth].p_ext",
      "if (ex2 != &newex",
      "ex2 = ex",
      "err = ext4_ext_get_access(handle, inode, path + depth",
      "if (err",
      "goto out",
      "allocated = map->m_len",
      "if (ex1 && ex1 != ex)",
      "ex1 = ex",
      "ex1->ee_len = cpu_to_le16(map->m_lblk - ee_block",
      "ext4_ext_mark_uninitialized(ex1",
      "ex2 = &newex",
      "ex2->ee_block = cpu_to_le32(map->m_lblk",
      "ext4_ext_store_pblock(ex2, newblock",
      "ex2->ee_len = cpu_to_le16(allocated",
      "ext4_ext_mark_uninitialized(ex2",
      "if (ex2 != ex",
      "goto insert",
      "err = ext4_ext_dirty(handle, inode, path + depth",
      "ext_debug(\"out here\\n\"",
      "goto out",
      "insert:",
      "err = ext4_ext_insert_extent(handle, inode, path, &newex, flags",
      "if (err == -ENOSPC && may_zeroout)",
      "err =  ext4_ext_zeroout(inode, &orig_ex",
      "if (err",
      "goto fix_extent_len",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return allocated",
      "} else if (err",
      "goto fix_extent_len",
      "out:",
      "ext4_ext_show_leaf(inode, path",
      "return err ? err : allocated",
      "fix_extent_len:",
      "ex->ee_block = orig_ex.ee_block",
      "ex->ee_len   = orig_ex.ee_len",
      "ext4_ext_store_pblock(ex, ext4_ext_pblock(&orig_ex",
      "ext4_ext_mark_uninitialized(ex",
      "ext4_ext_dirty(handle, inode, path + depth",
      "return err"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not mark a modified extent as dirty in certain cases of extent splitting"
    ]
  },
  {
    "index": 309,
    "id": "CVE-2011-3619",
    "commit_id": "a5b2c5b2ad5853591a6cac6134cd0f599a720865",
    "added_lines": [
      "return aa_audit(AUDIT_APPARMOR_DENIED,",
      "__aa_current_profile(), GFP_KERNEL,"
    ],
    "removed_lines": [
      "return aa_audit(AUDIT_APPARMOR_DENIED, NULL, GFP_KERNEL,"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 311,
    "id": "CVE-2011-2491",
    "commit_id": "0b760113a3a155269a3fba93a409c640031dd68f",
    "added_lines": [
      "task->tk_rebind_retry = 2"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 312,
    "id": "CVE-2011-2482",
    "commit_id": "ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d",
    "added_lines": [
      "static void sctp_sock_rfree_frag(struct sk_buff *skb",
      "struct sk_buff *frag",
      "if (!skb->data_len",
      "goto done",
      "for (frag = skb_shinfo(skb)->frag_list; frag; frag = frag->next",
      "sctp_sock_rfree_frag(frag",
      "done:",
      "sctp_sock_rfree(skb",
      "static void sctp_skb_set_owner_r_frag(struct sk_buff *skb, struct sock *sk",
      "struct sk_buff *frag",
      "if (!skb->data_len",
      "goto done",
      "for (frag = skb_shinfo(skb)->frag_list; frag; frag = frag->next",
      "sctp_skb_set_owner_r_frag(frag, sk",
      "done:",
      "sctp_skb_set_owner_r(skb, sk",
      "sctp_sock_rfree_frag(skb",
      "sctp_skb_set_owner_r_frag(skb, newsk",
      "sctp_sock_rfree_frag(skb",
      "sctp_skb_set_owner_r_frag(skb, newsk",
      "sctp_skb_for_each(skb, &assoc->ulpq.reasm, tmp)",
      "sctp_sock_rfree_frag(skb",
      "sctp_skb_set_owner_r_frag(skb, newsk",
      "sctp_skb_for_each(skb, &assoc->ulpq.lobby, tmp)",
      "sctp_sock_rfree_frag(skb",
      "sctp_skb_set_owner_r_frag(skb, newsk"
    ],
    "removed_lines": [
      "sctp_sock_rfree(skb",
      "sctp_skb_set_owner_r(skb, newsk",
      "sctp_sock_rfree(skb",
      "sctp_skb_set_owner_r(skb, newsk"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 313,
    "id": "CVE-2011-2479",
    "commit_id": "78f11a255749d09025f54d4e2df4fbcb031530e2",
    "added_lines": [
      "#define VM_NO_THP (VM_SPECIAL|VM_INSERTPAGE|VM_MIXEDMAP|VM_SAO| \\",
      "VM_HUGETLB|VM_SHARED|VM_MAYSHARE",
      "if (*vm_flags & (VM_HUGEPAGE | VM_NO_THP",
      "if (*vm_flags & (VM_NOHUGEPAGE | VM_NO_THP",
      "if (vma->vm_ops",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) || vma->vm_flags & VM_NO_THP",
      "if (!vma->anon_vma || vma->vm_ops",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) || vma->vm_flags & VM_NO_THP",
      "if (!vma->anon_vma || vma->vm_ops",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) ||",
      "vma->vm_flags & VM_NO_THP"
    ],
    "removed_lines": [
      "if (*vm_flags & (VM_HUGEPAGE |",
      "VM_SHARED   | VM_MAYSHARE   |",
      "VM_PFNMAP   | VM_IO      | VM_DONTEXPAND |",
      "VM_RESERVED | VM_HUGETLB | VM_INSERTPAGE |",
      "VM_MIXEDMAP | VM_SAO",
      "if (*vm_flags & (VM_NOHUGEPAGE |",
      "VM_SHARED   | VM_MAYSHARE   |",
      "VM_PFNMAP   | VM_IO      | VM_DONTEXPAND |",
      "VM_RESERVED | VM_HUGETLB | VM_INSERTPAGE |",
      "VM_MIXEDMAP | VM_SAO",
      "if (vma->vm_file || vma->vm_ops",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) || is_pfn_mapping(vma",
      "if (!vma->anon_vma || vma->vm_ops || vma->vm_file",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) || is_pfn_mapping(vma",
      "if (!vma->anon_vma || vma->vm_ops || vma->vm_file",
      "VM_BUG_ON(is_linear_pfn_mapping(vma) || is_pfn_mapping(vma"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly create transparent huge pages in response to a MAP_PRIVATE mmap system call on /dev/zero"
    ]
  },
  {
    "index": 318,
    "id": "CVE-2002-2443",
    "commit_id": "cf1a0c411b2668c57c41e9c4efd15ba17b6b322c",
    "added_lines": [
      "goto bailout",
      "goto bailout",
      "goto bailout",
      "goto bailout"
    ],
    "removed_lines": [
      "goto chpwfail",
      "goto chpwfail",
      "goto chpwfail",
      "goto chpwfail"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate UDP packets before sending responses,"
    ]
  },
  {
    "index": 319,
    "id": "CVE-2014-9420",
    "commit_id": "f54e18f1b831c92f6512d2eedb224cd63d607d3d",
    "added_lines": [
      "int cont_loops",
      "#define RR_MAX_CE_ENTRIES 32",
      "if (++rs->cont_loops >= RR_MAX_CE_ENTRIES",
      "goto out"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 321,
    "id": "CVE-2014-9351",
    "commit_id": "a766cb44bcffcdb0b88e776d01c5ee1323d44f85",
    "added_lines": [
      "unsigned int ChunkSize = 1024-128",
      "unsigned int Offset = Chunk * ChunkSize"
    ],
    "removed_lines": [
      "int ChunkSize = 1024-128",
      "int Offset = Chunk * ChunkSize"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.4,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 328,
    "id": "CVE-2014-8567",
    "commit_id": "0f5b4fd860fa7e3a6c47201637aab05395f32647",
    "added_lines": [
      "Version 0.9.0",
      "---------------------------------------------------------------------------",
      "requests."
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 9.4,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "uninitialized data"
    ]
  },
  {
    "index": 330,
    "id": "CVE-2014-8483",
    "commit_id": "8b5ecd226f9208af3074b33d3b7cf5e14f55b138",
    "added_lines": [
      "if ((temp.length() % 12) != 0",
      "return cipherText",
      "if (direction)",
      "if ((temp2.length() % 8) != 0",
      "return cipherText"
    ],
    "removed_lines": [
      "if (direction"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 331,
    "id": "CVE-2014-8481",
    "commit_id": "a430c9166312e1aa3d80bce32374233bdbfeba32",
    "added_lines": [
      "done:"
    ],
    "removed_lines": [
      "done:"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 332,
    "id": "CVE-2014-8480",
    "commit_id": "3f6f1480d86bf9fc16c160d803ab1d006e3058d5",
    "added_lines": [
      "I(SrcMem | ByteOp, em_clflush), N, N, N,",
      "N, D(ImplicitOps | ModRM | SrcMem | NoAccess), N, N,",
      "D(ImplicitOps | ModRM | SrcMem | NoAccess),",
      "N, N, N, N, N, N, D(ImplicitOps | ModRM | SrcMem | NoAccess),"
    ],
    "removed_lines": [
      "I(0, em_clflush), N, N, N,",
      "N, D(ImplicitOps | ModRM), N, N,",
      "D(ImplicitOps | ModRM), N, N, N, N, N, N, D(ImplicitOps | ModRM),"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 333,
    "id": "CVE-2014-8399",
    "commit_id": "d2e91c118f6128875274a638007702d1cc665893",
    "added_lines": [],
    "removed_lines": [
      "<allow send_destination=\"org.freedesktop.systemd1\"",
      "send_interface=\"org.freedesktop.systemd1.Scope\"",
      "send_member=\"Abandon\"/>"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 334,
    "id": "CVE-2014-8369",
    "commit_id": "3d32e4dbe71374a6780eaf51d719d76f9a9bf22f",
    "added_lines": [
      "unsigned long npages",
      "end_gfn = gfn + npages",
      "pfn = kvm_pin_pages(slot, gfn, page_size >> PAGE_SHIFT",
      "kvm_unpin_pages(kvm, pfn, page_size >> PAGE_SHIFT"
    ],
    "removed_lines": [
      "unsigned long size",
      "end_gfn = gfn + (size >> PAGE_SHIFT",
      "pfn = kvm_pin_pages(slot, gfn, page_size",
      "kvm_unpin_pages(kvm, pfn, page_size"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "miscalculates the number of pages during the handling of a mapping failure"
    ]
  },
  {
    "index": 336,
    "id": "CVE-2014-8117",
    "commit_id": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\"",
      "#define MAX_RECURSION_LEVEL\t10",
      "uint32_t offset = ms->offset",
      "file_pushbuf_t *pb",
      "char *rbuf",
      "if (recursion_level >= MAX_RECURSION_LEVEL)",
      "if ((pb = file_push_buffer(ms)) == NULL",
      "return -1",
      "rbuf = file_pop_buffer(ms, pb",
      "if (rbuf == NULL",
      "return -1",
      "rbuf = m->value.s",
      "if (*rbuf == '^')",
      "rbuf++",
      "if (file_magicfind(ms, rbuf, &ml) == -1)",
      "file_error(ms, 0, \"cannot find entry `%s'\", rbuf"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\"",
      "uint32_t soffset, offset = ms->offset",
      "char *sbuf, *rbuf",
      "if (recursion_level >= 20)",
      "sbuf = ms->o.buf",
      "soffset = ms->offset",
      "ms->o.buf = NULL",
      "ms->offset = 0",
      "rbuf = ms->o.buf",
      "ms->o.buf = sbuf",
      "ms->offset = soffset",
      "sbuf = m->value.s",
      "if (*sbuf == '^')",
      "sbuf++",
      "if (file_magicfind(ms, sbuf, &ml) == -1)",
      "file_error(ms, 0, \"cannot find entry `%s'\", sbuf"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "recursion",
      "unspecified vectors"
    ]
  },
  {
    "index": 337,
    "id": "CVE-2014-8116",
    "commit_id": "d7cdad007c507e6c79f51f058dd77fab70ceb9f6",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.105 2014/11/22 16:04:29 christos Exp $\"",
      "size_t nbadcap = 0",
      "if (nbadcap > 5",
      "break",
      "if (nbadcap++ > 2",
      "coff = xsh_size"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.104 2014/10/17 15:49:00 christos Exp $\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 339,
    "id": "CVE-2014-7843",
    "commit_id": "97fc15436b36ee3956efad83e22a557991f7d19d",
    "added_lines": [
      "USER(9f, strb\twzr, [x0]"
    ],
    "removed_lines": [
      "strb\twzr, [x0]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "by reading one byte beyond a /dev/zero page boundary"
    ]
  },
  {
    "index": 340,
    "id": "CVE-2014-7842",
    "commit_id": "a2b9e6c1a35afcc0973acb72e591c714e78885ff",
    "added_lines": [
      "if (!is_guest_mode(vcpu) && kvm_x86_ops->get_cpl(vcpu) == 0)"
    ],
    "removed_lines": [
      "if (!is_guest_mode(vcpu))"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 341,
    "id": "CVE-2014-7841",
    "commit_id": "e40607cbe270a9e8360907cb1e62ddf0736e4864",
    "added_lines": [
      "if (af == NULL",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 342,
    "id": "CVE-2014-7826",
    "commit_id": "086ba77a6db00ed858ff07451bedee197df868c9",
    "added_lines": [
      "if (syscall_nr < 0 || syscall_nr >= NR_syscalls",
      "if (syscall_nr < 0 || syscall_nr >= NR_syscalls",
      "if (syscall_nr < 0 || syscall_nr >= NR_syscalls",
      "if (syscall_nr < 0 || syscall_nr >= NR_syscalls"
    ],
    "removed_lines": [
      "if (syscall_nr < 0",
      "if (syscall_nr < 0",
      "if (syscall_nr < 0",
      "if (syscall_nr < 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 4.6,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "invalid pointer dereference"
    ]
  },
  {
    "index": 344,
    "id": "CVE-2014-7283",
    "commit_id": "c88547a8119e3b581318ab65e9b72f27f23e641d",
    "added_lines": [
      "if (be32_to_cpu(btree[blk->index].hashval) == lasthash"
    ],
    "removed_lines": [
      "if (be32_to_cpu(btree->hashval) == lasthash"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "hash collisions"
    ]
  },
  {
    "index": 345,
    "id": "CVE-2014-7145",
    "commit_id": "18f39e7be0121317550d03e267e3ebd4dbfbb3ce",
    "added_lines": [
      "if (tcon",
      "tcon->bad_network_name = true"
    ],
    "removed_lines": [
      "tcon->bad_network_name = true"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 346,
    "id": "CVE-2014-6418",
    "commit_id": "c27a3e4d667fdcad3db7b104f75659478e0c68d8",
    "added_lines": [
      "void **p, void *end, void **obuf, size_t olen",
      "if (*obuf == NULL)",
      "if (!*obuf",
      "return -ENOMEM",
      "olen = len",
      "ret = ceph_decrypt2(secret, &head, &head_len, *obuf, &olen, *p, len",
      "void **p, void *end",
      "void *dbuf = NULL",
      "void *ticket_buf = NULL",
      "dlen = ceph_x_decrypt(secret, p, end, &dbuf, 0",
      "dlen = ceph_x_decrypt(&old_key, p, end, &ticket_buf, 0",
      "tp = ticket_buf",
      "ticket_buf = kmalloc(dlen, GFP_NOFS",
      "if (!ticket_buf)",
      "ret = -ENOMEM",
      "goto out",
      "tp = ticket_buf",
      "kfree(ticket_buf",
      "kfree(dbuf",
      "ret = process_one_ticket(ac, secret, &p, end",
      "return ret",
      "return 0",
      "return -EINVAL",
      "void *preply = &reply",
      "ret = ceph_x_decrypt(&th->session_key, &p, end, &preply, sizeof(reply"
    ],
    "removed_lines": [
      "#define TEMP_TICKET_BUF_LEN\t256",
      "void **p, void *end, void *obuf, size_t olen",
      "ret = ceph_decrypt2(secret, &head, &head_len, obuf, &olen,",
      "void **p, void *end,",
      "void *dbuf, void *ticket_buf",
      "dlen = ceph_x_decrypt(secret, p, end, dbuf,",
      "TEMP_TICKET_BUF_LEN",
      "tp = ticket_buf",
      "dlen = ceph_x_decrypt(&old_key, p, end, ticket_buf,",
      "TEMP_TICKET_BUF_LEN",
      "char *dbuf",
      "char *ticket_buf",
      "dbuf = kmalloc(TEMP_TICKET_BUF_LEN, GFP_NOFS",
      "if (!dbuf",
      "return -ENOMEM",
      "ret = -ENOMEM",
      "ticket_buf = kmalloc(TEMP_TICKET_BUF_LEN, GFP_NOFS",
      "if (!ticket_buf",
      "goto out_dbuf",
      "ret = process_one_ticket(ac, secret, &p, end,",
      "dbuf, ticket_buf",
      "goto out",
      "ret = 0",
      "out:",
      "kfree(ticket_buf",
      "out_dbuf:",
      "kfree(dbuf",
      "return ret",
      "ret = -EINVAL",
      "goto out",
      "ret = ceph_x_decrypt(&th->session_key, &p, end, &reply, sizeof(reply"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate auth replies"
    ]
  },
  {
    "index": 347,
    "id": "CVE-2014-6410",
    "commit_id": "c03aa9f6e1f938618e6db2e23afef0574efeeb65",
    "added_lines": [
      "#define UDF_MAX_ICB_NESTING 1024",
      "unsigned int indirections = 0",
      "reread:",
      "if (ie->indirectICB.extLength)",
      "brelse(bh",
      "brelse(ibh",
      "memcpy(&iinfo->i_location, &loc,",
      "sizeof(struct kernel_lb_addr",
      "if (++indirections > UDF_MAX_ICB_NESTING)",
      "udf_err(inode->i_sb,",
      "\"too many ICBs in ICB hierarchy\"",
      "\" (max %d supported)\\n\",",
      "UDF_MAX_ICB_NESTING",
      "make_bad_inode(inode",
      "goto reread"
    ],
    "removed_lines": [
      "struct buffer_head *nbh = NULL",
      "if (ie->indirectICB.extLength &&",
      "(nbh = udf_read_ptagged(inode->i_sb, &loc, 0,",
      "&ident)))",
      "if (ident == TAG_IDENT_FE ||",
      "ident == TAG_IDENT_EFE)",
      "memcpy(&iinfo->i_location,",
      "&loc,",
      "sizeof(struct kernel_lb_addr",
      "brelse(bh",
      "brelse(ibh",
      "brelse(nbh",
      "__udf_read_inode(inode",
      "brelse(nbh"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "stack consumption",
      "infinite loop"
    ]
  },
  {
    "index": 351,
    "id": "CVE-2014-5472",
    "commit_id": "410dd3cf4c9b36f27ed4542ee18b1af5e68645a4",
    "added_lines": [
      "#define RR_REGARD_XA 1",
      "#define RR_RELOC_DE 2",
      "struct inode *inode, int flags",
      "unsigned int reloc_block",
      "if (flags & RR_REGARD_XA)",
      "if (flags & RR_RELOC_DE)",
      "printk(KERN_ERR",
      "\"ISOFS: Recursive directory relocation \"",
      "\"is not supported\\n\"",
      "goto eio",
      "reloc_block = isonum_733(rr->u.CL.location",
      "if (reloc_block == ISOFS_I(inode)->i_iget5_block &&",
      "ISOFS_I(inode)->i_iget5_offset == 0)",
      "printk(KERN_ERR",
      "\"ISOFS: Directory relocation points to \"",
      "\"itself\\n\"",
      "goto eio",
      "ISOFS_I(inode)->i_first_extent = reloc_block",
      "reloc = isofs_iget_reloc(inode->i_sb, reloc_block, 0",
      "int parse_rock_ridge_inode(struct iso_directory_record *de, struct inode *inode,",
      "int relocated",
      "int flags = relocated ? RR_RELOC_DE : 0",
      "int result = parse_rock_ridge_inode_internal(de, inode, flags",
      "result = parse_rock_ridge_inode_internal(de, inode,",
      "flags | RR_REGARD_XA"
    ],
    "removed_lines": [
      "struct inode *inode, int regard_xa",
      "if (regard_xa)",
      "ISOFS_I(inode)->i_first_extent =",
      "isonum_733(rr->u.CL.location",
      "reloc =",
      "isofs_iget(inode->i_sb,",
      "ISOFS_I(inode)->i_first_extent,",
      "0",
      "int parse_rock_ridge_inode(struct iso_directory_record *de, struct inode *inode",
      "int result = parse_rock_ridge_inode_internal(de, inode, 0",
      "result = parse_rock_ridge_inode_internal(de, inode, 14"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 353,
    "id": "CVE-2014-5354",
    "commit_id": "04038bf3633c4b909b5ded3072dc88c8c419bf16",
    "added_lines": [
      "krb5_key_data *key_data = NULL",
      "if (n_key_data < 0",
      "if (key_data == NULL",
      "for (i = 0; ret[i] != NULL; i++",
      "free (ret[i]",
      "if (bersecretkey == NULL)",
      "st = ENOMEM",
      "if (bersecretkey[0] != NULL || !create_standalone_prinicipal)",
      "st = krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
      "LDAP_MOD_REPLACE | LDAP_MOD_BVALUES,",
      "bersecretkey",
      "if (st != 0",
      "goto cleanup"
    ],
    "removed_lines": [
      "krb5_key_data *key_data",
      "if (n_key_data <= 0",
      "if (key_data_in == NULL",
      "for (i = 0; i <= num_versions; i++",
      "if (ret[i] != NULL",
      "free (ret[i]",
      "if ((st=krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
      "LDAP_MOD_REPLACE | LDAP_MOD_BVALUES, bersecretkey)) != 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 3.5,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_FREE",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "MEM_FREE",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 354,
    "id": "CVE-2014-5353",
    "commit_id": "d1f707024f1d0af6e54a18885322d70fa15ec4d3",
    "added_lines": [
      "if (ent == NULL)",
      "st = KRB5_KDB_NOENTRY",
      "goto cleanup",
      "st = populate_policy(context, ld, ent, pol_name, *policy"
    ],
    "removed_lines": [
      "if (ent != NULL)",
      "if ((st = populate_policy(context, ld, ent, pol_name, *policy)) != 0",
      "goto cleanup"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 3.5,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 356,
    "id": "CVE-2014-5336",
    "commit_id": "b2d0e6f92310bb14a15aa2f8e96e1fb5379776dd",
    "added_lines": [
      "sr->fd_is_fdt      = MK_TRUE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "when the File Descriptor Table (FDT) is enabled and custom error messages are set"
    ]
  },
  {
    "index": 357,
    "id": "CVE-2014-5207",
    "commit_id": "9566d6742852c527bf5af38af5cbb878dad75705",
    "added_lines": [
      "#define MNT_ATIME_MASK (MNT_NOATIME | MNT_NODIRATIME | MNT_RELATIME",
      "#define MNT_LOCK_ATIME\t\t0x040000",
      "#define MNT_LOCK_NOEXEC\t\t0x080000",
      "#define MNT_LOCK_NOSUID\t\t0x100000",
      "#define MNT_LOCK_NODEV\t\t0x200000"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Priv",
    "score": 6.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "does not properly restrict clearing MNT_NODEV, MNT_NOSUID, and MNT_NOEXEC and changing MNT_ATIME_MASK during a remount of a bind mount,"
    ]
  },
  {
    "index": 359,
    "id": "CVE-2014-5077",
    "commit_id": "1be9a950c646c9092fb3618197f7b6bfb50e82aa",
    "added_lines": [
      "asoc->peer.auth_capable = new->peer.auth_capable"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.4,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 360,
    "id": "CVE-2014-5045",
    "commit_id": "295dc39d941dc2ae53d5c170365af4c9d5c16212",
    "added_lines": [
      "path->mnt = nd->path.mnt",
      "mntget(path->mnt"
    ],
    "removed_lines": [
      "path->mnt = mntget(nd->path.mnt"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.2,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 362,
    "id": "CVE-2014-4699",
    "commit_id": "b9cd18de4db3c9ffa7e17b0dc0ca99ed5aa4d43a",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 364,
    "id": "CVE-2014-4667",
    "commit_id": "d3217b15a19a4779c39b212358a5c71d725822ee",
    "added_lines": [
      "if (!list_empty(&asoc->asocs))"
    ],
    "removed_lines": [
      "if (!asoc->temp)"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly manage a certain backlog value"
    ]
  },
  {
    "index": 367,
    "id": "CVE-2014-4653",
    "commit_id": "fd9f26e4eca5d08a27d12c0933fceef76ed9663d",
    "added_lines": [
      "unsigned int count",
      "count = kcontrol->count",
      "for (idx = 0; idx < count; idx++, id.index++, id.numid++",
      "unsigned int count",
      "count = kcontrol->count",
      "for (idx = 0; idx < count; idx++, id.index++, id.numid++",
      "struct snd_ctl_elem_id id = control->id",
      "snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_VALUE, &id",
      "struct snd_ctl_elem_id id = kctl->id",
      "snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_TLV, &id"
    ],
    "removed_lines": [
      "for (idx = 0; idx < kcontrol->count; idx++, id.index++, id.numid++",
      "for (idx = 0; idx < kcontrol->count; idx++, id.index++, id.numid++",
      "snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_VALUE,",
      "&control->id",
      "snd_ctl_notify(card, SNDRV_CTL_EVENT_MASK_TLV, &kctl->id"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 6.6,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 371,
    "id": "CVE-2014-4503",
    "commit_id": "910c36089940e81fb85c65b8e63dcd2fac71470c",
    "added_lines": [
      "if (unlikely(!hex2bin(pool->header_bin, header, 128)))",
      "applog(LOG_WARNING, \"%s: Failed to convert header to header_bin, got %s\", __func__, header",
      "pool_failed(pool",
      "return false"
    ],
    "removed_lines": [
      "if (unlikely(!hex2bin(pool->header_bin, header, 128",
      "quit(1, \"Failed to convert header to header_bin in parse_notify\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 375,
    "id": "CVE-2014-4344",
    "commit_id": "a7886f0ed1277c69142b14a2c6629175a6331edc",
    "added_lines": [
      "if (REMAIN == 0 || REMAIN > INT_MAX"
    ],
    "removed_lines": [
      "if (REMAIN > INT_MAX"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 376,
    "id": "CVE-2014-4343",
    "commit_id": "f18ddf5d82de0ab7591a36e465bc24225776940f",
    "added_lines": [],
    "removed_lines": [
      "generic_gss_release_oid(&tmpmin, &sc->internal_mech"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode Mem. Corr.",
    "score": 7.6,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code Mem. Corr. ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 384,
    "id": "CVE-2014-3971",
    "commit_id": "c151e0660b9736fe66b224f1129a16871165251b",
    "added_lines": [
      "size_t srvClusterIdPos = srvSubjectName.find(\",OU=\"",
      "size_t peerClusterIdPos = subjectName.find(\",OU=\"",
      "std::string srvClusterId = srvClusterIdPos != std::string::npos ?",
      "srvSubjectName.substr(srvClusterIdPos) : \"\"",
      "std::string peerClusterId = peerClusterIdPos != std::string::npos ?",
      "subjectName.substr(peerClusterIdPos) : \"\"",
      "if (srvClusterId == peerClusterId && !srvClusterId.empty())"
    ],
    "removed_lines": [
      "std::string srvClusterId = srvSubjectName.substr(srvSubjectName.find(\",OU=\"",
      "std::string peerClusterId = subjectName.substr(subjectName.find(\",OU=\"",
      "fassert(17002, !srvClusterId.empty() && srvClusterId != srvSubjectName",
      "if (srvClusterId == peerClusterId)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "by attempting authentication with an invalid X.509 client certificate"
    ]
  },
  {
    "index": 385,
    "id": "CVE-2014-3710",
    "commit_id": "39c7ac1106be844a5296d3eb5971946cc09ffda0",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.103 2014/05/02 02:25:10 christos Exp $\"",
      "if (xnh_sizeof + offset > size)",
      "return xnh_sizeof + offset"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.102 2014/03/11 21:00:13 christos Exp $\""
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 386,
    "id": "CVE-2014-3690",
    "commit_id": "d974baa398f34393db76be45f7d4d04fbdbb4a0a",
    "added_lines": [
      "unsigned long vmcs_host_cr4;",
      "unsigned long cr4",
      "cr4 = read_cr4",
      "vmcs_writel(HOST_CR4, cr4);",
      "vmx->host_state.vmcs_host_cr4 = cr4",
      "unsigned long debugctlmsr, cr4",
      "cr4 = read_cr4",
      "if (unlikely(cr4 != vmx->host_state.vmcs_host_cr4))",
      "vmcs_writel(HOST_CR4, cr4",
      "vmx->host_state.vmcs_host_cr4 = cr4"
    ],
    "removed_lines": [
      "vmcs_writel(HOST_CR4, read_cr4());",
      "unsigned long debugctlmsr"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that the value in the CR4 control register remains the same after a VM entry,"
    ]
  },
  {
    "index": 387,
    "id": "CVE-2014-3688",
    "commit_id": "26b87c7881006311828bb0ab271a551a62dcceb4",
    "added_lines": [
      "if (unlikely(chunk->pdiscard",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "triggering a large number of chunks in an association's output queue, as demonstrated by ASCONF probes"
    ]
  },
  {
    "index": 388,
    "id": "CVE-2014-3687",
    "commit_id": "b69040d8e39f20d5215a03502a8e8b4c6ab78395",
    "added_lines": [
      "if (sctp_chunk_pending(ack",
      "continue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 389,
    "id": "CVE-2014-3673",
    "commit_id": "9de7922bc709eee2f609cd01d98aaedc4cf5ea74",
    "added_lines": [
      "if (!sctp_verify_asconf(asoc, chunk, true, &err_param",
      "if (!sctp_verify_asconf(asoc, asconf_ack, false, &err_param"
    ],
    "removed_lines": [
      "union sctp_addr_param\t*addr_param",
      "int\t\t\tlength",
      "addr_param = (union sctp_addr_param *)hdr->params",
      "length = ntohs(addr_param->p.length",
      "if (length < sizeof(sctp_paramhdr_t",
      "return sctp_sf_violation_paramlen(net, ep, asoc, type, arg,",
      "(void *)addr_param, commands",
      "if (!sctp_verify_asconf(asoc,",
      "(sctp_paramhdr_t *)((void *)addr_param + length),",
      "(void *)chunk->chunk_end,",
      "&err_param",
      "if (!sctp_verify_asconf(asoc,",
      "(sctp_paramhdr_t *)addip_hdr->params,",
      "(void *)asconf_ack->chunk_end,",
      "&err_param"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 390,
    "id": "CVE-2014-3647",
    "commit_id": "d1442d85cc30ea75f7d399474ca738e0bc96f715",
    "added_lines": [
      "u16 selector, int seg, u8 cpl,",
      "bool in_task_switch,",
      "struct desc_struct *desc",
      "if (desc",
      "return __load_segment_descriptor(ctxt, selector, seg, cpl, false, NULL",
      "unsigned short sel, old_sel",
      "struct desc_struct old_desc, new_desc",
      "const struct x86_emulate_ops *ops = ctxt->ops",
      "u8 cpl = ctxt->ops->cpl(ctxt",
      "if (ctxt->mode == X86EMUL_MODE_PROT64",
      "ops->get_segment(ctxt, &old_sel, &old_desc, NULL,",
      "VCPU_SREG_CS",
      "rc = __load_segment_descriptor(ctxt, sel, VCPU_SREG_CS, cpl, false,",
      "&new_desc",
      "rc = assign_eip_far(ctxt, ctxt->src.val, new_desc.l",
      "if (rc != X86EMUL_CONTINUE)",
      "WARN_ON(!ctxt->mode != X86EMUL_MODE_PROT64",
      "ops->set_segment(ctxt, old_sel, &old_desc, 0, VCPU_SREG_CS",
      "return rc",
      "return rc",
      "unsigned long eip, cs",
      "u16 old_cs",
      "struct desc_struct old_desc, new_desc",
      "const struct x86_emulate_ops *ops = ctxt->ops",
      "if (ctxt->mode == X86EMUL_MODE_PROT64",
      "ops->get_segment(ctxt, &old_cs, &old_desc, NULL,",
      "VCPU_SREG_CS",
      "rc = emulate_pop(ctxt, &eip, ctxt->op_bytes",
      "rc = __load_segment_descriptor(ctxt, (u16)cs, VCPU_SREG_CS, 0, false,",
      "&new_desc",
      "if (rc != X86EMUL_CONTINUE",
      "return rc",
      "rc = assign_eip_far(ctxt, eip, new_desc.l",
      "if (rc != X86EMUL_CONTINUE)",
      "WARN_ON(!ctxt->mode != X86EMUL_MODE_PROT64",
      "ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS",
      "ret = __load_segment_descriptor(ctxt, tss->ldt, VCPU_SREG_LDTR, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->es, VCPU_SREG_ES, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->cs, VCPU_SREG_CS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->ss, VCPU_SREG_SS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->ds, VCPU_SREG_DS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->ldt_selector, VCPU_SREG_LDTR,",
      "cpl, true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->es, VCPU_SREG_ES, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->cs, VCPU_SREG_CS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->ss, VCPU_SREG_SS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->ds, VCPU_SREG_DS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->fs, VCPU_SREG_FS, cpl,",
      "true, NULL",
      "ret = __load_segment_descriptor(ctxt, tss->gs, VCPU_SREG_GS, cpl,",
      "true, NULL",
      "struct desc_struct old_desc, new_desc",
      "const struct x86_emulate_ops *ops = ctxt->ops",
      "int cpl = ctxt->ops->cpl(ctxt",
      "ops->get_segment(ctxt, &old_cs, &old_desc, NULL, VCPU_SREG_CS",
      "rc = __load_segment_descriptor(ctxt, sel, VCPU_SREG_CS, cpl, false,",
      "&new_desc",
      "if (rc != X86EMUL_CONTINUE",
      "rc = assign_eip_far(ctxt, ctxt->src.val, new_desc.l",
      "if (rc != X86EMUL_CONTINUE",
      "goto fail",
      "goto fail",
      "rc = em_push(ctxt",
      "restore cs */",
      "if (rc != X86EMUL_CONTINUE",
      "goto fail",
      "return rc",
      "fail:",
      "ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS",
      "return rc"
    ],
    "removed_lines": [
      "u16 selector, int seg, u8 cpl, bool in_task_switch",
      "return __load_segment_descriptor(ctxt, selector, seg, cpl, false",
      "unsigned short sel",
      "rc = load_segment_descriptor(ctxt, sel, VCPU_SREG_CS",
      "ctxt->_eip = 0",
      "memcpy(&ctxt->_eip, ctxt->src.valptr, ctxt->op_bytes",
      "return X86EMUL_CONTINUE",
      "unsigned long cs",
      "rc = emulate_pop(ctxt, &ctxt->_eip, ctxt->op_bytes",
      "if (ctxt->op_bytes == 4",
      "ctxt->_eip = (u32)ctxt->_eip",
      "rc = load_segment_descriptor(ctxt, (u16)cs, VCPU_SREG_CS",
      "ret = __load_segment_descriptor(ctxt, tss->ldt, VCPU_SREG_LDTR, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->es, VCPU_SREG_ES, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->cs, VCPU_SREG_CS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->ss, VCPU_SREG_SS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->ds, VCPU_SREG_DS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->ldt_selector, VCPU_SREG_LDTR, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->es, VCPU_SREG_ES, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->cs, VCPU_SREG_CS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->ss, VCPU_SREG_SS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->ds, VCPU_SREG_DS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->fs, VCPU_SREG_FS, cpl, true",
      "ret = __load_segment_descriptor(ctxt, tss->gs, VCPU_SREG_GS, cpl, true",
      "old_cs = get_segment_selector(ctxt, VCPU_SREG_CS",
      "if (load_segment_descriptor(ctxt, sel, VCPU_SREG_CS",
      "ctxt->_eip = 0",
      "memcpy(&ctxt->_eip, ctxt->src.valptr, ctxt->op_bytes",
      "return rc",
      "return em_push(ctxt"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform RIP changes"
    ]
  },
  {
    "index": 391,
    "id": "CVE-2014-3646",
    "commit_id": "a642fc305053cc1c6e47e4f4df327895747ab485",
    "added_lines": [
      "static int handle_invvpid(struct kvm_vcpu *vcpu",
      "kvm_queue_exception(vcpu, UD_VECTOR",
      "return 1",
      "[EXIT_REASON_INVVPID]                 = handle_invvpid,",
      "case EXIT_REASON_INVEPT: case EXIT_REASON_INVVPID:"
    ],
    "removed_lines": [
      "case EXIT_REASON_INVEPT:"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not have an exit handler for the INVVPID instruction"
    ]
  },
  {
    "index": 392,
    "id": "CVE-2014-3645",
    "commit_id": "bfd0a56b90005f8c8a004baf407ad90045c2b11e",
    "added_lines": [
      "static unsigned long nested_ept_get_cr3(struct kvm_vcpu *vcpu",
      "static u32 nested_vmx_ept_caps",
      "static int handle_invept(struct kvm_vcpu *vcpu",
      "u32 vmx_instruction_info, types",
      "unsigned long type",
      "gva_t gva",
      "struct x86_exception e",
      "struct",
      "u64 eptp, gpa",
      "} operand",
      "u64 eptp_mask = ((1ull << 51) - 1) & PAGE_MASK",
      "if (!(nested_vmx_secondary_ctls_high & SECONDARY_EXEC_ENABLE_EPT) ||",
      "!(nested_vmx_ept_caps & VMX_EPT_INVEPT_BIT))",
      "kvm_queue_exception(vcpu, UD_VECTOR",
      "return 1",
      "if (!nested_vmx_check_permission(vcpu",
      "return 1",
      "if (!kvm_read_cr0_bits(vcpu, X86_CR0_PE))",
      "kvm_queue_exception(vcpu, UD_VECTOR",
      "return 1",
      "vmx_instruction_info = vmcs_read32(VMX_INSTRUCTION_INFO",
      "type = kvm_register_read(vcpu, (vmx_instruction_info >> 28) & 0xf",
      "types = (nested_vmx_ept_caps >> VMX_EPT_EXTENT_SHIFT) & 6",
      "if (!(types & (1UL << type)))",
      "nested_vmx_failValid(vcpu,",
      "VMXERR_INVALID_OPERAND_TO_INVEPT_INVVPID",
      "return 1",
      "if (get_vmx_mem_address(vcpu, vmcs_readl(EXIT_QUALIFICATION),",
      "vmx_instruction_info, &gva",
      "return 1",
      "if (kvm_read_guest_virt(&vcpu->arch.emulate_ctxt, gva, &operand,",
      "sizeof(operand), &e))",
      "kvm_inject_page_fault(vcpu, &e",
      "return 1",
      "switch (type)",
      "case VMX_EPT_EXTENT_CONTEXT:",
      "if ((operand.eptp & eptp_mask) !=",
      "(nested_ept_get_cr3(vcpu) & eptp_mask",
      "break",
      "case VMX_EPT_EXTENT_GLOBAL:",
      "kvm_mmu_sync_roots(vcpu",
      "kvm_mmu_flush_tlb(vcpu",
      "nested_vmx_succeed(vcpu",
      "break",
      "default:",
      "BUG_ON(1",
      "break",
      "skip_emulated_instruction(vcpu",
      "return 1",
      "[EXIT_REASON_INVEPT]                  = handle_invept,",
      "case EXIT_REASON_INVEPT:"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not have an exit handler for the INVEPT instruction"
    ]
  },
  {
    "index": 393,
    "id": "CVE-2014-3631",
    "commit_id": "95389b08d93d5c06ec63ab49bd732b0069b7c35e",
    "added_lines": [
      "if (!cursor",
      "goto gc_complete",
      "BUG_ON(!cursor"
    ],
    "removed_lines": [
      "BUG_ON(!ptr"
    ],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly implement garbage collection",
      "null pointer dereference"
    ]
  },
  {
    "index": 394,
    "id": "CVE-2014-3611",
    "commit_id": "2febc839133280d5a5e8e1179c94ea674489dae2",
    "added_lines": [
      "mutex_lock(&pit->pit_state.lock",
      "mutex_unlock(&pit->pit_state.lock"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 395,
    "id": "CVE-2014-3610",
    "commit_id": "854e8bb1aa06c578c2c9145fa6bfe3680ef63b23",
    "added_lines": [
      "switch (msr->index)",
      "case MSR_FS_BASE:",
      "case MSR_GS_BASE:",
      "case MSR_KERNEL_GS_BASE:",
      "case MSR_CSTAR:",
      "case MSR_LSTAR:",
      "if (is_noncanonical_address(msr->data",
      "return 1",
      "break",
      "case MSR_IA32_SYSENTER_EIP:",
      "case MSR_IA32_SYSENTER_ESP:",
      "msr->data = get_canonical(msr->data",
      "EXPORT_SYMBOL_GPL(kvm_set_msr"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle the writing of a non-canonical address to a model-specific register,"
    ]
  },
  {
    "index": 396,
    "id": "CVE-2014-3601",
    "commit_id": "350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7",
    "added_lines": [
      "static void kvm_unpin_pages(struct kvm *kvm, pfn_t pfn, unsigned long npages",
      "unsigned long i",
      "for (i = 0; i < npages; ++i",
      "kvm_release_pfn_clean(pfn + i",
      "kvm_unpin_pages(kvm, pfn, page_size",
      "kvm_iommu_put_pages(kvm, slot->base_gfn, gfn - slot->base_gfn"
    ],
    "removed_lines": [
      "kvm_iommu_put_pages(kvm, slot->base_gfn, gfn",
      "static void kvm_unpin_pages(struct kvm *kvm, pfn_t pfn, unsigned long npages",
      "unsigned long i",
      "for (i = 0; i < npages; ++i",
      "kvm_release_pfn_clean(pfn + i"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "miscalculates the number of pages during the handling of a mapping failure"
    ]
  },
  {
    "index": 399,
    "id": "CVE-2014-3538",
    "commit_id": "4a284c89d6ef11aca34da65da7d673050a5ea320",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.189 2014/05/30 16:47:44 christos Exp $\"",
      "const unsigned char *, uint32_t, size_t, struct magic *",
      "file_fmttime(p->l + m->num_mask, FILE_T_LOCAL, tbuf)) == -1",
      "file_fmttime(p->l + m->num_mask, 0, tbuf)) == -1",
      "file_fmttime(p->q + m->num_mask, FILE_T_LOCAL, tbuf)) == -1",
      "file_fmttime(p->q + m->num_mask, 0, tbuf)) == -1",
      "file_fmttime(p->q + m->num_mask, FILE_T_WINDOWS, tbuf)) == -1",
      "uint8_t type",
      "switch (type = cvt_flip(m->type, flip))",
      "if (type == FILE_BELONG",
      "cvt_32(p, m",
      "if (type == FILE_BEQUAD",
      "cvt_64(p, m",
      "if (type == FILE_LELONG",
      "cvt_32(p, m",
      "if (type == FILE_LEQUAD",
      "cvt_64(p, m",
      "if (type == FILE_MELONG",
      "cvt_32(p, m",
      "const unsigned char *s, uint32_t offset, size_t nbytes, struct magic *m",
      "size_t lines, linecnt, bytecnt",
      "if (m->str_flags & REGEX_LINE_COUNT)",
      "linecnt = m->str_range",
      "bytecnt = linecnt * 80",
      "} else",
      "linecnt = 0",
      "bytecnt = m->str_range",
      "if (bytecnt == 0",
      "bytecnt = 8192",
      "if (bytecnt > nbytes",
      "bytecnt = nbytes",
      "end = last = RCAST(const char *, s) + bytecnt",
      "last = RCAST(const char *, s) + bytecnt",
      "(uint32_t)nbytes, m) == -1",
      "\"nbytes=%zu)\\n\", m->type, m->flag, offset, o, nbytes",
      "if (mcopy(ms, p, m->type, 0, s, offset, nbytes, m) == -1",
      "v = file_strncmp(m->value.s, ms->search.s + idx, slen,",
      "m->str_flags",
      "char c"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.188 2014/05/14 23:15:42 christos Exp $\"",
      "const unsigned char *, uint32_t, size_t, size_t",
      "file_fmttime(p->l, FILE_T_LOCAL, tbuf)) == -1",
      "file_fmttime(p->l, 0, tbuf)) == -1",
      "file_fmttime(p->q, FILE_T_LOCAL, tbuf)) == -1",
      "file_fmttime(p->q, 0, tbuf)) == -1",
      "file_fmttime(p->q, FILE_T_WINDOWS, tbuf)) == -1",
      "switch (cvt_flip(m->type, flip))",
      "cvt_32(p, m",
      "cvt_64(p, m",
      "cvt_32(p, m",
      "cvt_64(p, m",
      "cvt_32(p, m",
      "const unsigned char *s, uint32_t offset, size_t nbytes, size_t linecnt",
      "size_t lines",
      "end = last = RCAST(const char *, s) + nbytes",
      "last = RCAST(const char *, s) + nbytes",
      "uint32_t count = m->str_range",
      "(uint32_t)nbytes, count) == -1",
      "\"nbytes=%zu, count=%u)\\n\", m->type, m->flag, offset, o,",
      "nbytes, count",
      "if (mcopy(ms, p, m->type, 0, s, offset, nbytes, count) == -1",
      "v = file_strncmp(m->value.s, ms->search.s + idx, slen, m->str_flags",
      "#ifndef REG_STARTEND",
      "char c",
      "#endif",
      "if (m->str_range > 0",
      "slen = MIN(slen, m->str_range"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict the amount of data read during a regex search"
    ]
  },
  {
    "index": 402,
    "id": "CVE-2014-3487",
    "commit_id": "93e063ee374b6a75729df9e7201fb511e47e259d",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.62 2014/06/04 17:26:07 christos Exp $\"",
      "size_t tail = (i << 1) + 1",
      "if (cdf_check_stream_offset(sst, h, p, tail * sizeof(uint32_t),",
      "__LINE__) == -1",
      "goto out",
      "size_t ofs = CDF_GETUINT32(p, tail"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.61 2014/06/04 17:23:19 christos Exp $\"",
      "size_t ofs = CDF_GETUINT32(p, (i << 1) + 1"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate a stream offset"
    ]
  },
  {
    "index": 403,
    "id": "CVE-2014-3480",
    "commit_id": "40bade80cbe2af1d0b2cd0420cebd5d5905a2382",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.60 2014/05/21 13:04:38 christos Exp $\"",
      "cdf_secid_t maxsector = (cdf_secid_t)((sat->sat_len * size",
      "/ sizeof(maxsector",
      "if (sid >= maxsector)",
      "DPRINTF((\"Sector %d >= %d\\n\", sid, maxsector"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.59 2014/05/14 23:22:48 christos Exp $\"",
      "cdf_secid_t maxsector = (cdf_secid_t)(sat->sat_len * size",
      "if (sid > maxsector)",
      "DPRINTF((\"Sector %d > %d\\n\", sid, maxsector"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate sector-count data"
    ]
  },
  {
    "index": 404,
    "id": "CVE-2014-3479",
    "commit_id": "36fadd29849b8087af9f4586f89dbf74ea45be67",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.61 2014/06/04 17:23:19 christos Exp $\"",
      "size_t ss = sst->sst_dirlen < h->h_min_size_standard_stream ?",
      "CDF_SHORT_SEC_SIZE(h) : CDF_SEC_SIZE(h",
      "if (e >= b && (size_t)(e - b) <= ss * sst->sst_len",
      "ss * sst->sst_len, ss, sst->sst_len"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.60 2014/05/21 13:04:38 christos Exp $\"",
      "if (e >= b && (size_t)(e - b) <= CDF_SEC_SIZE(h) * sst->sst_len",
      "CDF_SEC_SIZE(h) * sst->sst_len, CDF_SEC_SIZE(h), sst->sst_len"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "relies on incorrect sector-size data"
    ]
  },
  {
    "index": 414,
    "id": "CVE-2014-3145",
    "commit_id": "05ab8f2647e4221cbdb3856dd7d32bd5407316b3",
    "added_lines": [
      "if (skb->len < sizeof(struct nlattr",
      "return 0",
      "if (skb->len < sizeof(struct nlattr",
      "return 0",
      "if (nla->nla_len > skb->len - A"
    ],
    "removed_lines": [
      "if (nla->nla_len > A - skb->len"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses the reverse order in a certain subtraction"
    ]
  },
  {
    "index": 415,
    "id": "CVE-2014-3122",
    "commit_id": "57e68e9cd65b4b8eb4045a1e0d0746458502554c",
    "added_lines": [
      "if (page == check_page)",
      "mlock_vma_page(page",
      "} else if (trylock_page(page))",
      "mlock_vma_page(page",
      "unlock_page(page"
    ],
    "removed_lines": [
      "mlock_vma_page(page);",
      "if (page == check_page"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly consider"
    ]
  },
  {
    "index": 416,
    "id": "CVE-2014-2889",
    "commit_id": "a03ffcf873fe0f2565386ca8ef832144c42e67fa",
    "added_lines": [
      "if (filter[i].jf && f_offset",
      "t_offset += is_near(f_offset) ? 2 : 5"
    ],
    "removed_lines": [
      "if (filter[i].jf",
      "t_offset += is_near(f_offset) ? 2 : 6"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 4.6,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "off-by-one",
      "off-by-one error"
    ]
  },
  {
    "index": 417,
    "id": "CVE-2014-2739",
    "commit_id": "b2853fd6c2d0f383dbdf7427e263eb576a633867",
    "added_lines": [],
    "removed_lines": [
      "int ib_update_cm_av(struct ib_cm_id *id, const u8 *smac, const u8 *alt_smac"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer"
    ]
  },
  {
    "index": 418,
    "id": "CVE-2014-2706",
    "commit_id": "1d147bfa64293b2723c4fec50922168658e613ba",
    "added_lines": [
      "spin_lock(&sta->ps_lock",
      "if (!test_sta_flag(sta, WLAN_STA_PS_STA) &&",
      "!test_sta_flag(sta, WLAN_STA_PS_DRIVER))",
      "spin_unlock(&sta->ps_lock",
      "return TX_CONTINUE",
      "spin_unlock(&sta->ps_lock"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 419,
    "id": "CVE-2014-2673",
    "commit_id": "621b5060e823301d0cba4cb52a7ee3491922d291",
    "added_lines": [
      "__switch_to_tm(src",
      "tm_recheckpoint_new_task(src"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly interact with the clone and fork system calls"
    ]
  },
  {
    "index": 420,
    "id": "CVE-2014-2672",
    "commit_id": "21f8aaee0c62708654988ce092838aa7df4d25d8",
    "added_lines": [
      "if (!tid->sched)",
      "ath_txq_unlock(sc, txq",
      "continue"
    ],
    "removed_lines": [
      "if (!tid->sched",
      "continue"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 423,
    "id": "CVE-2014-2523",
    "commit_id": "b22f5126a24b3b2f15448c3f2a254fc10cbc2b92",
    "added_lines": [
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &_dh",
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &_dh",
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &_dh"
    ],
    "removed_lines": [
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &dh",
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &dh",
      "dh = skb_header_pointer(skb, dataoff, sizeof(_dh), &dh"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "uses a DCCP header pointer incorrectly"
    ]
  },
  {
    "index": 427,
    "id": "CVE-2014-2039",
    "commit_id": "8d7f6690cedb83456edd41c9bd583783f0703bf0",
    "added_lines": [
      ".quad\t.Llinkage_stack\t\t# cr15: linkage stack operations",
      ".Lduct: .long\t0,.Laste,.Laste,0,.Lduald,0,0,0",
      ".Laste:\t.quad\t0,0xffffffffffffffff,0,0,0,0,0,0",
      ".Llinkage_stack:",
      ".long\t0,0,0x89000000,0,0,0,0x8a000000,0"
    ],
    "removed_lines": [
      ".quad\t0\t\t\t# cr15: linkage stack operations",
      ".Lduct: .long\t0,0,0,0,.Lduald,0,0,0"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle attempted use of the linkage stack"
    ]
  },
  {
    "index": 430,
    "id": "CVE-2014-1874",
    "commit_id": "2172fa709ab32ca60e86179dc67d0857be8e2c98",
    "added_lines": [
      "if (!scontext_len",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.4,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "the CAP_MAC_ADMIN capability to set a zero-length security context"
    ]
  },
  {
    "index": 439,
    "id": "CVE-2014-1438",
    "commit_id": "26bef1318adc1b3a530ecc807ef99346db2aa8b0",
    "added_lines": [
      "if (unlikely(static_cpu_has(X86_FEATURE_FXSAVE_LEAK)))",
      "asm volatile",
      "\"fnclex\\n\\t\"",
      "\"emms\\n\\t\"",
      "\"fildl %P[addr]\"",
      ": : [addr] \"m\" (tsk->thread.fpu.has_fpu"
    ],
    "removed_lines": [
      "alternative_input",
      "ASM_NOP8 ASM_NOP2,",
      "\"emms\\n\\t\"",
      "\"fildl %P[addr]\",",
      "X86_FEATURE_FXSAVE_LEAK,",
      "[addr] \"m\" (tsk->thread.fpu.has_fpu"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "does not clear pending exceptions before proceeding to an EMMS instruction"
    ]
  },
  {
    "index": 445,
    "id": "CVE-2014-0237",
    "commit_id": "b8acc83781d5a24cc5101e525d15efe0482c280d",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.56 2014/05/05 16:11:21 christos Exp $\"",
      "size_t maxcount",
      "ssi->si_count = CDF_TOLE4(si->si_count",
      "if (cdf_read_property_info(sst, h, CDF_TOLE4(sd->sd_offset), info,",
      "count, &maxcount) == -1",
      "return -1"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: cdf.c,v 1.55 2014/02/27 23:26:17 christos Exp $\"",
      "size_t i, maxcount",
      "ssi->si_count = CDF_TOLE2(si->si_count",
      "for (i = 0; i < CDF_TOLE4(si->si_count); i++)",
      "if (i >= CDF_LOOP_LIMIT)",
      "DPRINTF((\"Unpack summary info loop limit\"",
      "errno = EFTYPE",
      "return -1",
      "if (cdf_read_property_info(sst, h, CDF_TOLE4(sd->sd_offset),",
      "info, count, &maxcount) == -1)",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering many file_printf calls"
    ]
  },
  {
    "index": 449,
    "id": "CVE-2014-0203",
    "commit_id": "86acdca1b63e6890540fa19495cfc708beff3d8b",
    "added_lines": [],
    "removed_lines": [
      "nd->last_type = LAST_BIND"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle the last pathname component during use of certain filesystems"
    ]
  },
  {
    "index": 450,
    "id": "CVE-2014-0196",
    "commit_id": "4291086b1f081b869c6d79e5b7441633dc3ace00",
    "added_lines": [
      "struct n_tty_data *ldata = tty->disc_data",
      "mutex_lock(&ldata->output_lock",
      "mutex_unlock(&ldata->output_lock"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 6.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 453,
    "id": "CVE-2014-0101",
    "commit_id": "ec0223ec48a90cb605244b45f7c62de856403729",
    "added_lines": [
      "if (!net->sctp.auth_enable || !new_asoc->peer.auth_capable)",
      "kfree_skb(chunk->auth_chunk",
      "sctp_association_free(new_asoc",
      "return sctp_sf_pdiscard(net, ep, asoc, type, arg, commands"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 454,
    "id": "CVE-2014-0077",
    "commit_id": "d8316f3991d207fe32881a9ac20241be8fa2bad0",
    "added_lines": [
      "if (unlikely(datalen > 0))",
      "r = UIO_MAXIOV + 1",
      "goto err",
      "if (unlikely(headcount > UIO_MAXIOV))",
      "msg.msg_iovlen = 1",
      "err = sock->ops->recvmsg(NULL, sock, &msg,",
      "1, MSG_DONTWAIT | MSG_TRUNC",
      "pr_debug(\"Discarded rx packet: len %zd\\n\", sock_len",
      "continue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 5.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "does not properly validate packet lengths,"
    ]
  },
  {
    "index": 459,
    "id": "CVE-2013-7348",
    "commit_id": "d558023207e008a4476a3b7bb8706b2a2bf5d84f",
    "added_lines": [],
    "removed_lines": [
      "aio_free_ring(ctx"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 460,
    "id": "CVE-2013-7345",
    "commit_id": "ef2329cf71acb59204dd981e2c6cce6c81fe467c",
    "added_lines": [
      "# $File: commands,v 1.45 2013/02/06 14:18:52 christos Exp $",
      "0\tregex\t\t=^\\\\s{0,100}BEGIN\\\\s{0,100}[{]\tawk script text"
    ],
    "removed_lines": [
      "# $File: commands,v 1.44 2013/02/05 15:20:47 christos Exp $",
      "0\tregex\t\t=^\\\\s*BEGIN\\\\s*[{]\tawk script text"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses multiple wildcards with unlimited repetitions"
    ]
  },
  {
    "index": 461,
    "id": "CVE-2013-7339",
    "commit_id": "c2349758acf1874e4c2b93fe41d072336f1a31d0",
    "added_lines": [
      "if (ret || !cm_id->device ||",
      "cm_id->device->node_type != RDMA_NODE_IB_CA"
    ],
    "removed_lines": [
      "if (ret || cm_id->device->node_type != RDMA_NODE_IB_CA"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "bind system call",
      "null pointer dereference"
    ]
  },
  {
    "index": 463,
    "id": "CVE-2013-7294",
    "commit_id": "2899351224fe2940aec37d7656e1e392c0fe07f0",
    "added_lines": [
      "char fromname[ADDRTOT_BUF]",
      "addrtot(&md->sender, 0, fromname, ADDRTOT_BUF",
      "if (!md->chain[ISAKMP_NEXT_v2KE])",
      "if(md->chain[ISAKMP_NEXT_v2N])",
      "libreswan_log(\"Received Notify(%d): %s\",",
      "md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type,",
      "enum_name(&ikev2_notify_names,",
      "md->chain[ISAKMP_NEXT_v2N]->payload.v2n.isan_type",
      "libreswan_log",
      "\"rejecting I1 from %s:%u, no KE payload present\",",
      "fromname, md->sender_port",
      "return STF_FAIL + v2N_INVALID_KE_PAYLOAD",
      "return STF_FAIL + v2N_INVALID_KE_PAYLOAD",
      "reset_globals();"
    ],
    "removed_lines": [
      "passert(GLOBALS_ARE_RESET",
      "char fromname[ADDRTOT_BUF]",
      "addrtot(&md->sender, 0, fromname, ADDRTOT_BUF",
      "return v2N_INVALID_KE_PAYLOAD",
      "passert(GLOBALS_ARE_RESET",
      "passert(GLOBALS_ARE_RESET",
      "reset_globals",
      "passert(GLOBALS_ARE_RESET"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 469,
    "id": "CVE-2013-6401",
    "commit_id": "8f80c2d83808150724d31793e6ade92749b1faa4",
    "added_lines": [
      "HASHSEED=1",
      "export HASHSEED"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "hash collisions"
    ]
  },
  {
    "index": 470,
    "id": "CVE-2013-6371",
    "commit_id": "64e36901a0614bf64a19bc3396469c66dcd0b015",
    "added_lines": [
      "#ifndef seed_h",
      "#define seed_h",
      "#ifdef __cplusplus",
      "extern \"C\"",
      "#endif",
      "extern int json_c_get_random_seed",
      "#ifdef __cplusplus",
      "#endif",
      "#endif"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 472,
    "id": "CVE-2013-4160",
    "commit_id": "91c2db7f2559be504211b283bc3a2c631d6f06d9",
    "added_lines": [
      "if (c16->Curves[i] == NULL)",
      "for (j=0; j < i; j++)",
      "_cmsFree(ContextID, c16->Curves[j]",
      "_cmsFree(ContextID, c16->Curves",
      "_cmsFree(ContextID, c16",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 474,
    "id": "CVE-2013-2130",
    "commit_id": "2bd410ee5570cea127233f1133ea22f25174eb28",
    "added_lines": [
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || !pNetwork || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || !pNetwork || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || !pNetwork || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || !pNetwork || spSession->GetUser() != pNetwork->GetUser()))"
    ],
    "removed_lines": [
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || spSession->GetUser() != pNetwork->GetUser()))",
      "if (!spSession->IsAdmin() && (!spSession->GetUser() || spSession->GetUser() != pNetwork->GetUser()))"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 475,
    "id": "CVE-2013-0250",
    "commit_id": "b3f456a8ceefac6e9f2e9acc2ea0c159d412b595",
    "added_lines": [
      "hash_param.data = instance->private_key",
      "hash_param.len = instance->private_key_len"
    ],
    "removed_lines": [
      "hash_param.data = 0",
      "hash_param.len = 0"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly initialize the HMAC key"
    ]
  },
  {
    "index": 476,
    "id": "CVE-2012-6657",
    "commit_id": "3e10986d1d698140747fcfc2761ec9cb64c1d582",
    "added_lines": [
      "if (sk->sk_protocol == IPPROTO_TCP &&",
      "sk->sk_type == SOCK_STREAM"
    ],
    "removed_lines": [
      "if (sk->sk_protocol == IPPROTO_TCP"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that a keepalive action is associated with a stream socket"
    ]
  },
  {
    "index": 477,
    "id": "CVE-2012-6647",
    "commit_id": "6f7b0a2a5c0fb03be7c25bd1745baa50582348ef",
    "added_lines": [
      "if (uaddr == uaddr2",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that calls have two different futex addresses",
      "null pointer dereference"
    ]
  },
  {
    "index": 478,
    "id": "CVE-2012-6638",
    "commit_id": "fdf5af0daf8019cec2396cdef8fb042d80fe71fa",
    "added_lines": [
      "if (th->fin",
      "goto discard"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 482,
    "id": "CVE-2010-5313",
    "commit_id": "fc3a9157d3148ab91039c75423da8ef97be3e105",
    "added_lines": [
      "int r = EMULATE_DONE",
      "if (!is_guest_mode(vcpu))",
      "vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR",
      "vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION",
      "vcpu->run->internal.ndata = 0",
      "r = EMULATE_FAIL",
      "return r"
    ],
    "removed_lines": [
      "vcpu->run->exit_reason = KVM_EXIT_INTERNAL_ERROR",
      "vcpu->run->internal.suberror = KVM_INTERNAL_ERROR_EMULATION",
      "vcpu->run->internal.ndata = 0",
      "return EMULATE_FAIL"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 485,
    "id": "CVE-2015-8543",
    "commit_id": "79462ad02e861803b3840cc782248c7359451cd9",
    "added_lines": [
      "if (protocol < 0 || protocol > SK_PROTOCOL_MAX",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "does not validate protocol identifiers for certain protocol families"
    ]
  },
  {
    "index": 487,
    "id": "CVE-2015-8215",
    "commit_id": "77751427a1ff25b27d47a4c36b12c3c8667855ac",
    "added_lines": [
      "static",
      "int addrconf_sysctl_mtu(struct ctl_table *ctl, int write,",
      "void __user *buffer, size_t *lenp, loff_t *ppos",
      "struct inet6_dev *idev = ctl->extra1",
      "int min_mtu = IPV6_MIN_MTU",
      "struct ctl_table lctl",
      "lctl = *ctl",
      "lctl.extra1 = &min_mtu",
      "lctl.extra2 = idev ? &idev->dev->mtu : NULL",
      "return proc_dointvec_minmax(&lctl, write, buffer, lenp, ppos",
      ".proc_handler\t= addrconf_sysctl_mtu,"
    ],
    "removed_lines": [
      ".proc_handler\t= proc_dointvec,"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not validate attempted changes to the MTU value,"
    ]
  },
  {
    "index": 488,
    "id": "CVE-2015-8104",
    "commit_id": "cbdb967af3d54993f5814f1cee0ed311a055377d",
    "added_lines": [
      "set_exception_intercept(svm, DB_VECTOR",
      "static void update_bp_intercept(struct kvm_vcpu *vcpu",
      ".update_db_bp_intercept = update_bp_intercept,"
    ],
    "removed_lines": [
      "static void update_db_bp_intercept(struct kvm_vcpu *vcpu",
      "clr_exception_intercept(svm, DB_VECTOR",
      "if (svm->nmi_singlestep",
      "set_exception_intercept(svm, DB_VECTOR",
      "if (vcpu->guest_debug &",
      "(KVM_GUESTDBG_SINGLESTEP | KVM_GUESTDBG_USE_HW_BP",
      "set_exception_intercept(svm, DB_VECTOR",
      "update_db_bp_intercept(&svm->vcpu",
      "update_db_bp_intercept(vcpu",
      ".update_db_bp_intercept = update_db_bp_intercept,"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering many #DB (aka Debug) exceptions"
    ]
  },
  {
    "index": 489,
    "id": "CVE-2015-7990",
    "commit_id": "8c7188b23474cca017b3ef354c4a58456f68303a",
    "added_lines": [
      "lock_sock(sk",
      "release_sock(sk",
      "release_sock(sk"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.9,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "null pointer dereference"
    ]
  },
  {
    "index": 492,
    "id": "CVE-2015-7872",
    "commit_id": "ce1fad2740c648a4340f6f6c391a8a83769d2e8c",
    "added_lines": [
      "if (ctx->index_key.type == &key_type_keyring",
      "return ERR_PTR(-EPERM"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 494,
    "id": "CVE-2015-7509",
    "commit_id": "c9b92530a723ac5ef8e352885a1862b18f31b2f5",
    "added_lines": [
      "if (!EXT4_SB(sb)->s_journal",
      "if (!EXT4_SB(inode->i_sb)->s_journal",
      "if (!handle"
    ],
    "removed_lines": [
      "if (!ext4_handle_valid(handle",
      "if (handle && !ext4_handle_valid(handle",
      "if (sbi->s_journal && !handle"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 495,
    "id": "CVE-2015-6937",
    "commit_id": "74e98eb085889b0d2d4908f59f6e00026063014f",
    "added_lines": [
      "if (trans == NULL)",
      "kmem_cache_free(rds_conn_slab, conn",
      "conn = ERR_PTR(-ENODEV",
      "goto out"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 498,
    "id": "CVE-2015-6526",
    "commit_id": "9a5cbce421a283e6aea3c4007f141735bf9da8c3",
    "added_lines": [
      "while (entry->nr < PERF_MAX_STACK_DEPTH)"
    ],
    "removed_lines": [
      "for (;;)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 500,
    "id": "CVE-2015-6252",
    "commit_id": "7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5",
    "added_lines": [
      "d->log_file = eventfp"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 503,
    "id": "CVE-2015-5706",
    "commit_id": "f15133df088ecadd141ea1907f2c96df67c729f0",
    "added_lines": [
      "goto out2",
      "out2:"
    ],
    "removed_lines": [
      "goto out"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 506,
    "id": "CVE-2015-5366",
    "commit_id": "beb39db59d14990e401e235faf66a6b9b31240b0",
    "added_lines": [
      "cond_resched"
    ],
    "removed_lines": [
      "if (noblock",
      "return -EAGAIN"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "recvmsg"
    ]
  },
  {
    "index": 507,
    "id": "CVE-2015-5307",
    "commit_id": "54a20552e1eae07aa240fa370a0293e006b5faed",
    "added_lines": [
      "(1u << NM_VECTOR) | (1u << DB_VECTOR) | (1u << AC_VECTOR",
      "case AC_VECTOR:",
      "kvm_queue_exception_e(vcpu, AC_VECTOR, error_code",
      "return 1"
    ],
    "removed_lines": [
      "(1u << NM_VECTOR) | (1u << DB_VECTOR"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering many #AC (aka Alignment Check) exceptions"
    ]
  },
  {
    "index": 512,
    "id": "CVE-2015-5257",
    "commit_id": "cbb4be652d374f64661137756b8f357a1827d6a4",
    "added_lines": [
      "static int whiteheat_probe(struct usb_serial *serial,",
      "const struct usb_device_id *id",
      ".probe =\t\twhiteheat_probe,",
      "static int whiteheat_probe(struct usb_serial *serial,",
      "const struct usb_device_id *id",
      "struct usb_host_interface *iface_desc",
      "struct usb_endpoint_descriptor *endpoint",
      "size_t num_bulk_in = 0",
      "size_t num_bulk_out = 0",
      "size_t min_num_bulk",
      "unsigned int i",
      "iface_desc = serial->interface->cur_altsetting",
      "for (i = 0; i < iface_desc->desc.bNumEndpoints; i++)",
      "endpoint = &iface_desc->endpoint[i].desc",
      "if (usb_endpoint_is_bulk_in(endpoint",
      "++num_bulk_in",
      "if (usb_endpoint_is_bulk_out(endpoint",
      "++num_bulk_out",
      "min_num_bulk = COMMAND_PORT + 1",
      "if (num_bulk_in < min_num_bulk || num_bulk_out < min_num_bulk",
      "return -ENODEV",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 515,
    "id": "CVE-2015-4700",
    "commit_id": "3f7352bf21f8fd7ba3e2fcef9488756f188e12be",
    "added_lines": [
      "for (pass = 0; pass < 10 || image; pass++)"
    ],
    "removed_lines": [
      "for (pass = 0; pass < 10; pass++)"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "by creating a packet filter and then loading crafted BPF instructions that trigger late convergence by the JIT compiler"
    ]
  },
  {
    "index": 516,
    "id": "CVE-2015-4692",
    "commit_id": "ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009",
    "added_lines": [
      "return kvm_vcpu_has_lapic(vcpu) && vcpu->arch.apic->pending_events"
    ],
    "removed_lines": [
      "return vcpu->arch.apic->pending_events"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference"
    ]
  },
  {
    "index": 518,
    "id": "CVE-2015-4471",
    "commit_id": "18b6a2cc0b87536015bedd4f7763e6b02d5aa4f3",
    "added_lines": [
      "if (bits_left == 0) ENSURE_BITS(16"
    ],
    "removed_lines": [
      "ENSURE_BITS(16",
      "if (bits_left > 16) i_ptr -= 2"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "off-by-one",
      "libmspack",
      "off-by-one error"
    ]
  },
  {
    "index": 522,
    "id": "CVE-2015-4003",
    "commit_id": "04bf464a5dfd9ade0dda918e44366c2c61fce80b",
    "added_lines": [
      "int n",
      "if (!body->unit_size",
      "break",
      "n = (len - sizeof(struct oz_multiple_fixed)+1"
    ],
    "removed_lines": [
      "int n = (len - sizeof(struct oz_multiple_fixed)+1"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 524,
    "id": "CVE-2015-4001",
    "commit_id": "b1bb5b49373b61bf9d2c73a4d30058ba6f069e4c",
    "added_lines": [
      "void oz_hcd_get_desc_cnf(void *hport, u8 req_id, u8 status,",
      "const u8 *desc, u8 length, u16 offset, u16 total_size"
    ],
    "removed_lines": [
      "void oz_hcd_get_desc_cnf(void *hport, u8 req_id, int status,",
      "const u8 *desc, int length, int offset, int total_size"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 9.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "integer signedness error"
    ]
  },
  {
    "index": 527,
    "id": "CVE-2015-3636",
    "commit_id": "a134f083e79fb4c3d0a925691e732c56911b4326",
    "added_lines": [
      "sk_nulls_node_init(&sk->sk_nulls_node"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 528,
    "id": "CVE-2015-3417",
    "commit_id": "e8714f6f93d1a32f4e4655209960afcf4c185214",
    "added_lines": [
      "memset(h->delayed_pic, 0, sizeof(h->delayed_pic"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 531,
    "id": "CVE-2015-3291",
    "commit_id": "810bc075f78ff2c221536eb3008eac6a492dba2d",
    "added_lines": [
      "testb\t$(X86_EFLAGS_DF >> 8), (3*8 + 1)(%rsp",
      "jz\tfirst_nmi",
      "std",
      "movq\t$0, 5*8(%rsp)"
    ],
    "removed_lines": [
      "movq\t$0, 5*8(%rsp"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly determine when nested NMI processing is occurring,"
    ]
  },
  {
    "index": 533,
    "id": "CVE-2015-3212",
    "commit_id": "2d45a02d0166caf2627fe91897c6ffc3b19514c4",
    "added_lines": [
      "spin_lock_bh(&net->sctp.addr_wq_lock",
      "spin_unlock_bh(&net->sctp.addr_wq_lock",
      "spin_lock_bh(&sock_net(sk)->sctp.addr_wq_lock",
      "spin_unlock_bh(&sock_net(sk)->sctp.addr_wq_lock",
      "spin_lock(&sock_net(sk)->sctp.addr_wq_lock",
      "spin_unlock(&sock_net(sk)->sctp.addr_wq_lock",
      "} else",
      "static inline void sctp_copy_descendant(struct sock *sk_to,",
      "const struct sock *sk_from",
      "int ancestor_size = sizeof(struct inet_sock) +",
      "sizeof(struct sctp_sock) -",
      "offsetof(struct sctp_sock, auto_asconf_list",
      "if (sk_from->sk_family == PF_INET6",
      "ancestor_size += sizeof(struct ipv6_pinfo",
      "__inet_sk_copy_descendant(sk_to, sk_from, ancestor_size",
      "sctp_copy_descendant(newsk, oldsk"
    ],
    "removed_lines": [
      "local_bh_disable",
      "local_bh_enable",
      "} else",
      "struct list_head tmplist",
      "if (oldsp->do_auto_asconf)",
      "memcpy(&tmplist, &newsp->auto_asconf_list, sizeof(tmplist",
      "inet_sk_copy_descendant(newsk, oldsk",
      "memcpy(&newsp->auto_asconf_list, &tmplist, sizeof(tmplist",
      "} else",
      "inet_sk_copy_descendant(newsk, oldsk"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 540,
    "id": "CVE-2015-2779",
    "commit_id": "b5e38970ffd55e2dd9f706ce75af9a8d7730b1b8",
    "added_lines": [
      "QString cmd(\"PRIVMSG\"",
      "std::function<QList<QByteArray>(QString &)> cmdGenerator = [&] (QString &splitMsg) -> QList<QByteArray>",
      "return QList<QByteArray>() << net->serverEncode(bufname) << lowLevelQuote(pack(net->serverEncode(ctcpTag), net->userEncode(bufname, splitMsg",
      "net->putCmd(cmd, net->splitMessage(cmd, message, cmdGenerator"
    ],
    "removed_lines": [
      "QList<QByteArray> params",
      "params << net->serverEncode(bufname) << lowLevelQuote(pack(net->serverEncode(ctcpTag), net->userEncode(bufname, message",
      "static const char *splitter = \" .,-!?\"",
      "int maxSplitPos = message.count",
      "int splitPos = maxSplitPos",
      "int overrun = net->userInputHandler()->lastParamOverrun(\"PRIVMSG\", params",
      "if (overrun)",
      "maxSplitPos = message.count() - overrun -2",
      "splitPos = -1",
      "for (const char *splitChar = splitter; *splitChar != 0; splitChar++)",
      "splitPos = qMax(splitPos, message.lastIndexOf(*splitChar, maxSplitPos) + 1); // keep split char on old line",
      "if (splitPos <= 0 || splitPos > maxSplitPos",
      "splitPos = maxSplitPos",
      "params = params.mid(0, 1) <<  lowLevelQuote(pack(net->serverEncode(ctcpTag), net->userEncode(bufname, message.left(splitPos",
      "net->putCmd(\"PRIVMSG\", params",
      "if (splitPos < message.count",
      "query(net, bufname, ctcpTag, message.mid(splitPos"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "recursion",
      "stack consumption"
    ]
  },
  {
    "index": 543,
    "id": "CVE-2015-2696",
    "commit_id": "e04f0283516e80d2f93366e0d479d13c9b5c8c2a",
    "added_lines": [
      "int initiate",
      "int established",
      "iakerb_alloc_context(iakerb_ctx_id_t *pctx, int initiate",
      "ctx->initiate = initiate",
      "ctx->established = 0",
      "iakerb_ctx_id_t iakerb_ctx = (iakerb_ctx_id_t)*context_handle",
      "iakerb_release_context(iakerb_ctx",
      "return GSS_S_COMPLETE",
      "code = iakerb_alloc_context(&ctx, 0",
      "if (major_status == GSS_S_COMPLETE",
      "ctx->established = 1",
      "code = iakerb_alloc_context(&ctx, 1",
      "if (major_status == GSS_S_COMPLETE",
      "ctx->established = 1",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_unwrap(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "gss_buffer_t input_message_buffer,",
      "gss_buffer_t output_message_buffer, int *conf_state,",
      "gss_qop_t *qop_state",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_unwrap(minor_status, ctx->gssc, input_message_buffer,",
      "output_message_buffer, conf_state, qop_state",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_wrap(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "int conf_req_flag, gss_qop_t qop_req,",
      "gss_buffer_t input_message_buffer, int *conf_state,",
      "gss_buffer_t output_message_buffer",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_wrap(minor_status, ctx->gssc, conf_req_flag, qop_req,",
      "input_message_buffer, conf_state,",
      "output_message_buffer",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_process_context_token(OM_uint32 *minor_status,",
      "const gss_ctx_id_t context_handle,",
      "const gss_buffer_t token_buffer",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_DEFECTIVE_TOKEN",
      "return krb5_gss_process_context_token(minor_status, ctx->gssc,",
      "token_buffer",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_context_time(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "OM_uint32 *time_rec",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_context_time(minor_status, ctx->gssc, time_rec",
      "#ifndef LEAN_CLIENT",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_export_sec_context(OM_uint32 *minor_status,",
      "gss_ctx_id_t *context_handle,",
      "gss_buffer_t interprocess_token",
      "OM_uint32 maj",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (!ctx->established",
      "return GSS_S_UNAVAILABLE",
      "maj = krb5_gss_export_sec_context(minor_status, &ctx->gssc,",
      "interprocess_token",
      "if (ctx->gssc == GSS_C_NO_CONTEXT)",
      "iakerb_release_context(ctx",
      "return maj",
      "#endif",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_inquire_context(OM_uint32 *minor_status,",
      "gss_ctx_id_t context_handle, gss_name_t *src_name,",
      "gss_name_t *targ_name, OM_uint32 *lifetime_rec,",
      "gss_OID *mech_type, OM_uint32 *ctx_flags,",
      "int *initiate, int *opened",
      "OM_uint32 ret",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (src_name != NULL",
      "if (targ_name != NULL",
      "if (lifetime_rec != NULL",
      "if (mech_type != NULL",
      "if (ctx_flags != NULL",
      "if (initiate != NULL",
      "if (opened != NULL",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_COMPLETE",
      "ret = krb5_gss_inquire_context(minor_status, ctx->gssc, src_name,",
      "targ_name, lifetime_rec, mech_type,",
      "ctx_flags, initiate, opened",
      "if (!ctx->established)",
      "if (mech_type != NULL",
      "if (ctx_flags != NULL",
      "return ret",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_wrap_size_limit(OM_uint32 *minor_status,",
      "gss_ctx_id_t context_handle, int conf_req_flag,",
      "gss_qop_t qop_req, OM_uint32 req_output_size,",
      "OM_uint32 *max_input_size",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_wrap_size_limit(minor_status, ctx->gssc, conf_req_flag,",
      "qop_req, req_output_size, max_input_size",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_get_mic(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "gss_qop_t qop_req, gss_buffer_t message_buffer,",
      "gss_buffer_t message_token",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_get_mic(minor_status, ctx->gssc, qop_req, message_buffer,",
      "message_token",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_verify_mic(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "gss_buffer_t msg_buffer, gss_buffer_t token_buffer,",
      "gss_qop_t *qop_state",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_verify_mic(minor_status, ctx->gssc, msg_buffer,",
      "token_buffer, qop_state",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_inquire_sec_context_by_oid(OM_uint32 *minor_status,",
      "const gss_ctx_id_t context_handle,",
      "const gss_OID desired_object,",
      "gss_buffer_set_t *data_set",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_UNAVAILABLE",
      "return krb5_gss_inquire_sec_context_by_oid(minor_status, ctx->gssc,",
      "desired_object, data_set",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_set_sec_context_option(OM_uint32 *minor_status,",
      "gss_ctx_id_t *context_handle,",
      "const gss_OID desired_object,",
      "const gss_buffer_t value",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)*context_handle",
      "if (ctx == NULL || ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_UNAVAILABLE",
      "return krb5_gss_set_sec_context_option(minor_status, &ctx->gssc,",
      "desired_object, value",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_wrap_iov(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "int conf_req_flag, gss_qop_t qop_req, int *conf_state,",
      "gss_iov_buffer_desc *iov, int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_wrap_iov(minor_status, ctx->gssc, conf_req_flag, qop_req,",
      "conf_state, iov, iov_count",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_unwrap_iov(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "int *conf_state, gss_qop_t *qop_state,",
      "gss_iov_buffer_desc *iov, int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_unwrap_iov(minor_status, ctx->gssc, conf_state, qop_state,",
      "iov, iov_count",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_wrap_iov_length(OM_uint32 *minor_status,",
      "gss_ctx_id_t context_handle, int conf_req_flag,",
      "gss_qop_t qop_req, int *conf_state,",
      "gss_iov_buffer_desc *iov, int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_wrap_iov_length(minor_status, ctx->gssc, conf_req_flag,",
      "qop_req, conf_state, iov, iov_count",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_pseudo_random(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "int prf_key, const gss_buffer_t prf_in,",
      "ssize_t desired_output_len, gss_buffer_t prf_out",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_pseudo_random(minor_status, ctx->gssc, prf_key, prf_in,",
      "desired_output_len, prf_out",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_get_mic_iov(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "gss_qop_t qop_req, gss_iov_buffer_desc *iov,",
      "int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_get_mic_iov(minor_status, ctx->gssc, qop_req, iov,",
      "iov_count",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_verify_mic_iov(OM_uint32 *minor_status, gss_ctx_id_t context_handle,",
      "gss_qop_t *qop_state, gss_iov_buffer_desc *iov,",
      "int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_verify_mic_iov(minor_status, ctx->gssc, qop_state, iov,",
      "iov_count",
      "OM_uint32 KRB5_CALLCONV",
      "iakerb_gss_get_mic_iov_length(OM_uint32 *minor_status,",
      "gss_ctx_id_t context_handle, gss_qop_t qop_req,",
      "gss_iov_buffer_desc *iov, int iov_count",
      "iakerb_ctx_id_t ctx = (iakerb_ctx_id_t)context_handle",
      "if (ctx->gssc == GSS_C_NO_CONTEXT",
      "return GSS_S_NO_CONTEXT",
      "return krb5_gss_get_mic_iov_length(minor_status, ctx->gssc, qop_req, iov,",
      "iov_count"
    ],
    "removed_lines": [
      "iakerb_alloc_context(iakerb_ctx_id_t *pctx",
      "OM_uint32 major_status = GSS_S_COMPLETE",
      "if (*context_handle != GSS_C_NO_CONTEXT)",
      "iakerb_ctx_id_t iakerb_ctx = (iakerb_ctx_id_t)*context_handle",
      "if (iakerb_ctx->magic == KG_IAKERB_CONTEXT)",
      "iakerb_release_context(iakerb_ctx",
      "} else",
      "assert(iakerb_ctx->magic == KG_CONTEXT",
      "major_status = krb5_gss_delete_sec_context(minor_status,",
      "context_handle,",
      "output_token",
      "return major_status",
      "code = iakerb_alloc_context(&ctx",
      "if (major_status == GSS_S_COMPLETE)",
      "ctx->gssc = NULL",
      "iakerb_release_context(ctx",
      "code = iakerb_alloc_context(&ctx",
      "if (major_status == GSS_S_COMPLETE)",
      "ctx->gssc = GSS_C_NO_CONTEXT",
      "iakerb_release_context(ctx"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer"
    ]
  },
  {
    "index": 544,
    "id": "CVE-2015-2695",
    "commit_id": "b51b33f2bc5d1497ddf5bd107f791c101695000d",
    "added_lines": [
      "static spnego_gss_ctx_id_t create_spnego_ctx(int",
      "create_spnego_ctx(int initiate",
      "spnego_ctx->opened = 0",
      "spnego_ctx->initiate = initiate",
      "sc = create_spnego_ctx(1",
      "spnego_ctx->opened = 1",
      "sc = create_spnego_ctx(0",
      "sc = create_spnego_ctx(0",
      "sc->opened = 1",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (!sc->opened",
      "return (GSS_S_DEFECTIVE_TOKEN",
      "sc->ctx_handle,",
      "(void) gss_delete_sec_context(minor_status, &(*ctx)->ctx_handle,",
      "output_token",
      "(void) release_spnego_ctx(ctx",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = *(spnego_gss_ctx_id_t *)context_handle",
      "if (!sc->opened",
      "return GSS_S_UNAVAILABLE",
      "&sc->ctx_handle,",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT)",
      "release_spnego_ctx(&sc",
      "return GSS_S_UNAVAILABLE",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (src_name != NULL",
      "if (targ_name != NULL",
      "if (lifetime_rec != NULL",
      "if (mech_type != NULL",
      "if (ctx_flags != NULL",
      "if (locally_initiated != NULL",
      "if (opened != NULL",
      "if (sc->ctx_handle != GSS_C_NO_CONTEXT)",
      "ret = gss_inquire_context(minor_status, sc->ctx_handle,",
      "src_name, targ_name, lifetime_rec,",
      "mech_type, ctx_flags, NULL, NULL",
      "if (!sc->opened)",
      "if (mech_type != NULL",
      "if (ctx_flags != NULL)",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_UNAVAILABLE",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)*context_handle",
      "if (sc == NULL || sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_UNAVAILABLE",
      "&sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_UNAVAILABLE",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "sc->ctx_handle,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "return gss_get_mic_iov(minor_status, sc->ctx_handle, qop_req, iov,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "return gss_verify_mic_iov(minor_status, sc->ctx_handle, qop_state, iov,",
      "spnego_gss_ctx_id_t sc = (spnego_gss_ctx_id_t)context_handle",
      "if (sc->ctx_handle == GSS_C_NO_CONTEXT",
      "return (GSS_S_NO_CONTEXT",
      "return gss_get_mic_iov_length(minor_status, sc->ctx_handle, qop_req, iov,"
    ],
    "removed_lines": [
      "static spnego_gss_ctx_id_t create_spnego_ctx(void",
      "create_spnego_ctx(void",
      "sc = create_spnego_ctx",
      "release_spnego_ctx(&spnego_ctx",
      "sc = create_spnego_ctx",
      "sc = create_spnego_ctx",
      "release_spnego_ctx(&sc",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "if ((*ctx)->magic_num == SPNEGO_MAGIC_ID)",
      "(void) gss_delete_sec_context(minor_status,",
      "&(*ctx)->ctx_handle,",
      "output_token",
      "(void) release_spnego_ctx(ctx",
      "} else",
      "ret = gss_delete_sec_context(minor_status,",
      "context_handle,",
      "output_token",
      "context_handle,",
      "context_handle,",
      "OM_uint32 ret",
      "ret = gss_import_sec_context(minor_status,",
      "interprocess_token,",
      "context_handle",
      "return (ret",
      "ret = gss_inquire_context(minor_status,",
      "context_handle,",
      "src_name,",
      "targ_name,",
      "lifetime_rec,",
      "mech_type,",
      "ctx_flags,",
      "locally_initiated,",
      "opened",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context_handle,",
      "context,",
      "return gss_get_mic_iov(minor_status, context_handle, qop_req, iov,",
      "return gss_verify_mic_iov(minor_status, context_handle, qop_state, iov,",
      "return gss_get_mic_iov_length(minor_status, context_handle, qop_req, iov,"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer"
    ]
  },
  {
    "index": 548,
    "id": "CVE-2015-2150",
    "commit_id": "af6fc858a35b90e89ea7a7ee58e66628c55c776b",
    "added_lines": [
      "struct pci_cmd_info",
      "u16 val",
      "#define PCI_COMMAND_GUEST (PCI_COMMAND_MASTER|PCI_COMMAND_SPECIAL| \\",
      "PCI_COMMAND_INVALIDATE|PCI_COMMAND_VGA_PALETTE| \\",
      "PCI_COMMAND_WAIT|PCI_COMMAND_FAST_BACK",
      "static void *command_init(struct pci_dev *dev, int offset",
      "struct pci_cmd_info *cmd = kmalloc(sizeof(*cmd), GFP_KERNEL",
      "int err",
      "if (!cmd",
      "return ERR_PTR(-ENOMEM",
      "err = pci_read_config_word(dev, PCI_COMMAND, &cmd->val",
      "if (err)",
      "kfree(cmd",
      "return ERR_PTR(err",
      "return cmd",
      "static int command_read(struct pci_dev *dev, int offset, u16 *value, void *data",
      "int ret = pci_read_config_word(dev, offset, value",
      "const struct pci_cmd_info *cmd = data",
      "u16 val",
      "struct pci_cmd_info *cmd = data",
      "cmd->val = value",
      "if (!permissive && (!dev_data || !dev_data->permissive",
      "return 0",
      "err = pci_read_config_word(dev, offset, &val",
      "if (err || val == value",
      "return err",
      "value &= PCI_COMMAND_GUEST",
      "value |= val & ~PCI_COMMAND_GUEST",
      ".init      = command_init,",
      ".release   = bar_release,"
    ],
    "removed_lines": [
      "static int command_read(struct pci_dev *dev, int offset, u16 *value, void *data",
      "int i",
      "int ret",
      "ret = xen_pcibk_read_config_word(dev, offset, value, data",
      "if (!pci_is_enabled(dev",
      "return ret",
      "for (i = 0; i < PCI_ROM_RESOURCE; i++)",
      "if (dev->resource[i].flags & IORESOURCE_IO",
      "if (dev->resource[i].flags & IORESOURCE_MEM"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "do not properly restrict access to PCI command registers"
    ]
  },
  {
    "index": 553,
    "id": "CVE-2015-1805",
    "commit_id": "f0d1bec9d58d4c038d0ac958c9af82be6eb18045",
    "added_lines": [
      "size_t copy_page_from_iter(struct page *page, size_t offset, size_t bytes,",
      "struct iov_iter *i",
      "size_t skip, copy, left, wanted",
      "const struct iovec *iov",
      "char __user *buf",
      "void *kaddr, *to",
      "if (unlikely(bytes > i->count",
      "bytes = i->count",
      "if (unlikely(!bytes",
      "return 0",
      "wanted = bytes",
      "iov = i->iov",
      "skip = i->iov_offset",
      "buf = iov->iov_base + skip",
      "copy = min(bytes, iov->iov_len - skip",
      "if (!fault_in_pages_readable(buf, copy))",
      "kaddr = kmap_atomic(page",
      "to = kaddr + offset",
      "left = __copy_from_user_inatomic(to, buf, copy",
      "copy -= left",
      "skip += copy",
      "to += copy",
      "bytes -= copy",
      "while (unlikely(!left && bytes))",
      "iov++",
      "buf = iov->iov_base",
      "copy = min(bytes, iov->iov_len",
      "left = __copy_from_user_inatomic(to, buf, copy",
      "copy -= left",
      "skip = copy",
      "to += copy",
      "bytes -= copy",
      "if (likely(!bytes))",
      "kunmap_atomic(kaddr",
      "goto done",
      "offset = to - kaddr",
      "buf += copy",
      "kunmap_atomic(kaddr",
      "copy = min(bytes, iov->iov_len - skip",
      "kaddr = kmap(page",
      "to = kaddr + offset",
      "left = __copy_from_user(to, buf, copy",
      "copy -= left",
      "skip += copy",
      "to += copy",
      "bytes -= copy",
      "while (unlikely(!left && bytes))",
      "iov++",
      "buf = iov->iov_base",
      "copy = min(bytes, iov->iov_len",
      "left = __copy_from_user(to, buf, copy",
      "copy -= left",
      "skip = copy",
      "to += copy",
      "bytes -= copy",
      "kunmap(page",
      "done:",
      "i->count -= wanted - bytes",
      "i->nr_segs -= iov - i->iov",
      "i->iov = iov",
      "i->iov_offset = skip",
      "return wanted - bytes",
      "EXPORT_SYMBOL(copy_page_from_iter"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "do not properly consider the side effects of failed __copy_to_user_inatomic and __copy_from_user_inatomic calls"
    ]
  },
  {
    "index": 554,
    "id": "CVE-2015-1792",
    "commit_id": "cd30f03ac5bf2962f44bd02ae8d88245dff2f12c",
    "added_lines": [
      "static BIO *cms_get_text_bio(BIO *out, unsigned int flags",
      "BIO *rbio",
      "rbio = BIO_new(BIO_s_null",
      "rbio = BIO_new(BIO_s_mem",
      "BIO_set_mem_eof_return(rbio, 0",
      "rbio = out",
      "return rbio",
      "static int cms_copy_content(BIO *out, BIO *in, unsigned int flags",
      "unsigned char buf[4096]",
      "int r = 0, i",
      "BIO *tmpout",
      "tmpout = cms_get_text_bio(out, flags",
      "while (f && f != upto",
      "BIO *cmsbio = NULL, *tmpin = NULL, *tmpout = NULL",
      "if (!(flags & SMIME_BINARY) && dcont",
      "tmpout = cms_get_text_bio(out, flags",
      "if(!tmpout",
      "CMSerr(CMS_F_CMS_VERIFY,ERR_R_MALLOC_FAILURE",
      "goto err",
      "cmsbio = CMS_dataInit(cms, tmpout",
      "if (!cmsbio",
      "goto err",
      "SMIME_crlf_copy(dcont, cmsbio, flags & ~SMIME_TEXT",
      "if(flags & CMS_TEXT",
      "if (!SMIME_text(tmpout, out",
      "CMSerr(CMS_F_CMS_VERIFY,CMS_R_SMIME_TEXT_ERROR",
      "goto err",
      "else",
      "cmsbio=CMS_dataInit(cms, tmpin",
      "if (!cmsbio",
      "goto err",
      "if (!cms_copy_content(out, cmsbio, flags",
      "goto err",
      "if (!(flags & SMIME_BINARY) && dcont",
      "do_free_upto(cmsbio, tmpout",
      "if (tmpin != dcont",
      "BIO_free(tmpin",
      "if (dcont && (tmpin == dcont",
      "do_free_upto(cmsbio, dcont",
      "else",
      "BIO_free_all(cmsbio",
      "if (tmpout && out != tmpout",
      "BIO_free_all(tmpout"
    ],
    "removed_lines": [
      "static int cms_copy_content(BIO *out, BIO *in, unsigned int flags",
      "unsigned char buf[4096]",
      "int r = 0, i",
      "BIO *tmpout = NULL",
      "tmpout = BIO_new(BIO_s_null",
      "tmpout = BIO_new(BIO_s_mem",
      "BIO_set_mem_eof_return(tmpout, 0",
      "tmpout = out",
      "while (f != upto",
      "BIO *cmsbio = NULL, *tmpin = NULL",
      "cmsbio=CMS_dataInit(cms, tmpin",
      "if (!cmsbio",
      "goto err",
      "if (!cms_copy_content(out, cmsbio, flags",
      "goto err",
      "if (dcont && (tmpin == dcont",
      "do_free_upto(cmsbio, dcont",
      "BIO_free_all(cmsbio"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 555,
    "id": "CVE-2015-1791",
    "commit_id": "98ece4eebfb6cd45cc8d550c6ac0022965071afc",
    "added_lines": [
      "SSL_SESSION *ssl_session_dup(SSL_SESSION *src, int ticket",
      "SSL_SESSION *dest",
      "dest = OPENSSL_malloc(sizeof(*src",
      "if (dest == NULL)",
      "goto err",
      "memcpy(dest, src, sizeof(*dest",
      "#ifndef OPENSSL_NO_PSK",
      "if (src->psk_identity_hint)",
      "dest->psk_identity_hint = BUF_strdup(src->psk_identity_hint",
      "if (dest->psk_identity_hint == NULL)",
      "goto err",
      "} else",
      "dest->psk_identity_hint = NULL",
      "if (src->psk_identity)",
      "dest->psk_identity = BUF_strdup(src->psk_identity",
      "if (dest->psk_identity == NULL)",
      "goto err",
      "} else",
      "dest->psk_identity = NULL",
      "#endif",
      "if (src->sess_cert != NULL",
      "CRYPTO_add(&src->sess_cert->references, 1, CRYPTO_LOCK_SSL_SESS_CERT",
      "if (src->peer != NULL",
      "CRYPTO_add(&src->peer->references, 1, CRYPTO_LOCK_X509",
      "dest->references = 1",
      "if(src->ciphers != NULL)",
      "dest->ciphers = sk_SSL_CIPHER_dup(src->ciphers",
      "if (dest->ciphers == NULL",
      "goto err",
      "} else",
      "dest->ciphers = NULL",
      "if (!CRYPTO_dup_ex_data(CRYPTO_EX_INDEX_SSL_SESSION,",
      "&dest->ex_data, &src->ex_data))",
      "goto err",
      "dest->prev = NULL",
      "dest->next = NULL",
      "#ifndef OPENSSL_NO_TLSEXT",
      "if (src->tlsext_hostname)",
      "dest->tlsext_hostname = BUF_strdup(src->tlsext_hostname",
      "if (dest->tlsext_hostname == NULL)",
      "goto err",
      "} else",
      "dest->tlsext_hostname = NULL",
      "# ifndef OPENSSL_NO_EC",
      "if (src->tlsext_ecpointformatlist)",
      "dest->tlsext_ecpointformatlist =",
      "BUF_memdup(src->tlsext_ecpointformatlist,",
      "src->tlsext_ecpointformatlist_length",
      "if (dest->tlsext_ecpointformatlist == NULL",
      "goto err",
      "dest->tlsext_ecpointformatlist_length =",
      "src->tlsext_ecpointformatlist_length",
      "if (src->tlsext_ellipticcurvelist)",
      "dest->tlsext_ellipticcurvelist =",
      "BUF_memdup(src->tlsext_ellipticcurvelist,",
      "src->tlsext_ellipticcurvelist_length",
      "if (dest->tlsext_ellipticcurvelist == NULL",
      "goto err",
      "dest->tlsext_ellipticcurvelist_length =",
      "src->tlsext_ellipticcurvelist_length",
      "# endif",
      "#endif",
      "if (ticket != 0)",
      "dest->tlsext_tick_lifetime_hint = src->tlsext_tick_lifetime_hint",
      "dest->tlsext_ticklen = src->tlsext_ticklen",
      "if((dest->tlsext_tick = OPENSSL_malloc(src->tlsext_ticklen)) == NULL)",
      "goto err",
      "#ifndef OPENSSL_NO_SRP",
      "dest->srp_username = NULL",
      "if (src->srp_username)",
      "dest->srp_username = BUF_strdup(src->srp_username",
      "if (dest->srp_username == NULL)",
      "goto err",
      "} else",
      "dest->srp_username = NULL",
      "#endif",
      "return dest",
      "err:",
      "SSLerr(SSL_F_SSL_SESSION_DUP, ERR_R_MALLOC_FAILURE",
      "SSL_SESSION_free(dest",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free",
      "race condition"
    ]
  },
  {
    "index": 556,
    "id": "CVE-2015-1790",
    "commit_id": "59302b600e8d5b77ef144e447bb046fd7ab72686",
    "added_lines": [
      "if (data_body == NULL && in_bio == NULL)",
      "PKCS7err(PKCS7_F_PKCS7_DATADECODE, PKCS7_R_NO_CONTENT",
      "goto err",
      "if (in_bio != NULL)"
    ],
    "removed_lines": [
      "if (PKCS7_is_detached(p7) || (in_bio != NULL))"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 558,
    "id": "CVE-2015-1788",
    "commit_id": "4924b37ee01f71ae19c94a8934b80eeb2f677932",
    "added_lines": [
      "int i",
      "int ubits = BN_num_bits(u",
      "int vbits = BN_num_bits(v);",
      "int top = p->top",
      "if (ubits <= BN_BITS2)",
      "if (udp[0] == 0)",
      "goto err",
      "if (udp[0] == 1",
      "break"
    ],
    "removed_lines": [
      "int i, ubits = BN_num_bits(u), vbits = BN_num_bits(v), /* v is copy",
      "top = p->top",
      "if (ubits <= BN_BITS2 && udp[0] == 1",
      "break"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 560,
    "id": "CVE-2015-1465",
    "commit_id": "df4d92549f23e1c037e83323aff58a21b3de7fe0",
    "added_lines": [
      "skb->protocol == htons(ETH_P_IP) &&",
      "inet_addr_onlink(out_dev, saddr, FIB_RES_GW(*res",
      "IPCB(skb)->flags |= IPSKB_DOREDIRECT",
      "if (IPCB(skb)->flags & IPSKB_DOREDIRECT",
      "r->rtm_flags |= RTCF_DOREDIRECT"
    ],
    "removed_lines": [
      "inet_addr_onlink(out_dev, saddr, FIB_RES_GW(*res))))",
      "flags |= RTCF_DOREDIRECT",
      "do_cache = false"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly consider"
    ]
  },
  {
    "index": 561,
    "id": "CVE-2015-1421",
    "commit_id": "600ddd6825543962fb807884169e57b580dba208",
    "added_lines": [],
    "removed_lines": [
      "sctp_auth_key_put(asoc->asoc_shared_key"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 572,
    "id": "CVE-2015-0275",
    "commit_id": "0f2af21aae11972fa924374ddcf52e88347cf5a8",
    "added_lines": [
      "flags = EXT4_GET_BLOCKS_CREATE_UNWRIT_EXT",
      "if (mode & FALLOC_FL_KEEP_SIZE",
      "flags |= EXT4_GET_BLOCKS_KEEP_SIZE",
      "if (partial_begin || partial_end)",
      "ret = ext4_alloc_file_blocks(file,",
      "round_down(offset, 1 << blkbits) >> blkbits,",
      "(round_up((offset + len), 1 << blkbits) -",
      "round_down(offset, 1 << blkbits)) >> blkbits,",
      "new_size, flags, mode",
      "if (ret",
      "goto out_mutex",
      "flags |= (EXT4_GET_BLOCKS_CONVERT_UNWRITTEN |",
      "EXT4_EX_NOCACHE"
    ],
    "removed_lines": [
      "flags = EXT4_GET_BLOCKS_CREATE_UNWRIT_EXT |",
      "EXT4_GET_BLOCKS_CONVERT_UNWRITTEN |",
      "EXT4_EX_NOCACHE",
      "if (mode & FALLOC_FL_KEEP_SIZE",
      "flags |= EXT4_GET_BLOCKS_KEEP_SIZE",
      "if (partial_end",
      "max_blocks += 1"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 573,
    "id": "CVE-2015-0274",
    "commit_id": "8275cdd0e7ac550dcce2b3ef6d2fb3b808c1ae59",
    "added_lines": [
      "int\t\trmtvaluelen;",
      "int\t\trmtvaluelen2;"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "improperly uses an old size value during remote attribute replacement"
    ]
  },
  {
    "index": 574,
    "id": "CVE-2015-0253",
    "commit_id": "6a974059190b8a0c7e499f4ab12fe108127099cb",
    "added_lines": [
      "r->proto_num = HTTP_VERSION(1,0",
      "r->protocol  = apr_pstrdup(r->pool, \"HTTP/1.0\""
    ],
    "removed_lines": [
      "r->proto_num = HTTP_VERSION(1,0",
      "r->protocol  = apr_pstrdup(r->pool, \"HTTP/1.0\""
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 575,
    "id": "CVE-2015-0239",
    "commit_id": "f3747379accba8e95d70cec0eae0582c8c182050",
    "added_lines": [
      "if ((ctxt->mode != X86EMUL_MODE_PROT64) && (efer & EFER_LMA",
      "if ((msr_data & 0xfffc) == 0x0",
      "return emulate_gp(ctxt, 0",
      "cs_sel = (u16)msr_data & ~SELECTOR_RPL_MASK",
      "if (efer & EFER_LMA)",
      "ctxt->_eip = (efer & EFER_LMA) ? msr_data : (u32)msr_data",
      "(u32)msr_data"
    ],
    "removed_lines": [
      "if ((ctxt->mode == X86EMUL_MODE_PROT32) && (efer & EFER_LMA",
      "switch (ctxt->mode)",
      "case X86EMUL_MODE_PROT32:",
      "if ((msr_data & 0xfffc) == 0x0",
      "return emulate_gp(ctxt, 0",
      "break",
      "case X86EMUL_MODE_PROT64:",
      "if (msr_data == 0x0",
      "return emulate_gp(ctxt, 0",
      "break",
      "default:",
      "break",
      "cs_sel = (u16)msr_data",
      "cs_sel &= ~SELECTOR_RPL_MASK",
      "ss_sel &= ~SELECTOR_RPL_MASK",
      "if (ctxt->mode == X86EMUL_MODE_PROT64 || (efer & EFER_LMA))",
      "ctxt->_eip = msr_data"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "triggering use of a 16-bit code segment for emulation of a SYSENTER instruction"
    ]
  },
  {
    "index": 577,
    "id": "CVE-2015-0228",
    "commit_id": "643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef",
    "added_lines": [
      "int do_read = 1",
      "while (do_read)",
      "do_read = 0",
      "do_read = 1"
    ],
    "removed_lines": [
      "lua_websocket_read(L);"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function"
    ]
  },
  {
    "index": 581,
    "id": "CVE-2014-9756",
    "commit_id": "725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6",
    "added_lines": [
      "if (bytes == 0 || items == 0",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error",
      "unspecified vectors"
    ]
  },
  {
    "index": 583,
    "id": "CVE-2014-9730",
    "commit_id": "e237ec37ec154564f8690c5bd1795339955eeef9",
    "added_lines": [
      "elen += sizeof(struct pathComponent",
      "if (pc->lengthComponentIdent > 0)",
      "elen += pc->lengthComponentIdent",
      "elen += pc->lengthComponentIdent",
      "if (elen > fromlen",
      "return -EIO"
    ],
    "removed_lines": [
      "if (pc->lengthComponentIdent > 0",
      "elen += sizeof(struct pathComponent) + pc->lengthComponentIdent"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "relies on component lengths that are unused"
    ]
  },
  {
    "index": 584,
    "id": "CVE-2014-9729",
    "commit_id": "e159332b9af4b04d882dbcfe1bb0117f0a6d4b58",
    "added_lines": [
      "if (iinfo->i_alloc_type == ICBTAG_FLAG_AD_IN_ICB)",
      "if (iinfo->i_lenAlloc != inode->i_size",
      "goto out",
      "if (inode->i_size > inode->i_sb->s_blocksize -",
      "udf_file_entry_alloc_offset(inode",
      "goto out"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not ensure a certain data-structure size consistency"
    ]
  },
  {
    "index": 587,
    "id": "CVE-2014-9715",
    "commit_id": "223b02d923ecd7c84cf9780bb3686f455d279279",
    "added_lines": [
      "u16 offset[NF_CT_EXT_NUM]",
      "u16 len"
    ],
    "removed_lines": [
      "u8 offset[NF_CT_EXT_NUM]",
      "u8 len"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 593,
    "id": "CVE-2014-9653",
    "commit_id": "445c8fb0ebff85195be94cd9f7e1df89cade5c7f",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.114 2014/12/11 14:19:36 christos Exp $\"",
      "if (pread(fd, xph_addr, xph_sizeof, off) < (ssize_t)xph_sizeof)",
      "ssize_t namesize",
      "if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) < (ssize_t)xsh_sizeof)",
      "if ((namesize = pread(fd, name, sizeof(name) - 1, name_off + xsh_name)) == -1)",
      "name[namesize] = '\\0'",
      "if (pread(fd, xsh_addr, xsh_sizeof, off) < (ssize_t)xsh_sizeof)",
      "if (pread(fd, nbuf, xsh_size, xsh_offset) < (ssize_t)xsh_size)",
      "if (pread(fd, xph_addr, xph_sizeof, off) < (ssize_t)xph_sizeof)"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.113 2014/12/11 14:10:53 christos Exp $\"",
      "if (pread(fd, xph_addr, xph_sizeof, off) == -1)",
      "if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) == -1)",
      "if (pread(fd, name, sizeof(name), name_off + xsh_name) == -1)",
      "name[sizeof(name) - 1] = '\\0'",
      "if (pread(fd, xsh_addr, xsh_sizeof, off) == -1)",
      "if (pread(fd, nbuf, xsh_size, xsh_offset) == -1)",
      "if (pread(fd, xph_addr, xph_sizeof, off) == -1)"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "uninitialized memory"
    ]
  },
  {
    "index": 596,
    "id": "CVE-2014-9621",
    "commit_id": "65437cee25199dbd385fb35901bc0011e164276c",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.116 2014/12/16 23:18:40 christos Exp $\"",
      "if (descsz > 100",
      "descsz = 100",
      "if (file_printf(ms, \", compiled for: %.*s\",",
      "(int)descsz, (const char *)&nbuf[doff]) == -1"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.115 2014/12/16 20:53:05 christos Exp $\"",
      "if (file_printf(ms, \", compiled for: %.*s\", (int)descsz,",
      "(const char *)&nbuf[doff]) == -1"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 597,
    "id": "CVE-2014-9620",
    "commit_id": "ce90e05774dd77d86cfc8dfa6da57b32816841c4",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.115 2014/12/16 20:53:05 christos Exp $\"",
      "off_t, int *, uint16_t *",
      "off_t, int, int *, uint16_t *",
      "off_t, int, int, int *, uint16_t *",
      "int, size_t, int *, uint16_t *",
      "if (file_printf(ms, \", too many %s (%u)\", name, num",
      "#define FLAGS_DID_CORE\t\t\t0x001",
      "#define FLAGS_DID_OS_NOTE\t\t0x002",
      "#define FLAGS_DID_BUILD_ID\t\t0x004",
      "#define FLAGS_DID_CORE_STYLE\t\t0x008",
      "#define FLAGS_DID_NETBSD_PAX\t\t0x010",
      "#define FLAGS_DID_NETBSD_MARCH\t\t0x020",
      "#define FLAGS_DID_NETBSD_CMODEL\t\t0x040",
      "#define FLAGS_DID_NETBSD_UNKNOWN\t0x080",
      "#define FLAGS_IS_CORE\t\t\t0x100",
      "int num, size_t size, off_t fsize, int *flags, uint16_t *notecount",
      "clazz, swap, 4, flags, notecount",
      "private int",
      "do_bid_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,",
      "int swap __attribute__((__unused__)), uint32_t namesz, uint32_t descsz,",
      "size_t noff, size_t doff, int *flags",
      "if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
      "type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20))",
      "uint8_t desc[20]",
      "uint32_t i",
      "if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :",
      "\"sha1\") == -1",
      "return 1",
      "(void)memcpy(desc, &nbuf[doff], descsz",
      "for (i = 0; i < descsz; i++",
      "if (file_printf(ms, \"%02x\", desc[i]) == -1",
      "return 1",
      "return 1",
      "return 0",
      "private int",
      "do_os_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,",
      "int swap, uint32_t namesz, uint32_t descsz,",
      "size_t noff, size_t doff, int *flags",
      "type == NT_GNU_VERSION && descsz == 2)",
      "return 1",
      "type == NT_GNU_VERSION && descsz == 16)",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "return 1",
      "if (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0)",
      "if (type == NT_NETBSD_VERSION && descsz == 4)",
      "do_note_netbsd_version(ms, swap, &nbuf[doff]",
      "return 1",
      "if (namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0)",
      "if (type == NT_FREEBSD_VERSION && descsz == 4)",
      "do_note_freebsd_version(ms, swap, &nbuf[doff]",
      "return 1",
      "if (namesz == 8 && strcmp((char *)&nbuf[noff], \"OpenBSD\") == 0 &&",
      "type == NT_OPENBSD_VERSION && descsz == 4)",
      "if (file_printf(ms, \", for OpenBSD\") == -1",
      "return 1",
      "return 1",
      "if (namesz == 10 && strcmp((char *)&nbuf[noff], \"DragonFly\") == 0 &&",
      "type == NT_DRAGONFLY_VERSION && descsz == 4)",
      "uint32_t desc",
      "if (file_printf(ms, \", for DragonFly\") == -1",
      "return 1",
      "(void)memcpy(&desc, &nbuf[doff], sizeof(desc",
      "desc = elf_getu32(swap, desc",
      "if (file_printf(ms, \" %d.%d.%d\", desc / 100000,",
      "desc / 10000 % 10, desc % 10000) == -1",
      "return 1",
      "return 1",
      "return 0",
      "private int",
      "do_pax_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,",
      "int swap, uint32_t namesz, uint32_t descsz,",
      "size_t noff, size_t doff, int *flags",
      "type == NT_NETBSD_PAX && descsz == 4)",
      "return 1",
      "return 1",
      "return 1",
      "return 0",
      "private int",
      "do_core_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,",
      "int swap, uint32_t namesz, uint32_t descsz,",
      "size_t noff, size_t doff, int *flags, size_t size, int clazz",
      "#ifdef ELFCORE",
      "int os_style = -1",
      "return 1",
      "if (type == NT_NETBSD_CORE_PROCINFO)",
      "char sbuf[512]",
      "return 1",
      "return 1",
      "return 1",
      "if (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE)",
      "for (k = i + 1 ; k < NOFFSETS; k++)",
      "return 1",
      "return 1",
      "return 0",
      "private size_t",
      "donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,",
      "int clazz, int swap, size_t align, int *flags, uint16_t *notecount",
      "Elf32_Nhdr nh32",
      "Elf64_Nhdr nh64",
      "size_t noff, doff",
      "uint32_t namesz, descsz",
      "unsigned char *nbuf = CAST(unsigned char *, vbuf",
      "if (*notecount == 0",
      "return 0",
      "--*notecount",
      "if (xnh_sizeof + offset > size)",
      "return xnh_sizeof + offset",
      "(void)memcpy(xnh_addr, &nbuf[offset], xnh_sizeof",
      "offset += xnh_sizeof",
      "namesz = xnh_namesz",
      "descsz = xnh_descsz",
      "if ((namesz == 0) && (descsz == 0))",
      "return (offset >= size) ? offset : size",
      "if (namesz & 0x80000000)",
      "(void)file_printf(ms, \", bad note name size 0x%lx\",",
      "(unsigned long)namesz",
      "return 0",
      "if (descsz & 0x80000000)",
      "(void)file_printf(ms, \", bad note description size 0x%lx\",",
      "(unsigned long)descsz",
      "return 0",
      "noff = offset",
      "doff = ELF_ALIGN(offset + namesz",
      "if (offset + namesz > size)",
      "return doff",
      "offset = ELF_ALIGN(doff + descsz",
      "if (doff + descsz > size)",
      "return (offset >= size) ? offset : size",
      "if ((*flags & FLAGS_DID_OS_NOTE) == 0)",
      "if (do_os_note(ms, nbuf, xnh_type, swap,",
      "namesz, descsz, noff, doff, flags",
      "return size",
      "if ((*flags & FLAGS_DID_BUILD_ID) == 0)",
      "if (do_bid_note(ms, nbuf, xnh_type, swap,",
      "namesz, descsz, noff, doff, flags",
      "return size",
      "if ((*flags & FLAGS_DID_NETBSD_PAX) == 0)",
      "if (do_pax_note(ms, nbuf, xnh_type, swap,",
      "namesz, descsz, noff, doff, flags",
      "return size",
      "if ((*flags & FLAGS_DID_CORE) == 0)",
      "if (do_core_note(ms, nbuf, xnh_type, swap,",
      "namesz, descsz, noff, doff, flags, size, clazz",
      "return size",
      "if (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0)",
      "switch (xnh_type)",
      "case NT_NETBSD_VERSION:",
      "return size",
      "case NT_NETBSD_MARCH:",
      "if (*flags & FLAGS_DID_NETBSD_MARCH",
      "return size",
      "if (file_printf(ms, \", compiled for: %.*s\", (int)descsz,",
      "(const char *)&nbuf[doff]) == -1",
      "return size",
      "break",
      "case NT_NETBSD_CMODEL:",
      "if (*flags & FLAGS_DID_NETBSD_CMODEL",
      "return size",
      "if (file_printf(ms, \", compiler model: %.*s\",",
      "(int)descsz, (const char *)&nbuf[doff]) == -1",
      "return size",
      "break",
      "default:",
      "if (*flags & FLAGS_DID_NETBSD_UNKNOWN",
      "return size",
      "if (file_printf(ms, \", note=%u\", xnh_type) == -1",
      "return size",
      "break",
      "return size",
      "size_t size, off_t fsize, int mach, int strtab, int *flags,",
      "uint16_t *notecount",
      "xsh_size, clazz, swap, 4, flags, notecount",
      "int num, size_t size, off_t fsize, int sh_num, int *flags,",
      "uint16_t *notecount",
      "flags, notecount",
      "uint16_t type, phnum, shnum, notecount"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.114 2014/12/11 14:19:36 christos Exp $\"",
      "off_t, int *",
      "off_t, int *, int",
      "off_t, int *, int, int",
      "int, size_t, int *",
      "if (file_printf(ms, \", too many %s header sections (%u)\", name, num",
      "#define FLAGS_DID_CORE\t\t0x01",
      "#define FLAGS_DID_NOTE\t\t0x02",
      "#define FLAGS_DID_BUILD_ID\t0x04",
      "#define FLAGS_DID_CORE_STYLE\t0x08",
      "#define FLAGS_IS_CORE\t\t0x10",
      "int num, size_t size, off_t fsize, int *flags",
      "clazz, swap, 4, flags",
      "private size_t",
      "donote(struct magic_set *ms, void *vbuf, size_t offset, size_t size,",
      "int clazz, int swap, size_t align, int *flags",
      "Elf32_Nhdr nh32",
      "Elf64_Nhdr nh64",
      "size_t noff, doff",
      "#ifdef ELFCORE",
      "int os_style = -1",
      "#endif",
      "uint32_t namesz, descsz",
      "unsigned char *nbuf = CAST(unsigned char *, vbuf",
      "char sbuf[512]",
      "if (xnh_sizeof + offset > size)",
      "return xnh_sizeof + offset",
      "(void)memcpy(xnh_addr, &nbuf[offset], xnh_sizeof",
      "offset += xnh_sizeof",
      "namesz = xnh_namesz",
      "descsz = xnh_descsz",
      "if ((namesz == 0) && (descsz == 0))",
      "return (offset >= size) ? offset : size",
      "if (namesz & 0x80000000)",
      "(void)file_printf(ms, \", bad note name size 0x%lx\",",
      "(unsigned long)namesz",
      "return 0",
      "if (descsz & 0x80000000)",
      "(void)file_printf(ms, \", bad note description size 0x%lx\",",
      "(unsigned long)descsz",
      "return 0",
      "noff = offset",
      "doff = ELF_ALIGN(offset + namesz",
      "if (offset + namesz > size)",
      "return doff",
      "offset = ELF_ALIGN(doff + descsz",
      "if (doff + descsz > size)",
      "return (offset >= size) ? offset : size",
      "if ((*flags & (FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID)) ==",
      "(FLAGS_DID_NOTE|FLAGS_DID_BUILD_ID",
      "goto core",
      "xnh_type == NT_GNU_VERSION && descsz == 2)",
      "xnh_type == NT_GNU_VERSION && descsz == 16)",
      "return size",
      "return size",
      "return size",
      "return size",
      "return size",
      "return size",
      "return size",
      "return size",
      "return size",
      "if (namesz == 4 && strcmp((char *)&nbuf[noff], \"GNU\") == 0 &&",
      "xnh_type == NT_GNU_BUILD_ID && (descsz == 16 || descsz == 20))",
      "uint8_t desc[20]",
      "uint32_t i",
      "if (file_printf(ms, \", BuildID[%s]=\", descsz == 16 ? \"md5/uuid\" :",
      "\"sha1\") == -1",
      "return size",
      "(void)memcpy(desc, &nbuf[doff], descsz",
      "for (i = 0; i < descsz; i++",
      "if (file_printf(ms, \"%02x\", desc[i]) == -1",
      "return size",
      "xnh_type == NT_NETBSD_PAX && descsz == 4)",
      "return size",
      "return size",
      "if (namesz == 7 && strcmp((char *)&nbuf[noff], \"NetBSD\") == 0)",
      "switch (xnh_type)",
      "case NT_NETBSD_VERSION:",
      "if (descsz == 4)",
      "do_note_netbsd_version(ms, swap, &nbuf[doff]",
      "return size",
      "break",
      "case NT_NETBSD_MARCH:",
      "if (file_printf(ms, \", compiled for: %.*s\", (int)descsz,",
      "(const char *)&nbuf[doff]) == -1",
      "return size",
      "break",
      "case NT_NETBSD_CMODEL:",
      "if (file_printf(ms, \", compiler model: %.*s\",",
      "(int)descsz, (const char *)&nbuf[doff]) == -1",
      "return size",
      "break",
      "default:",
      "if (file_printf(ms, \", note=%u\", xnh_type) == -1",
      "return size",
      "break",
      "return size",
      "if (namesz == 8 && strcmp((char *)&nbuf[noff], \"FreeBSD\") == 0)",
      "if (xnh_type == NT_FREEBSD_VERSION && descsz == 4)",
      "do_note_freebsd_version(ms, swap, &nbuf[doff]",
      "return size",
      "if (namesz == 8 && strcmp((char *)&nbuf[noff], \"OpenBSD\") == 0 &&",
      "xnh_type == NT_OPENBSD_VERSION && descsz == 4)",
      "if (file_printf(ms, \", for OpenBSD\") == -1",
      "return size",
      "return size",
      "if (namesz == 10 && strcmp((char *)&nbuf[noff], \"DragonFly\") == 0 &&",
      "xnh_type == NT_DRAGONFLY_VERSION && descsz == 4)",
      "uint32_t desc",
      "if (file_printf(ms, \", for DragonFly\") == -1",
      "return size",
      "(void)memcpy(&desc, &nbuf[doff], sizeof(desc",
      "desc = elf_getu32(swap, desc",
      "if (file_printf(ms, \" %d.%d.%d\", desc / 100000,",
      "desc / 10000 % 10, desc % 10000) == -1",
      "return size",
      "return size",
      "core:",
      "#ifdef ELFCORE",
      "if ((*flags & FLAGS_DID_CORE) != 0",
      "return size",
      "return size",
      "if (xnh_type == NT_NETBSD_CORE_PROCINFO)",
      "return size",
      "return size",
      "return size",
      "if (xnh_type == NT_PRPSINFO && *flags & FLAGS_IS_CORE)",
      "for (k = i + 1 ; k < NOFFSETS ; k++)",
      "return size",
      "return size",
      "size_t size, off_t fsize, int *flags, int mach, int strtab",
      "xsh_size, clazz, swap, 4, flags",
      "int num, size_t size, off_t fsize, int *flags, int sh_num",
      "flags",
      "uint16_t type, phnum, shnum"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 599,
    "id": "CVE-2014-9529",
    "commit_id": "a3a8784454692dd72e5d5d34dcdab17b4420e74c",
    "added_lines": [
      "key_user_put(key->user"
    ],
    "removed_lines": [
      "key_user_put(key->user"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 601,
    "id": "CVE-2014-9491",
    "commit_id": "d65686849024838243515b5c40ae2c479460b4b5",
    "added_lines": [
      "ptr = strchr(ptr + 1, '/'",
      "if (ptr == NULL",
      "return (ENOENT",
      "ptr++"
    ],
    "removed_lines": [
      "ptr = strchr(ptr + 1, '/') + 1"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference",
      "unspecified vectors"
    ]
  },
  {
    "index": 602,
    "id": "CVE-2014-9428",
    "commit_id": "5b6698b0e4a37053de35cc24ee695b98a7eb712b",
    "added_lines": [
      "if (pskb_expand_head(skb_out, 0, size - skb_out->len, GFP_ATOMIC) < 0)"
    ],
    "removed_lines": [
      "if (pskb_expand_head(skb_out, 0, size - skb->len, GFP_ATOMIC) < 0)"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses an incorrect length field during a calculation of an amount of memory"
    ]
  },
  {
    "index": 605,
    "id": "CVE-2014-9421",
    "commit_id": "a197e92349a4aa2141b5dff12e9dd44c2a2166e3",
    "added_lines": [],
    "removed_lines": [
      "xdr_free(xdr_func, xdr_ptr"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 9.0,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free",
      "double free"
    ]
  },
  {
    "index": 608,
    "id": "CVE-2014-8173",
    "commit_id": "ee53664bda169f519ce3c6a22d378f0b946c8178",
    "added_lines": [
      "if (pmd_none(pmdval) || pmd_trans_huge(pmdval",
      "pmd_clear_bad(pmd"
    ],
    "removed_lines": [
      "if (pmd_none(pmdval",
      "if (!pmd_trans_huge(pmdval",
      "pmd_clear_bad(pmd"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 609,
    "id": "CVE-2014-8172",
    "commit_id": "eee5cc2702929fd41cce28058dc6d6717f723f87",
    "added_lines": [],
    "removed_lines": [
      "struct list_head\tfu_list",
      "#ifdef CONFIG_SMP",
      "int\t\t\tf_sb_list_cpu",
      "#endif",
      "#ifdef CONFIG_SMP",
      "struct list_head __percpu *s_files",
      "#else",
      "struct list_head\ts_files",
      "#endif"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "soft lockup"
    ]
  },
  {
    "index": 611,
    "id": "CVE-2014-7822",
    "commit_id": "8d0207652cbe27d1f962050737848e5ad4671958",
    "added_lines": [
      "extern ssize_t iter_file_splice_write(struct pipe_inode_info *,",
      "struct file *, loff_t *, size_t, unsigned int"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not enforce a restriction on the maximum size of a single file,"
    ]
  },
  {
    "index": 612,
    "id": "CVE-2014-5355",
    "commit_id": "102bb6ebf20f9174130c85c3b052ae104e5073ec",
    "added_lines": [
      "krb5_data             d",
      "d = make_data((char *)sendauth_version, strlen(sendauth_version) + 1",
      "if (!data_eq(inbuf, d))",
      "if (appl_version != NULL && !problem)",
      "d = make_data(appl_version, strlen(appl_version) + 1",
      "if (!data_eq(inbuf, d))"
    ],
    "removed_lines": [
      "if (strcmp(inbuf.data, sendauth_version))",
      "if (appl_version && strcmp(inbuf.data, appl_version))",
      "if (!problem)"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "'0' character",
      "out-of-bounds",
      "out-of-bounds read",
      "null pointer dereference"
    ]
  },
  {
    "index": 613,
    "id": "CVE-2014-5352",
    "commit_id": "82dc33da50338ac84c7b4102dc6513d897d0506a",
    "added_lines": [
      "kgctx.established = 1"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 9.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free",
      "double free"
    ]
  },
  {
    "index": 615,
    "id": "CVE-2014-3571",
    "commit_id": "248385c606620b29ecc96ca9d3603463f879652b",
    "added_lines": [
      "s->packet_length > DTLS1_RT_HEADER_LENGTH &&",
      "s->packet[DTLS1_RT_HEADER_LENGTH] == SSL3_MT_CLIENT_HELLO) &&"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 620,
    "id": "CVE-2013-7446",
    "commit_id": "7d267278a9ece963d77eefec61630223fce08c6c",
    "added_lines": [
      "static int unix_dgram_peer_wake_relay(wait_queue_t *q, unsigned mode, int flags,",
      "void *key",
      "struct unix_sock *u",
      "wait_queue_head_t *u_sleep",
      "u = container_of(q, struct unix_sock, peer_wake",
      "__remove_wait_queue(&unix_sk(u->peer_wake.private)->peer_wait,",
      "q",
      "u->peer_wake.private = NULL",
      "u_sleep = sk_sleep(&u->sk",
      "if (u_sleep",
      "wake_up_interruptible_poll(u_sleep, key",
      "return 0",
      "static int unix_dgram_peer_wake_connect(struct sock *sk, struct sock *other",
      "struct unix_sock *u, *u_other",
      "int rc",
      "u = unix_sk(sk",
      "u_other = unix_sk(other",
      "rc = 0",
      "spin_lock(&u_other->peer_wait.lock",
      "if (!u->peer_wake.private)",
      "u->peer_wake.private = other",
      "__add_wait_queue(&u_other->peer_wait, &u->peer_wake",
      "rc = 1",
      "spin_unlock(&u_other->peer_wait.lock",
      "return rc",
      "static void unix_dgram_peer_wake_disconnect(struct sock *sk,",
      "struct sock *other",
      "struct unix_sock *u, *u_other",
      "u = unix_sk(sk",
      "u_other = unix_sk(other",
      "spin_lock(&u_other->peer_wait.lock",
      "if (u->peer_wake.private == other)",
      "__remove_wait_queue(&u_other->peer_wait, &u->peer_wake",
      "u->peer_wake.private = NULL",
      "spin_unlock(&u_other->peer_wait.lock",
      "static void unix_dgram_peer_wake_disconnect_wakeup(struct sock *sk,",
      "struct sock *other",
      "unix_dgram_peer_wake_disconnect(sk, other",
      "wake_up_interruptible_poll(sk_sleep(sk),",
      "POLLOUT |",
      "POLLWRNORM |",
      "POLLWRBAND",
      "static int unix_dgram_peer_wake_me(struct sock *sk, struct sock *other",
      "int connected",
      "connected = unix_dgram_peer_wake_connect(sk, other",
      "if (unix_recvq_full(other",
      "return 1",
      "if (connected",
      "unix_dgram_peer_wake_disconnect(sk, other",
      "return 0",
      "unix_dgram_peer_wake_disconnect(sk, skpair",
      "init_waitqueue_func_entry(&u->peer_wake, unix_dgram_peer_wake_relay",
      "unix_dgram_peer_wake_disconnect_wakeup(sk, old_peer",
      "int sk_locked",
      "sk_locked = 0",
      "restart_locked:",
      "if (unlikely(sock_flag(other, SOCK_DEAD)))",
      "if (!sk_locked",
      "unix_state_lock(sk",
      "unix_dgram_peer_wake_disconnect_wakeup(sk, other",
      "if (unlikely(unix_peer(other) != sk && unix_recvq_full(other)))",
      "if (timeo)",
      "timeo = unix_wait_for_peer(other, timeo",
      "err = sock_intr_errno(timeo",
      "if (signal_pending(current",
      "goto out_free",
      "goto restart",
      "if (!sk_locked)",
      "unix_state_unlock(other",
      "unix_state_double_lock(sk, other",
      "if (unix_peer(sk) != other ||",
      "unix_dgram_peer_wake_me(sk, other))",
      "err = -EAGAIN",
      "sk_locked = 1",
      "goto out_unlock",
      "if (!sk_locked)",
      "sk_locked = 1",
      "goto restart_locked",
      "if (unlikely(sk_locked",
      "unix_state_unlock(sk",
      "if (sk_locked",
      "unix_state_unlock(sk",
      "if (writable)",
      "unix_state_lock(sk",
      "other = unix_peer(sk",
      "if (other && unix_peer(other) != sk &&",
      "unix_recvq_full(other) &&",
      "unix_dgram_peer_wake_me(sk, other",
      "writable = 0",
      "unix_state_unlock(sk"
    ],
    "removed_lines": [
      "if (sock_flag(other, SOCK_DEAD))",
      "unix_state_lock(sk",
      "if (unix_peer(other) != sk && unix_recvq_full(other))",
      "if (!timeo)",
      "err = -EAGAIN",
      "goto out_unlock",
      "timeo = unix_wait_for_peer(other, timeo",
      "err = sock_intr_errno(timeo",
      "if (signal_pending(current",
      "goto out_free",
      "goto restart",
      "other = unix_peer_get(sk",
      "if (other)",
      "if (unix_peer(other) != sk)",
      "sock_poll_wait(file, &unix_sk(other)->peer_wait, wait",
      "if (unix_recvq_full(other",
      "writable = 0",
      "sock_put(other"
    ],
    "cause": [
      "Memory Management",
      "Configuration or Permissions Errors"
    ],
    "effect": "DoS Bypass",
    "score": 5.4,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS Bypass ",
    "summary": [
      "permissions",
      "use-after-free"
    ]
  },
  {
    "index": 621,
    "id": "CVE-2013-7441",
    "commit_id": "741495cb08503fd32a9d22648e63b64390c601f4",
    "added_lines": [
      "static pid_t",
      "spawn_child",
      "pid_t pid",
      "sigset_t newset",
      "sigset_t oldset",
      "sigemptyset(&newset",
      "sigaddset(&newset, SIGCHLD",
      "sigaddset(&newset, SIGTERM",
      "sigprocmask(SIG_BLOCK, &newset, &oldset",
      "pid = fork",
      "if (pid < 0)",
      "msg(LOG_ERR, \"Could not fork (%s)\", strerror(errno",
      "goto out",
      "if (pid > 0) {",
      "pid_t *pidp",
      "pidp = g_malloc(sizeof(pid_t",
      "g_hash_table_insert(children, pidp, pidp",
      "goto out",
      "signal(SIGCHLD, SIG_DFL",
      "signal(SIGTERM, SIG_DFL",
      "signal(SIGHUP, SIG_DFL",
      "out:",
      "sigprocmask(SIG_SETMASK, &oldset, NULL",
      "return pid",
      "static int",
      "socket_accept(const int sock",
      "struct sockaddr_storage addrin",
      "socklen_t addrinlen = sizeof(addrin",
      "int net",
      "net = accept(sock, (struct sockaddr *) &addrin, &addrinlen",
      "if (net < 0)",
      "err_nonfatal(\"Failed to accept socket connection: %m\"",
      "return net",
      "static void",
      "handle_modern_connection(GArray *const servers, const int sock",
      "int net",
      "pid_t pid",
      "CLIENT *client = NULL",
      "int sock_flags_old",
      "int sock_flags_new",
      "net = socket_accept(sock",
      "if (net < 0",
      "return",
      "if (!dontfork)",
      "pid = spawn_child",
      "if (pid)",
      "if (pid > 0",
      "msg(LOG_INFO, \"Spawned a child process\"",
      "if (pid < 0",
      "msg(LOG_ERR, \"Failed to spawn a child process\"",
      "close(net",
      "return",
      "client = negotiate(net, NULL, servers, NEG_INIT | NEG_MODERN",
      "if (!client)",
      "msg(LOG_ERR, \"Modern initial negotiation failed\"",
      "goto handler_err",
      "if (client->server->max_connections > 0 &&",
      "g_hash_table_size(children) >= client->server->max_connections)",
      "msg(LOG_ERR, \"Max connections (%d) reached\",",
      "client->server->max_connections",
      "goto handler_err",
      "sock_flags_old = fcntl(net, F_GETFL, 0",
      "if (sock_flags_old == -1)",
      "msg(LOG_ERR, \"Failed to get socket flags\"",
      "goto handler_err",
      "sock_flags_new = sock_flags_old & ~O_NONBLOCK",
      "if (sock_flags_new != sock_flags_old &&",
      "fcntl(net, F_SETFL, sock_flags_new) == -1)",
      "msg(LOG_ERR, \"Failed to set socket to blocking mode\"",
      "goto handler_err",
      "if (set_peername(net, client))",
      "msg(LOG_ERR, \"Failed to set peername\"",
      "goto handler_err",
      "if (!authorized_client(client))",
      "msg(LOG_INFO, \"Client '%s' is not authorized to access\",",
      "client->clientname",
      "goto handler_err",
      "if (!dontfork)",
      "int i",
      "g_hash_table_destroy(children",
      "children = NULL",
      "for (i = 0; i < modernsocks->len; i++)",
      "close(g_array_index(modernsocks, int, i",
      "g_array_free(modernsocks, TRUE",
      "for (i = 0; i < servers->len; i++)",
      "const SERVER *const server = &g_array_index(servers, SERVER, i",
      "close(server->socket",
      "actual data. This is required,",
      "because the client has a",
      "direct reference into that",
      "data, and otherwise we get a",
      "segfault... */",
      "g_array_free(servers, FALSE",
      "msg(LOG_INFO, \"Starting to serve\"",
      "serveconnection(client",
      "exit(EXIT_SUCCESS",
      "handler_err:",
      "g_free(client",
      "close(net",
      "if (!dontfork)",
      "exit(EXIT_FAILURE",
      "handle_modern_connection(servers, sock",
      "int net"
    ],
    "removed_lines": [
      "int net",
      "CLIENT *client",
      "if((net=accept(sock, (struct sockaddr *) &addrin, &addrinlen)) < 0)",
      "err_nonfatal(\"accept: %m\"",
      "continue",
      "client = negotiate(net, NULL, servers, NEG_INIT | NEG_MODERN",
      "if(!client)",
      "close(net",
      "continue",
      "handle_connection(servers, net, client->server, client"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "by (1) closing the connection during negotiation or (2) specifying a name for a non-existent export"
    ]
  },
  {
    "index": 623,
    "id": "CVE-2016-10088",
    "commit_id": "128394eff343fc6d2f32172f03e24829539c5835",
    "added_lines": [
      "if (unlikely(segment_eq(get_fs(), KERNEL_DS",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 624,
    "id": "CVE-2016-9919",
    "commit_id": "79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2",
    "added_lines": [
      "else",
      "dst = skb_dst(skb",
      "iif = l3mdev_master_ifindex(dst ? dst->dev : skb->dev"
    ],
    "removed_lines": [
      "else",
      "iif = l3mdev_master_ifindex(skb_dst(skb)->dev"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "omits a certain check of the dst data structure"
    ]
  },
  {
    "index": 626,
    "id": "CVE-2016-9806",
    "commit_id": "92964c79b357efd980812c4de5c1fd2ec8bb5520",
    "added_lines": [
      "struct module *module",
      "module = cb->module",
      "skb = cb->skb",
      "module_put(module",
      "consume_skb(skb"
    ],
    "removed_lines": [
      "module_put(cb->module",
      "consume_skb(cb->skb"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free",
      "race condition"
    ]
  },
  {
    "index": 627,
    "id": "CVE-2016-9794",
    "commit_id": "3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4",
    "added_lines": [
      "snd_pcm_stream_unlock_irqrestore(substream, flags"
    ],
    "removed_lines": [
      "snd_pcm_stream_unlock_irqrestore(substream, flags"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 629,
    "id": "CVE-2016-9777",
    "commit_id": "81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755",
    "added_lines": [
      "DECLARE_BITMAP(map, KVM_MAX_VCPU_ID",
      "u8 vectors[KVM_MAX_VCPU_ID]"
    ],
    "removed_lines": [
      "DECLARE_BITMAP(map, KVM_MAX_VCPUS",
      "u8 vectors[KVM_MAX_VCPUS]"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 632,
    "id": "CVE-2016-9685",
    "commit_id": "2e83b79b2d6c78bf1b4aa227938a214dcbddc83f",
    "added_lines": [
      "if (error)",
      "kmem_free(sbuf",
      "if (!retval",
      "retval = context->put_listent(context,",
      "entry->flags,",
      "name_rmt->name,",
      "(int)name_rmt->namelen,",
      "valuelen,",
      "args.value"
    ],
    "removed_lines": [
      "if (error",
      "if (retval",
      "return retval",
      "retval = context->put_listent(context,",
      "entry->flags,",
      "name_rmt->name,",
      "(int)name_rmt->namelen,",
      "valuelen,",
      "args.value"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 633,
    "id": "CVE-2016-9588",
    "commit_id": "ef85b67385436ddc1998f45f1d6a210f935b3388",
    "added_lines": [
      "static inline bool is_nmi(u32 intr_info",
      "== (INTR_TYPE_NMI_INTR | INTR_INFO_VALID_MASK",
      "if (is_nmi(intr_info",
      "if (is_nmi(intr_info",
      "if (is_nmi(exit_intr_info))"
    ],
    "removed_lines": [
      "static inline bool is_exception(u32 intr_info",
      "== (INTR_TYPE_HARD_EXCEPTION | INTR_INFO_VALID_MASK",
      "if ((intr_info & INTR_INFO_INTR_TYPE_MASK) == INTR_TYPE_NMI_INTR",
      "if (!is_exception(intr_info",
      "if ((exit_intr_info & INTR_INFO_INTR_TYPE_MASK) == INTR_TYPE_NMI_INTR &&",
      "(exit_intr_info & INTR_INFO_VALID_MASK))"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "mismanages the #BP and #OF exceptions"
    ]
  },
  {
    "index": 634,
    "id": "CVE-2016-9576",
    "commit_id": "a0ac402cfcdc904f9772e1762b3fda112dcc56a0",
    "added_lines": [
      "if (!iter_is_iovec(iter",
      "goto fail",
      "fail:"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 636,
    "id": "CVE-2016-9555",
    "commit_id": "bf911e985d6bbaa328c20c3e05f4eb03de11fdd6",
    "added_lines": [
      "ch_end = ((__u8 *)ch) + SCTP_PAD4(ntohs(ch->length",
      "if (ch_end > skb_tail_pointer(skb",
      "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,",
      "commands"
    ],
    "removed_lines": [
      "ch_end = ((__u8 *)ch) + SCTP_PAD4(ntohs(ch->length",
      "if (ch_end > skb_tail_pointer(skb",
      "return sctp_sf_violation_chunklen(net, ep, asoc, type, arg,",
      "commands"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 646,
    "id": "CVE-2016-9313",
    "commit_id": "7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb",
    "added_lines": [
      "#define pr_fmt(fmt) \"big_key: \"fmt",
      "struct crypto_skcipher *cipher",
      "struct crypto_rng *rng",
      "int ret",
      "rng = crypto_alloc_rng(big_key_rng_name, 0, 0",
      "if (IS_ERR(rng))",
      "pr_err(\"Can't alloc rng: %ld\\n\", PTR_ERR(rng",
      "return PTR_ERR(rng",
      "big_key_rng = rng",
      "ret = crypto_rng_reset(rng, NULL, crypto_rng_seedsize(rng",
      "if (ret)",
      "pr_err(\"Can't reset rng: %d\\n\", ret",
      "goto error_rng",
      "cipher = crypto_alloc_skcipher(big_key_alg_name, 0, CRYPTO_ALG_ASYNC",
      "if (IS_ERR(cipher))",
      "ret = PTR_ERR(cipher",
      "pr_err(\"Can't alloc crypto: %d\\n\", ret",
      "goto error_rng",
      "big_key_skcipher = cipher",
      "ret = register_key_type(&key_type_big_key",
      "if (ret < 0)",
      "pr_err(\"Can't register type: %d\\n\", ret",
      "goto error_cipher",
      "error_cipher:",
      "crypto_free_skcipher(big_key_skcipher",
      "error_rng:",
      "late_initcall(big_key_init"
    ],
    "removed_lines": [
      "return register_key_type(&key_type_big_key",
      "static int __init big_key_crypto_init(void",
      "int ret = -EINVAL",
      "big_key_rng = crypto_alloc_rng(big_key_rng_name, 0, 0",
      "if (IS_ERR(big_key_rng))",
      "big_key_rng = NULL",
      "return -EFAULT",
      "ret = crypto_rng_reset(big_key_rng, NULL, crypto_rng_seedsize(big_key_rng",
      "if (ret",
      "goto error",
      "big_key_skcipher = crypto_alloc_skcipher(big_key_alg_name,",
      "0, CRYPTO_ALG_ASYNC",
      "if (IS_ERR(big_key_skcipher))",
      "big_key_skcipher = NULL",
      "ret = -EFAULT",
      "goto error",
      "error:",
      "big_key_rng = NULL",
      "device_initcall(big_key_init",
      "late_initcall(big_key_crypto_init"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 647,
    "id": "CVE-2016-9191",
    "commit_id": "93362fa47fe98b62e4a34ab408c4a418432e7939",
    "added_lines": [
      "goto out",
      "out:"
    ],
    "removed_lines": [
      "return 0"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles certain drain operations"
    ]
  },
  {
    "index": 649,
    "id": "CVE-2016-9120",
    "commit_id": "9590232bb4f4cc824f3425a6e1349afbe6d6d2b7",
    "added_lines": [
      "static int ion_handle_put_nolock(struct ion_handle *handle",
      "int ret",
      "ret = kref_put(&handle->ref, ion_handle_destroy",
      "return ret",
      "int ion_handle_put(struct ion_handle *handle",
      "ret = ion_handle_put_nolock(handle",
      "static struct ion_handle *ion_handle_get_by_id_nolock(struct ion_client *client,",
      "struct ion_handle *ion_handle_get_by_id(struct ion_client *client,",
      "int id",
      "struct ion_handle *handle",
      "mutex_lock(&client->lock",
      "handle = ion_handle_get_by_id_nolock(client, id",
      "mutex_unlock(&client->lock",
      "return handle",
      "static void ion_free_nolock(struct ion_client *client, struct ion_handle *handle",
      "ion_handle_put_nolock(handle",
      "void ion_free(struct ion_client *client, struct ion_handle *handle",
      "BUG_ON(client != handle->client",
      "mutex_lock(&client->lock",
      "ion_free_nolock(client, handle",
      "mutex_lock(&client->lock",
      "handle = ion_handle_get_by_id_nolock(client, data.handle.handle",
      "if (IS_ERR(handle))",
      "mutex_unlock(&client->lock",
      "ion_free_nolock(client, handle",
      "ion_handle_put_nolock(handle",
      "mutex_unlock(&client->lock"
    ],
    "removed_lines": [
      "static int ion_handle_put(struct ion_handle *handle",
      "ret = kref_put(&handle->ref, ion_handle_destroy",
      "static struct ion_handle *ion_handle_get_by_id(struct ion_client *client,",
      "mutex_lock(&client->lock",
      "mutex_unlock(&client->lock",
      "void ion_free(struct ion_client *client, struct ion_handle *handle",
      "mutex_lock(&client->lock",
      "mutex_unlock(&client->lock",
      "ion_handle_put(handle",
      "handle = ion_handle_get_by_id(client, data.handle.handle",
      "if (IS_ERR(handle",
      "ion_free(client, handle",
      "ion_handle_put(handle"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 9.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 651,
    "id": "CVE-2016-8858",
    "commit_id": "ec165c392ca54317dbe3064a8c200de6531e89ad",
    "added_lines": [
      "ssh_dispatch_set(ssh, SSH2_MSG_KEXINIT, NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "by sending many duplicate KEXINIT requests"
    ]
  },
  {
    "index": 652,
    "id": "CVE-2016-8740",
    "commit_id": "29c63b786ae028d82405421585e91283c8fa0da3",
    "added_lines": [
      "int error = 0",
      "if (stream->has_response)",
      "return APR_EINVAL",
      "++stream->request_headers_added",
      "if (name[0] == ':')",
      "if ((vlen) > stream->session->s->limit_req_line)",
      "\"h2_stream(%ld-%d): pseudo header %s too long\",",
      "error = HTTP_REQUEST_URI_TOO_LARGE",
      "else if ((nlen + 2 + vlen) > stream->session->s->limit_req_fieldsize)",
      "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,",
      "\"h2_stream(%ld-%d): header %s too long\",",
      "stream->session->id, stream->id, name",
      "error = HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE",
      "if (stream->request_headers_added",
      "> stream->session->s->limit_req_fields + 4)",
      "if (stream->request_headers_added",
      "> stream->session->s->limit_req_fields + 4 + 100)",
      "return APR_ECONNRESET",
      "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,",
      "\"h2_stream(%ld-%d): too many header lines\",",
      "stream->session->id, stream->id",
      "error = HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE",
      "else if (error)",
      "return h2_stream_set_error(stream, error"
    ],
    "removed_lines": [
      "if (!stream->has_response)",
      "if (name[0] == ':')",
      "if ((vlen) > stream->session->s->limit_req_line)",
      "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,",
      "\"h2_stream(%ld-%d): pseudo header %s too long\",",
      "stream->session->id, stream->id, name",
      "return h2_stream_set_error(stream,",
      "HTTP_REQUEST_URI_TOO_LARGE",
      "else if ((nlen + 2 + vlen) > stream->session->s->limit_req_fieldsize)",
      "\"h2_stream(%ld-%d): header %s too long\",",
      "return h2_stream_set_error(stream,",
      "HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE",
      "if (name[0] != ':')",
      "++stream->request_headers_added",
      "if (stream->request_headers_added",
      "> stream->session->s->limit_req_fields)",
      "ap_log_cerror(APLOG_MARK, APLOG_TRACE1, 0, stream->session->c,",
      "\"h2_stream(%ld-%d): too many header lines\",",
      "stream->session->id, stream->id",
      "return h2_stream_set_error(stream,",
      "HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not restrict request-header length"
    ]
  },
  {
    "index": 653,
    "id": "CVE-2016-8666",
    "commit_id": "fac8e0f579695a3ecbc4d3cac369139d7f819971",
    "added_lines": [
      "static struct sk_buff **sit_gro_receive(struct sk_buff **head,",
      "struct sk_buff *skb",
      "if (NAPI_GRO_CB(skb)->encap_mark)",
      "NAPI_GRO_CB(skb)->flush = 1",
      "return NULL",
      "NAPI_GRO_CB(skb)->encap_mark = 1",
      "return ipv6_gro_receive(head, skb",
      ".gro_receive    = sit_gro_receive,"
    ],
    "removed_lines": [
      ".gro_receive    = ipv6_gro_receive,"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "stack consumption"
    ]
  },
  {
    "index": 655,
    "id": "CVE-2016-8655",
    "commit_id": "84ac7260236a49c79eede91617700174c2c19b0c",
    "added_lines": [
      "break",
      "lock_sock(sk",
      "if (po->rx_ring.pg_vec || po->tx_ring.pg_vec)",
      "ret = -EBUSY",
      "} else",
      "po->tp_version = val",
      "ret = 0",
      "release_sock(sk",
      "return ret",
      "lock_sock(sk",
      "release_sock(sk"
    ],
    "removed_lines": [
      "if (po->rx_ring.pg_vec || po->tx_ring.pg_vec",
      "return -EBUSY",
      "po->tp_version = val",
      "return 0",
      "lock_sock(sk",
      "release_sock(sk"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 656,
    "id": "CVE-2016-8650",
    "commit_id": "f5527fffff3f002b0a6b376163613b82f69de073",
    "added_lines": [
      "if (res->nlimbs)",
      "if (mpi_resize(res, 1) < 0",
      "goto enomem",
      "rp = res->d",
      "rp[0] = 1"
    ],
    "removed_lines": [
      "rp[0] = 1"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "does not ensure that memory is allocated for limb data"
    ]
  },
  {
    "index": 657,
    "id": "CVE-2016-8646",
    "commit_id": "4afa5f9617927453ac04b24b584f6c718dfb4f45",
    "added_lines": [
      "bool more",
      "lock_sock(sk",
      "more = ctx->more",
      "err = more ? crypto_ahash_export(req, state) : 0",
      "release_sock(sk",
      "ctx2->more = more",
      "if (!more",
      "return err"
    ],
    "removed_lines": [
      "err = crypto_ahash_export(req, state",
      "ctx2->more = 1"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "by attempting to trigger use of in-kernel hash algorithms for a socket that has received zero bytes of data"
    ]
  },
  {
    "index": 658,
    "id": "CVE-2016-8645",
    "commit_id": "ac6e780070e30e4c35bd395acfe9191e6268bdd3",
    "added_lines": [
      "if (tcp_filter(sk, skb",
      "if (tcp_filter(sk, skb",
      "th = (const struct tcphdr *)skb->data",
      "hdr = ipv6_hdr(skb"
    ],
    "removed_lines": [
      "if (sk_filter(sk, skb",
      "if (sk_filter(sk, skb"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles skb truncation"
    ]
  },
  {
    "index": 660,
    "id": "CVE-2016-8630",
    "commit_id": "d9092f52d7e61dd1557f2db2400ddb430e85937e",
    "added_lines": [
      "if (ctxt->rip_relative && likely(ctxt->memopp"
    ],
    "removed_lines": [
      "if (ctxt->rip_relative"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 662,
    "id": "CVE-2016-7917",
    "commit_id": "c58d6c93680f28ac58984af61d0a7ebf4319c241",
    "added_lines": [
      "if (nlh->nlmsg_len < NLMSG_HDRLEN ||",
      "skb->len < nlh->nlmsg_len ||",
      "nlmsg_len(nlh) < sizeof(struct nfgenmsg))",
      "nfnl_err_reset(&err_list",
      "status |= NFNL_BATCH_FAILURE",
      "goto done"
    ],
    "removed_lines": [
      "if (nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||",
      "skb->len < nlh->nlmsg_len)",
      "err = -EINVAL",
      "goto ack"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "infinite loop",
      "out-of-bounds read",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 664,
    "id": "CVE-2016-7915",
    "commit_id": "50220dead1650609206efe91f0cc116132d59b3f",
    "added_lines": [
      "value[n] - min < field->maxusage &&",
      "&& field->value[n] - min < field->maxusage",
      "&& value[n] - min < field->maxusage"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 665,
    "id": "CVE-2016-7914",
    "commit_id": "8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2",
    "added_lines": [
      "if (assoc_array_ptr_is_leaf(ptr) &&",
      "ops->compare_object(assoc_array_ptr_to_leaf(ptr),",
      "index_key))"
    ],
    "removed_lines": [
      "if (ops->compare_object(assoc_array_ptr_to_leaf(ptr), index_key))"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Info",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "invalid pointer dereference",
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 666,
    "id": "CVE-2016-7913",
    "commit_id": "8dfbcc4351a0b6d2f2d77f367552f48ffefafe18",
    "added_lines": [
      "priv->ctrl.fname = NULL",
      "return -ENOMEM"
    ],
    "removed_lines": [
      "rc = -ENOMEM"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 9.3,
    "safe_features": [
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 668,
    "id": "CVE-2016-7911",
    "commit_id": "8ba8682107ee2ca3347354e018865d8e1967c5f4",
    "added_lines": [
      "task_lock(p",
      "task_unlock(p"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 674,
    "id": "CVE-2016-7417",
    "commit_id": "ecb7f58a069be0dec4a6131b6351a761f808f22e?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #73029: Missing type check when unserializing SplArray",
      "--FILE--",
      "<?php",
      "try",
      "$a = 'C:11:\"ArrayObject\":19:0x:i:0;r:2;;m:a:0:{}}'",
      "$m = unserialize($a",
      "$x = $m[2]",
      "} catch(UnexpectedValueException $e)",
      "print $e->getMessage() . \"\\n\"",
      "?>",
      "DONE",
      "--EXPECTF--",
      "Error at offset 10 of 19 bytes",
      "DONE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "proceeds with SplArray unserialization without validating a return value and data type"
    ]
  },
  {
    "index": 677,
    "id": "CVE-2016-7413",
    "commit_id": "b88393f08a558eec14964a55d3c680fe67407712?w=1",
    "added_lines": [
      "if (((st_entry *)stack->elements[i])->data",
      "&& ((st_entry *)stack->elements[i])->type != ST_FIELD)"
    ],
    "removed_lines": [
      "if (((st_entry *)stack->elements[i])->data)"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 680,
    "id": "CVE-2016-7166",
    "commit_id": "6e06b1c89dd0d16f74894eac4cfc1327a06ee4a0",
    "added_lines": [
      "This is a valid gzip file that decompresses to itself, from",
      "http://www.maximumcompression.com/selfgz.gz",
      "This is used in test_read_too_many_filters to try to",
      "crash libarchive by forcing it to spawn an unending",
      "list of gunzip filters.",
      "begin 644 test_read_too_many_filters.gz",
      "M'XL(`````````P`/`/#_'XL(`````````P`/`/#_````__\\```#__X)QH5P`",
      "M`!X`X?\\```#__P```/__@G&A7```'@#A_P```/__````__\\```#__P```/__",
      "M````__\\```#__\\(FAF`!`!0`Z_\\```#__P```/__PB:&8`$`%`#K_\\(FAF`!",
      "M`!0`Z_^9(#6-B\"@Q,C,T`K/`+```%`#K_P*SP\"P``!0`Z_]\"B\"'$`````/__",
      ">`P!#2DTAT@```$*((<0`````__\\#`$-*32'2````",
      "`",
      "end"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not limit the number of recursive decompressions"
    ]
  },
  {
    "index": 687,
    "id": "CVE-2016-7132",
    "commit_id": "a14fdb9746262549bbbb96abb87338bacd147e1b?w=1",
    "added_lines": [
      "efree(ent1",
      "if (ent2->data == NULL)",
      "if(ent->data == NULL)",
      "retval = FAILURE",
      "} else",
      "zval_copy_ctor(return_value",
      "retval = SUCCESS"
    ],
    "removed_lines": [
      "efree(ent1",
      "if (ent2->type == ST_FIELD && ent2->data == NULL)",
      "zval_copy_ctor(return_value",
      "retval = SUCCESS"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 688,
    "id": "CVE-2016-7130",
    "commit_id": "698a691724c0a949295991e5df091ce16f899e02?w=1",
    "added_lines": [
      "if (new_str)",
      "Z_STRVAL_P(ent1->data) = new_str",
      "Z_STRLEN_P(ent1->data) = new_len",
      "} else",
      "ZVAL_EMPTY_STRING(ent1->data"
    ],
    "removed_lines": [
      "Z_STRVAL_P(ent1->data) = new_str",
      "Z_STRLEN_P(ent1->data) = new_len"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 689,
    "id": "CVE-2016-7129",
    "commit_id": "426aeb2808955ee3d3f52e0cfb102834cdb836a5?w=1",
    "added_lines": [
      "if (Z_TYPE_P(ent->data) == IS_STRING)",
      "tmp = safe_emalloc(Z_STRLEN_P(ent->data), 1, (size_t)len + 1",
      "memcpy(tmp, Z_STRVAL_P(ent->data), Z_STRLEN_P(ent->data",
      "memcpy(tmp + Z_STRLEN_P(ent->data), s, len",
      "len += Z_STRLEN_P(ent->data",
      "efree(Z_STRVAL_P(ent->data",
      "Z_TYPE_P(ent->data) = IS_LONG",
      "} else",
      "tmp = emalloc(len + 1",
      "memcpy(tmp, s, len",
      "ZVAL_STRINGL(ent->data, tmp, len, 0",
      "} else",
      "efree(tmp"
    ],
    "removed_lines": [
      "tmp = emalloc(len + 1",
      "memcpy(tmp, s, len",
      "Z_TYPE_P(ent->data) = IS_STRING",
      "Z_STRLEN_P(ent->data) = len",
      "Z_STRVAL_P(ent->data) = estrndup(s, len",
      "efree(tmp"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 691,
    "id": "CVE-2016-7127",
    "commit_id": "1bd103df00f49cf4d4ade2cfe3f456ac058a4eae?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72730: imagegammacorrect allows arbitrary write access",
      "--SKIPIF--",
      "<?php",
      "if (!function_exists(\"imagecreatetruecolor\")) die(\"skip\"",
      "?>",
      "--FILE--",
      "<?php",
      "$img =  imagecreatetruecolor(1, 1",
      "imagegammacorrect($img, -1, 1337",
      "?>",
      "DONE",
      "--EXPECTF--",
      "Warning: imagegammacorrect(): Gamma values should be positive in %sbug72730.php on line %d",
      "DONE"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 692,
    "id": "CVE-2016-7126",
    "commit_id": "b6f13a5ef9d6280cf984826a5de012a32c396cd4?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72697: select_colors write out-of-bounds",
      "--SKIPIF--",
      "<?php",
      "if (!function_exists(\"imagecreatetruecolor\")) die(\"skip\"",
      "if (PHP_INT_MAX !== 9223372036854775807) die(\"skip for 64-bit long systems only\"",
      "?>",
      "--FILE--",
      "<?php",
      "$img=imagecreatetruecolor(10, 10",
      "imagetruecolortopalette($img, false, PHP_INT_MAX / 8",
      "?>",
      "DONE",
      "--EXPECTF--",
      "Warning: imagetruecolortopalette(): Number of colors has to be greater than zero and no more than 2147483647 in %sbug72697.php on line %d",
      "DONE"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 694,
    "id": "CVE-2016-7124",
    "commit_id": "20ce2fe8e3c211a42fee05a461a5881be9a8790e?w=1",
    "added_lines": [
      "if (yych <= '/') goto yy18",
      "if (yych >= ';') goto yy18",
      "#line 805 \"ext/standard/var_unserializer.c\"",
      "#line 837 \"ext/standard/var_unserializer.c\"",
      "#line 882 \"ext/standard/var_unserializer.c\"",
      "#line 937 \"ext/standard/var_unserializer.c\"",
      "#line 990 \"ext/standard/var_unserializer.c\"",
      "#line 1087 \"ext/standard/var_unserializer.c\"",
      "#line 1162 \"ext/standard/var_unserializer.c\"",
      "#line 1215 \"ext/standard/var_unserializer.c\"",
      "#line 1229 \"ext/standard/var_unserializer.c\"",
      "#line 1238 \"ext/standard/var_unserializer.c\"",
      "#line 1286 \"ext/standard/var_unserializer.c\"",
      "#line 1335 \"ext/standard/var_unserializer.c\""
    ],
    "removed_lines": [
      "if (yych != ':') goto yy18",
      "#line 804 \"ext/standard/var_unserializer.c\"",
      "#line 836 \"ext/standard/var_unserializer.c\"",
      "#line 881 \"ext/standard/var_unserializer.c\"",
      "#line 936 \"ext/standard/var_unserializer.c\"",
      "#line 989 \"ext/standard/var_unserializer.c\"",
      "#line 1086 \"ext/standard/var_unserializer.c\"",
      "#line 1161 \"ext/standard/var_unserializer.c\"",
      "#line 1214 \"ext/standard/var_unserializer.c\"",
      "#line 1228 \"ext/standard/var_unserializer.c\"",
      "#line 1237 \"ext/standard/var_unserializer.c\"",
      "#line 1285 \"ext/standard/var_unserializer.c\"",
      "#line 1334 \"ext/standard/var_unserializer.c\""
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles certain invalid objects"
    ]
  },
  {
    "index": 698,
    "id": "CVE-2016-6905",
    "commit_id": "01c61f8ab110a77ae64b5ca67c244c728c506f03",
    "added_lines": [
      "encoded_pixels = ( ( decompression_buffer[ buffer_caret ] & !TGA_RLE_FLAG ) + 1",
      "if ((bitmap_caret + (encoded_pixels * pixel_block_size)) >= image_block_size)",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "for (i = 0; i < encoded_pixels; i++)",
      "memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, pixel_block_size",
      "bitmap_caret += pixel_block_size",
      "if ((bitmap_caret + (encoded_pixels * pixel_block_size)) >= image_block_size)",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "memcpy(tga->bitmap + bitmap_caret, decompression_buffer + buffer_caret, encoded_pixels * pixel_block_size",
      "bitmap_caret += (encoded_pixels * pixel_block_size",
      "buffer_caret += (encoded_pixels * pixel_block_size"
    ],
    "removed_lines": [
      "int j = 0",
      "encoded_pixels = ( ( decompression_buffer[ buffer_caret ] & 127 ) + 1",
      "if (encoded_pixels != 0)",
      "if (!((buffer_caret + (encoded_pixels * pixel_block_size)) < image_block_size))",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "for (i = 0; i < encoded_pixels; i++)",
      "for (j = 0; j < pixel_block_size; j++, bitmap_caret++)",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "if (encoded_pixels != 0)",
      "if (!((buffer_caret + (encoded_pixels * pixel_block_size)) < image_block_size))",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "for (i = 0; i < encoded_pixels; i++)",
      "for( j = 0; j < pixel_block_size; j++, bitmap_caret++ )",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "buffer_caret += pixel_block_size"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 699,
    "id": "CVE-2016-6828",
    "commit_id": "bb1fceca22492109be12640d49f5ea5a544c6bb4",
    "added_lines": [
      "if (tcp_sk(sk)->highest_sack == skb_unlinked",
      "tcp_sk(sk)->highest_sack = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 704,
    "id": "CVE-2016-6515",
    "commit_id": "fcd135c9df440bcd2d5870405ad3311743d78d97",
    "added_lines": [
      "#define MAX_PASSWORD_LEN\t1024",
      "if (strlen(password) > MAX_PASSWORD_LEN",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not limit password lengths for password authentication"
    ]
  },
  {
    "index": 708,
    "id": "CVE-2016-6327",
    "commit_id": "51093254bf879bc9ce96590400a87897c7498463",
    "added_lines": [
      "srp_tsk, tcm_tmr, GFP_KERNEL, srp_tsk->task_tag,"
    ],
    "removed_lines": [
      "static int srpt_rx_mgmt_fn_tag(struct srpt_send_ioctx *ioctx, u64 tag",
      "struct srpt_device *sdev",
      "struct srpt_rdma_ch *ch",
      "struct srpt_send_ioctx *target",
      "int ret, i",
      "ret = -EINVAL",
      "ch = ioctx->ch",
      "BUG_ON(!ch",
      "BUG_ON(!ch->sport",
      "sdev = ch->sport->sdev",
      "BUG_ON(!sdev",
      "spin_lock_irq(&sdev->spinlock",
      "for (i = 0; i < ch->rq_size; ++i)",
      "target = ch->ioctx_ring[i]",
      "if (target->cmd.se_lun == ioctx->cmd.se_lun &&",
      "target->cmd.tag == tag &&",
      "srpt_get_cmd_state(target) != SRPT_STATE_DONE)",
      "ret = 0",
      "break",
      "spin_unlock_irq(&sdev->spinlock",
      "return ret",
      "uint32_t tag = 0",
      "if (tcm_tmr < 0)",
      "send_ioctx->cmd.se_tmr_req->response =",
      "TMR_TASK_MGMT_FUNCTION_NOT_SUPPORTED",
      "goto fail",
      "if (srp_tsk->tsk_mgmt_func == SRP_TSK_ABORT_TASK)",
      "rc = srpt_rx_mgmt_fn_tag(send_ioctx, srp_tsk->task_tag",
      "if (rc < 0)",
      "send_ioctx->cmd.se_tmr_req->response =",
      "TMR_TASK_DOES_NOT_EXIST",
      "goto fail",
      "tag = srp_tsk->task_tag",
      "srp_tsk, tcm_tmr, GFP_KERNEL, tag,"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 711,
    "id": "CVE-2016-6214",
    "commit_id": "10ef1dca63d62433fda13309b4a228782db823f7",
    "added_lines": [
      "We test that a 8bpp TGA file will be gracefully rejected by",
      "gdImageCreateFromTga().",
      "#include <stdio.h>",
      "#include \"gd.h\"",
      "#include \"gdtest.h\"",
      "int main(int argc, char **argv",
      "gdImagePtr im",
      "FILE *fp = gdTestFileOpen(\"tga/bug00247a.tga\"",
      "im = gdImageCreateFromTga(fp",
      "gdTestAssert(im == NULL",
      "fclose(fp",
      "return gdNumFailures"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 712,
    "id": "CVE-2016-6213",
    "commit_id": "d29216842a85c7970c536108e093963f02714498",
    "added_lines": [
      "#include <linux/mount.h>",
      ".procname\t= \"mount-max\",",
      ".data\t\t= &sysctl_mount_max,",
      ".maxlen\t\t= sizeof(unsigned int),",
      ".mode\t\t= 0644,",
      ".proc_handler\t= proc_dointvec_minmax,",
      ".extra1\t\t= &one,",
      "},"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not restrict how many mounts may exist in a mount namespace,"
    ]
  },
  {
    "index": 713,
    "id": "CVE-2016-6198",
    "commit_id": "9409e22acdfc9153f88d9b1ed2bd2a5b34d2d3ca",
    "added_lines": [
      "if (vfs_select_inode(old_dentry, 0) == vfs_select_inode(new_dentry, 0"
    ],
    "removed_lines": [
      "if (source == target"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "proceeds with post-rename operations after an OverlayFS file is renamed to a self-hardlink"
    ]
  },
  {
    "index": 714,
    "id": "CVE-2016-6197",
    "commit_id": "11f3710417d026ea2f4fcf362d866342c5274185",
    "added_lines": [
      "struct dentry *upper",
      "upper = lookup_one_len(dentry->d_name.name, upperdir,",
      "dentry->d_name.len",
      "err = PTR_ERR(upper",
      "if (IS_ERR(upper",
      "goto out_unlock",
      "if (upper == ovl_dentry_upper(dentry))",
      "dput(upper",
      "out_unlock:",
      "olddentry = lookup_one_len(old->d_name.name, old_upperdir,",
      "old->d_name.len",
      "err = PTR_ERR(olddentry",
      "if (IS_ERR(olddentry",
      "goto out_unlock",
      "err = -ESTALE",
      "if (olddentry != ovl_dentry_upper(old",
      "goto out_dput_old",
      "newdentry = lookup_one_len(new->d_name.name, new_upperdir,",
      "new->d_name.len",
      "err = PTR_ERR(newdentry",
      "if (IS_ERR(newdentry",
      "goto out_dput_old",
      "err = -ESTALE",
      "if (ovl_dentry_upper(new))",
      "if (newdentry != opaquedir",
      "goto out_dput",
      "if (newdentry != ovl_dentry_upper(new",
      "goto out_dput",
      "if (!d_is_negative(newdentry) &&",
      "(!new_opaque || !ovl_is_whiteout(newdentry",
      "goto out_dput",
      "out_dput_old:",
      "dput(olddentry"
    ],
    "removed_lines": [
      "struct dentry *upper = ovl_dentry_upper(dentry",
      "if (upper->d_parent == upperdir)",
      "dget(upper",
      "dput(upper",
      "olddentry = ovl_dentry_upper(old",
      "newdentry = ovl_dentry_upper(new",
      "if (newdentry)",
      "newdentry = opaquedir",
      "opaquedir = NULL",
      "dget(newdentry",
      "newdentry = lookup_one_len(new->d_name.name, new_upperdir,",
      "new->d_name.len",
      "err = PTR_ERR(newdentry",
      "if (IS_ERR(newdentry",
      "goto out_unlock",
      "err = -ESTALE",
      "if (olddentry->d_parent != old_upperdir",
      "goto out_dput",
      "if (newdentry->d_parent != new_upperdir",
      "goto out_dput"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly verify the upper dentry before proceeding with unlink and rename system-call processing"
    ]
  },
  {
    "index": 716,
    "id": "CVE-2016-6156",
    "commit_id": "096cdc6f52225835ff503f987a0d68ef770bb78e",
    "added_lines": [
      "if (u_cmd.outsize != s_cmd->outsize ||",
      "u_cmd.insize != s_cmd->insize)",
      "ret = -EINVAL",
      "goto exit",
      "if (copy_to_user(arg, s_cmd, sizeof(*s_cmd) + s_cmd->insize"
    ],
    "removed_lines": [
      "if (copy_to_user(arg, s_cmd, sizeof(*s_cmd) + u_cmd.insize"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 1.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "*double fetch* vulnerability",
      "out-of-bounds",
      "race condition"
    ]
  },
  {
    "index": 719,
    "id": "CVE-2016-6128",
    "commit_id": "6ff72ae40c7c20ece939afb362d98cc37f4a1c96",
    "added_lines": [
      "#include <stdio.h>",
      "#include <stdlib.h>",
      "#include \"gd.h\"",
      "#include \"gdtest.h\"",
      "int main",
      "gdImagePtr im, exp",
      "int error = 0",
      "im = gdImageCreate(50, 50",
      "if (!im)",
      "gdTestErrorMsg(\"gdImageCreate failed.\\n\"",
      "return 1",
      "gdImageCropThreshold(im, 1337, 0",
      "gdImageDestroy(im",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 723,
    "id": "CVE-2016-5773",
    "commit_id": "f6aef68089221c5ea047d4a74224ee3deead99a6?w=1",
    "added_lines": [
      "static HashTable *php_zip_get_gc(zval *object, zval ***gc_data, int *gc_data_count TSRMLS_DC)",
      "return zend_std_get_properties(object TSRMLS_CC",
      "zip_object_handlers.get_gc          = php_zip_get_gc"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 724,
    "id": "CVE-2016-5772",
    "commit_id": "a44c89e8af7c2410f4bfc5e097be2a5d0639a60c?w=1",
    "added_lines": [
      "if(!ent->data)",
      "break",
      "ent->varname = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 725,
    "id": "CVE-2016-5771",
    "commit_id": "3f627e580acfdaf0595ae3b115b8bec677f203ee?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72433: Use After Free Vulnerability in PHP's GC algorithm and unserialize",
      "--FILE--",
      "<?php",
      "$filler = array",
      "for($i = 0; $i < 100; $i++",
      "$filler[] = \"\"",
      "$serialized_payload = 'a:3:{i:0;r:1;i:1;r:1;i:2;C:11:\"ArrayObject\":19:{x:i:0;r:1;;m:a:0:{}}}'",
      "$free_me = unserialize($serialized_payload",
      "$inc_ref_by_one = $free_me[2]",
      "gc_collect_cycles",
      "$fill_freed_space_1 = \"filler_zval_1\"",
      "$fill_freed_space_2 = \"filler_zval_2\"",
      "var_dump($free_me",
      "?>",
      "--EXPECTF--",
      "array(3)",
      "[0]=>",
      "[1]=>",
      "[2]=>",
      "object(ArrayObject)#%d (1)",
      "[\"storage\":\"ArrayObject\":private]=>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 728,
    "id": "CVE-2016-5768",
    "commit_id": "5b597a2e5b28e2d5a52fc1be13f425f08f47cb62?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72402: _php_mb_regex_ereg_replace_exec - double free",
      "--SKIPIF--",
      "<?php extension_loaded('mbstring') or die('skip mbstring not available'); ?>",
      "--FILE--",
      "<?php",
      "function throwit()",
      "throw new Exception('it'",
      "$var10 = \"throwit\"",
      "try",
      "$var14 = mb_ereg_replace_callback(\"\", $var10, \"\"",
      "} catch(Exception $e)",
      "?>",
      "DONE",
      "--EXPECT--",
      "DONE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "MEM_FREE",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 735,
    "id": "CVE-2016-5427",
    "commit_id": "881b5b03a590198d03008e4200dd00cc537712f3",
    "added_lines": [
      "bool escaped = false",
      "const string::size_type domainLen = domain.length",
      "for (size_t fdot = 0; fdot < domainLen; fdot++",
      "if (domain[fdot] == '.' && !escaped)",
      "string::size_type remain = domainLen - (fdot + 1",
      "char tmp[remain]",
      "memcpy(tmp, domain.c_str()+fdot+1, remain",
      "domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-",
      "return true",
      "else if (domain[fdot] == '\\\\' && !escaped)",
      "escaped = true",
      "else",
      "escaped = false",
      "domain = \"\"",
      "bool escaped = false",
      "const string::size_type domainLen = domain.length",
      "for (size_t fdot = 0; fdot < domainLen; fdot++",
      "if (domain[fdot] == '.' && !escaped)",
      "if (fdot==domain.size()-1)",
      "domain=\".\"",
      "else",
      "string::size_type remain = domainLen - (fdot + 1",
      "char tmp[remain]",
      "memcpy(tmp, domain.c_str()+fdot+1, remain",
      "domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-",
      "return true",
      "else if (domain[fdot] == '\\\\' && !escaped)",
      "escaped = true",
      "else",
      "escaped = false",
      "return false"
    ],
    "removed_lines": [
      "string::size_type fdot=domain.find('.'",
      "if(fdot==string::npos",
      "domain=\"\"",
      "else",
      "string::size_type remain = domain.length() - (fdot + 1",
      "char tmp[remain]",
      "memcpy(tmp, domain.c_str()+fdot+1, remain",
      "domain.assign(tmp, remain); // don't dare to do this w/o tmp holder :-",
      "string::size_type fdot=domain.find('.'",
      "if(fdot == string::npos",
      "return false",
      "if(fdot==domain.size()-1",
      "domain=\".\"",
      "else",
      "string::size_type remain = domain.length() - (fdot + 1",
      "char tmp[remain]",
      "memcpy(tmp, domain.c_str()+fdot+1, remain",
      "domain.assign(tmp, remain",
      "return true"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle a . (dot) inside labels"
    ]
  },
  {
    "index": 737,
    "id": "CVE-2016-5412",
    "commit_id": "93d17397e4e2182fdaad503e2f9da46202c0f1c3",
    "added_lines": [
      "#ifdef CONFIG_PPC_TRANSACTIONAL_MEM",
      "BEGIN_FTR_SECTION",
      "ld\tr9, HSTATE_KVM_VCPU(r13",
      "bl\tkvmppc_save_tm",
      "END_FTR_SECTION_IFSET(CPU_FTR_TM",
      "#endif",
      "#ifdef CONFIG_PPC_TRANSACTIONAL_MEM",
      "BEGIN_FTR_SECTION",
      "bl\tkvmppc_restore_tm",
      "END_FTR_SECTION_IFSET(CPU_FTR_TM",
      "#endif"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 739,
    "id": "CVE-2016-5361",
    "commit_id": "152d6d95632d8b9477c170f1de99bcd86d7fb1d6",
    "added_lines": [
      "EVENT_NULL, main_inI1_outR1 },",
      "EVENT_NULL, aggr_inI1_outR1 },",
      "EVENT_v1_RETRANSMIT, xauth_inI0 },",
      "EVENT_v1_RETRANSMIT, xauth_inI1 },"
    ],
    "removed_lines": [
      "EVENT_v1_RETRANSMIT, main_inI1_outR1 },",
      "EVENT_v1_RETRANSMIT, aggr_inI1_outR1 },",
      "EVENT_SA_REPLACE, xauth_inI0 },",
      "EVENT_SA_REPLACE, xauth_inI1 },"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "retransmits in initial-responder states"
    ]
  },
  {
    "index": 741,
    "id": "CVE-2016-5358",
    "commit_id": "2c13e97d656c1c0ac4d76eb9d307664aae0e0cf7",
    "added_lines": [
      "struct eth_phdr eth",
      "void *phdr",
      "switch (linktype)",
      "case WTAP_ENCAP_ETHERNET:",
      "eth.fcs_len = -1;",
      "phdr = &eth",
      "break",
      "default:",
      "phdr = NULL",
      "break",
      "dissector_try_uint_new(wtap_encap_dissector_table, linktype, new_tvb, pinfo, top_tree, TRUE, phdr"
    ],
    "removed_lines": [
      "dissector_try_uint(wtap_encap_dissector_table, linktype, new_tvb, pinfo, top_tree"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the packet-header data type"
    ]
  },
  {
    "index": 742,
    "id": "CVE-2016-5357",
    "commit_id": "6a140eca7b78b230f1f90a739a32257476513c78",
    "added_lines": [],
    "removed_lines": [
      "#define NETSCREEN_MAX_PACKET_LEN\t65536"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles sscanf unsigned-integer processing"
    ]
  },
  {
    "index": 744,
    "id": "CVE-2016-5355",
    "commit_id": "3270dfac43da861c714df76513456b46765ff47f",
    "added_lines": [
      "int\tpkt_len, pktnum, hr, min, sec, csec",
      "num_items_scanned = sscanf(line+64, \"LEN=%9d\", &pkt_len",
      "if (pkt_len < 0)",
      "return FALSE"
    ],
    "removed_lines": [
      "guint\tpkt_len",
      "int\tpktnum, hr, min, sec, csec",
      "num_items_scanned = sscanf(line+64, \"LEN=%9u\", &pkt_len"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles sscanf unsigned-integer processing"
    ]
  },
  {
    "index": 745,
    "id": "CVE-2016-5354",
    "commit_id": "2cb5985bf47bdc8bea78d28483ed224abdd33dc6",
    "added_lines": [
      "enum usb_conv_class_data_type {USB_CONV_UNKNOWN = 0, USB_CONV_U3V, USB_CONV_AUDIO, USB_CONV_VIDEO, USB_CONV_MASS_STORAGE",
      "void *class_data;",
      "enum usb_conv_class_data_type class_data_type"
    ],
    "removed_lines": [
      "void *class_data;"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles class types"
    ]
  },
  {
    "index": 746,
    "id": "CVE-2016-5353",
    "commit_id": "7d7190695ce2ff269fdffb04e87139995cde21f4",
    "added_lines": [
      "c_t = (tvb_get_bits8(tvb, tb_bit_off, 4) + 1) % 0xf;",
      "macinf->lchid[j+chan] = c_t",
      "macinf->content[j+chan] = lchId_type_table[c_t];",
      "rlcinf->mode[j+chan] = lchId_rlc_map[c_t];"
    ],
    "removed_lines": [
      "c_t = tvb_get_bits8(tvb, tb_bit_off, 4);",
      "macinf->lchid[j+chan] = c_t+1",
      "macinf->content[j+chan] = lchId_type_table[c_t+1];",
      "rlcinf->mode[j+chan] = lchId_rlc_map[c_t+1];"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the reserved C/T value"
    ]
  },
  {
    "index": 747,
    "id": "CVE-2016-5352",
    "commit_id": "b6d838eebf4456192360654092e5587c5207f185",
    "added_lines": [
      "if ((key_bytes_len < GROUP_KEY_MIN_LEN) ||",
      "(eapol_len < sizeof(EAPOL_RSN_KEY)) ||",
      "(key_bytes_len > eapol_len - sizeof(EAPOL_RSN_KEY)))"
    ],
    "removed_lines": [
      "if (key_bytes_len < GROUP_KEY_MIN_LEN || key_bytes_len > eapol_len - sizeof(EAPOL_RSN_KEY))"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles certain length values"
    ]
  },
  {
    "index": 748,
    "id": "CVE-2016-5351",
    "commit_id": "9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4",
    "added_lines": [
      "if (((tot_len-offset-4) < bodyLength) || (bodyLength < sizeof(EAPOL_RSN_KEY))) {"
    ],
    "removed_lines": [
      "if ((tot_len-offset-4) < bodyLength) {"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the lack of an EAPOL_RSN_KEY"
    ]
  },
  {
    "index": 749,
    "id": "CVE-2016-5350",
    "commit_id": "b4d16b4495b732888e12baf5b8a7e9bf2665e22b",
    "added_lines": [
      "remaining = tvb_reported_length_remaining(tvb, offset",
      "while (offset > 0 && offset < end_offset)"
    ],
    "removed_lines": [
      "remaining = tvb_captured_length_remaining(tvb, offset",
      "while (offset < end_offset"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 759,
    "id": "CVE-2016-5093",
    "commit_id": "97eff7eb57fc2320c267a949cffd622c38712484?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72241: get_icu_value_internal out-of-bounds read",
      "--SKIPIF--",
      "<?php if( !extension_loaded( 'intl' ) ) print 'skip'; ?>",
      "--FILE--",
      "<?php",
      "$var1=str_repeat(\"A\", 1000",
      "$out = locale_get_primary_language($var1",
      "echo strlen($out) . PHP_EOL",
      "echo unpack('H*', $out)[1] . PHP_EOL",
      "--EXPECT--",
      "1000",

    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "'0' character",
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 760,
    "id": "CVE-2016-5009",
    "commit_id": "957ece7e95d8f8746191fd9629622d4457d690d6",
    "added_lines": [
      "cmd[0] = (char *)\"\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"{}\", 2, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{\\\"abc\\\":\\\"something\\\"}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{\\\"prefix\\\":\\\"\\\"}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{\\\"prefix\\\":\\\"    \\\"}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{\\\"prefix\\\":\\\";;;,,,;;,,\\\"}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st",
      "cmd[0] = (char *)\"{\\\"prefix\\\":\\\"extra command\\\"}\"",
      "ASSERT_EQ(-EINVAL, rados_mon_command(cluster, (const char **)cmd, 1, \"\", 0, &buf, &buflen, &st, &stlen",
      "rados_buffer_free(buf",
      "rados_buffer_free(st"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 762,
    "id": "CVE-2016-4997",
    "commit_id": "ce683e5f9d045e5d67d1312a42b359cb2ab2a13c",
    "added_lines": [
      "int xt_compat_check_entry_offsets(const void *base, const char *elems,",
      "long size_of_base_struct = elems - (const char *)base",
      "if (target_offset < size_of_base_struct",
      "return -EINVAL",
      "const char *elems,",
      "long size_of_base_struct = elems - (const char *)base",
      "if (target_offset < size_of_base_struct",
      "return -EINVAL"
    ],
    "removed_lines": [
      "int xt_compat_check_entry_offsets(const void *base,"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "in-container root access to provide a crafted offset value that triggers an unintended decrement"
    ]
  },
  {
    "index": 764,
    "id": "CVE-2016-4951",
    "commit_id": "45e093ae2830cd1264677d47ff9a95a71f5d9f9c",
    "added_lines": [
      "if (!attrs[TIPC_NLA_SOCK]",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 766,
    "id": "CVE-2016-4817",
    "commit_id": "1c0808d580da09fdec5a9a74ff09e103ea058dd4",
    "added_lines": [
      "static int close_connection(h2o_http2_conn_t *conn",
      "int close_connection(h2o_http2_conn_t *conn",
      "return -1",
      "return 0",
      "static int parse_input(h2o_http2_conn_t *conn",
      "return close_connection(conn",
      "return 0",
      "return 0",
      "if (parse_input(conn) != 0",
      "return"
    ],
    "removed_lines": [
      "static void close_connection(h2o_http2_conn_t *conn",
      "void close_connection(h2o_http2_conn_t *conn",
      "static void parse_input(h2o_http2_conn_t *conn",
      "close_connection(conn",
      "return",
      "return",
      "parse_input(conn"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS ExecCode",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 767,
    "id": "CVE-2016-4809",
    "commit_id": "fd7e0c02",
    "added_lines": [
      "if (cpio->entry_bytes_remaining > 1024 * 1024)",
      "archive_set_error(&a->archive, ENOMEM,",
      "\"Rejecting malformed cpio archive: symlink contents exceed 1 megabyte\"",
      "return (ARCHIVE_FATAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 768,
    "id": "CVE-2016-4805",
    "commit_id": "1f461dcdd296eecedaffffc6bae2bfa90bd7eb89",
    "added_lines": [
      "pch->chan_net = get_net(net",
      "put_net(pch->chan_net",
      "pch->chan_net = NULL"
    ],
    "removed_lines": [
      "pch->chan_net = net"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 770,
    "id": "CVE-2016-4581",
    "commit_id": "5ec0811d30378ae104f250bfc9b3640242d81e3f",
    "added_lines": [
      "static struct mount *last_dest, *first_source, *last_source, *dest_master",
      "bool done",
      "if (p == dest_master || IS_MNT_MARKED(p",
      "do",
      "struct mount *parent = last_source->mnt_parent",
      "if (last_source == first_source",
      "break",
      "done = parent->mnt_master == p",
      "if (done && peers(n, parent",
      "break",
      "last_source = last_source->mnt_master",
      "} while (!done",
      "first_source = source_mnt"
    ],
    "removed_lines": [
      "static struct mount *last_dest, *last_source, *dest_master",
      "if (p == dest_master || IS_MNT_MARKED(p))",
      "while (last_dest->mnt_master != p)",
      "last_source = last_source->mnt_master",
      "last_dest = last_source->mnt_parent",
      "if (!peers(n, last_dest))",
      "last_source = last_source->mnt_master",
      "last_dest = last_source->mnt_parent"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 775,
    "id": "CVE-2016-4565",
    "commit_id": "e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3",
    "added_lines": [
      "#include <linux/sched.h>",
      "static inline bool ib_safe_file_access(struct file *filp",
      "return filp->f_cred == current_cred() && segment_eq(get_fs(), USER_DS"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "incorrectly relies on the write system call"
    ]
  },
  {
    "index": 777,
    "id": "CVE-2016-4558",
    "commit_id": "92117d8443bc5afacc8d5ba82e541946310f106e",
    "added_lines": [
      "map = bpf_map_inc(map, false",
      "if (IS_ERR(map))",
      "fdput(f",
      "return PTR_ERR(map",
      "env->used_maps[env->used_map_cnt++] = map"
    ],
    "removed_lines": [
      "env->used_maps[env->used_map_cnt++] = map",
      "bpf_map_inc(map, false"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 778,
    "id": "CVE-2016-4557",
    "commit_id": "8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7",
    "added_lines": [],
    "removed_lines": [
      "fdput(f"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 783,
    "id": "CVE-2016-4470",
    "commit_id": "38327424b40bcebe2de92d07312c89360ac9229a",
    "added_lines": [
      "if (keyring && link_ret == 0"
    ],
    "removed_lines": [
      "if (keyring"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that a certain data structure is initialized"
    ]
  },
  {
    "index": 784,
    "id": "CVE-2016-4440",
    "commit_id": "3ce424e45411cf5a13105e0386b6ecf6eeb4f66f",
    "added_lines": [
      "else if (cpu_has_secondary_exec_ctrls() &&",
      "(vmcs_read32(SECONDARY_VM_EXEC_CONTROL) &",
      "SECONDARY_EXEC_VIRTUALIZE_X2APIC_MODE))",
      "if (cpu_has_secondary_exec_ctrls())",
      "if (kvm_vcpu_apicv_active(vcpu",
      "vmcs_set_bits(SECONDARY_VM_EXEC_CONTROL,",
      "SECONDARY_EXEC_APIC_REGISTER_VIRT |",
      "SECONDARY_EXEC_VIRTUAL_INTR_DELIVERY",
      "else",
      "vmcs_clear_bits(SECONDARY_VM_EXEC_CONTROL,",
      "SECONDARY_EXEC_APIC_REGISTER_VIRT |",
      "SECONDARY_EXEC_VIRTUAL_INTR_DELIVERY",
      "if (cpu_has_vmx_msr_bitmap",
      "vmx_set_msr_bitmap(vcpu",
      "for (msr = 0x800; msr <= 0x8ff; msr++",
      "vmx_disable_intercept_msr_read_x2apic(msr",
      "vmx_enable_intercept_msr_read_x2apic(0x802",
      "vmx_enable_intercept_msr_read_x2apic(0x839",
      "vmx_disable_intercept_msr_write_x2apic(0x808",
      "vmx_disable_intercept_msr_write_x2apic(0x80b",
      "vmx_disable_intercept_msr_write_x2apic(0x83f"
    ],
    "removed_lines": [
      "else if (vcpu->arch.apic_base & X2APIC_ENABLE)",
      "if (enable_apicv)",
      "for (msr = 0x800; msr <= 0x8ff; msr++",
      "vmx_disable_intercept_msr_read_x2apic(msr",
      "vmx_enable_intercept_msr_read_x2apic(0x802",
      "vmx_enable_intercept_msr_read_x2apic(0x839",
      "vmx_disable_intercept_msr_write_x2apic(0x808",
      "vmx_disable_intercept_msr_write_x2apic(0x80b",
      "vmx_disable_intercept_msr_write_x2apic(0x83f"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS ExecCode",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "mishandles the APICv on/off state"
    ]
  },
  {
    "index": 785,
    "id": "CVE-2016-4425",
    "commit_id": "64ce0ad3731ebd77e02897b07920eadd0e2cc318",
    "added_lines": [

    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "recursion",
      "stack consumption"
    ]
  },
  {
    "index": 786,
    "id": "CVE-2016-4414",
    "commit_id": "e678873",
    "added_lines": [
      "while (socket()->bytesAvailable() >= 4 && _supportedProtos.size() < 16) { // sanity check",
      "if (!peer)",
      "qWarning() << \"Received invalid handshake data from client\" << socket()->peerAddress().toString",
      "close",
      "return"
    ],
    "removed_lines": [
      "while (socket()->bytesAvailable() >= 4)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 792,
    "id": "CVE-2016-3951",
    "commit_id": "4d06dd537f95683aba3651098ae288b7cbff8274",
    "added_lines": [
      "return cdc_ncm_bind_common(dev, intf, CDC_NCM_DATA_ALTSETTING_NCM, 0",
      ".flags = FLAG_POINTTOPOINT | FLAG_NO_SETINT | FLAG_MULTI_PACKET",
      "| FLAG_LINK_INTR,",
      "| FLAG_LINK_INTR | FLAG_WWAN,",
      "| FLAG_LINK_INTR | FLAG_WWAN | FLAG_NOARP,"
    ],
    "removed_lines": [
      "int ret",
      "ret = cdc_ncm_bind_common(dev, intf, CDC_NCM_DATA_ALTSETTING_NCM, 0",
      "usbnet_link_change(dev, 0, 0",
      "return ret",
      ".flags = FLAG_POINTTOPOINT | FLAG_NO_SETINT | FLAG_MULTI_PACKET,",
      "| FLAG_WWAN,",
      "| FLAG_WWAN | FLAG_NOARP,"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 793,
    "id": "CVE-2016-3841",
    "commit_id": "45f6fad84cc305103b28d73482b344d7f5b76f39",
    "added_lines": [
      "struct ipv6_txoptions *opt_to_free = NULL",
      "if (!opt)",
      "opt = txopt_get(np",
      "opt_to_free = opt",
      "txopt_put(opt_to_free"
    ],
    "removed_lines": [
      "if (opt == NULL",
      "opt = np->opt"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 794,
    "id": "CVE-2016-3713",
    "commit_id": "9842df62004f366b9fed2423e24df10542ee0dc5",
    "added_lines": [],
    "removed_lines": [
      "case 0x2f8:",
      "return true"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 5.6,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "RETURN"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 796,
    "id": "CVE-2016-3698",
    "commit_id": "a4892df306e0532487f1634ba6d4c6d4bb381c7f",
    "added_lines": [
      "struct in6_addr *addr, uint32_t *ifindex, int *hoplimit",
      "unsigned char cbuf[2 * CMSG_SPACE(sizeof(struct in6_pktinfo))]",
      "if (cmsghdr->cmsg_level != IPPROTO_IPV6",
      "continue",
      "switch(cmsghdr->cmsg_type)",
      "case IPV6_PKTINFO:",
      "if (cmsghdr->cmsg_len == CMSG_LEN(sizeof(struct in6_pktinfo)))",
      "struct in6_pktinfo *pktinfo",
      "pktinfo = (struct in6_pktinfo *) CMSG_DATA(cmsghdr",
      "break",
      "case IPV6_HOPLIMIT:",
      "if (cmsghdr->cmsg_len == CMSG_LEN(sizeof(int)))",
      "int *val",
      "val = (int *) CMSG_DATA(cmsghdr",
      "break",
      "val = 1",
      "ret = setsockopt(sock, IPPROTO_IPV6, IPV6_RECVHOPLIMIT,",
      "&val, sizeof(val",
      "if (ret == -1)",
      "err(ndp, \"Failed to setsockopt IPV6_RECVHOPLIMIT,.\"",
      "err = -errno",
      "goto close_sock",
      "int\t\t\t\thoplimit",
      "&msg->addrto, &msg->ifindex, &msg->hoplimit",
      "dbg(ndp, \"rcvd from: %s, ifindex: %u, hoplimit: %d\",",
      "str_in6_addr(&msg->addrto), msg->ifindex, msg->hoplimit",
      "if (msg->hoplimit != 255)",
      "warn(ndp, \"ignoring packet with bad hop limit (%d)\", msg->hoplimit",
      "err = 0",
      "goto free_msg"
    ],
    "removed_lines": [
      "struct in6_addr *addr, uint32_t *ifindex",
      "unsigned char cbuf[CMSG_SPACE(sizeof(struct in6_pktinfo))]",
      "if (cmsghdr->cmsg_level == IPPROTO_IPV6 &&",
      "cmsghdr->cmsg_type == IPV6_PKTINFO &&",
      "cmsghdr->cmsg_len == CMSG_LEN(sizeof(struct in6_pktinfo)))",
      "struct in6_pktinfo *pktinfo",
      "pktinfo = (struct in6_pktinfo *) CMSG_DATA(cmsghdr",
      "&msg->addrto, &msg->ifindex",
      "dbg(ndp, \"rcvd from: %s, ifindex: %u\",",
      "str_in6_addr(&msg->addrto), msg->ifindex"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate the origin of Neighbor Discovery Protocol (NDP) messages"
    ]
  },
  {
    "index": 797,
    "id": "CVE-2016-3689",
    "commit_id": "a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff",
    "added_lines": [
      "if (!pcu->ctrl_intf",
      "return -EINVAL",
      "if (!pcu->data_intf",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 799,
    "id": "CVE-2016-3156",
    "commit_id": "fbd40ea0180a2d328c5adc61414dc8bab9335ce2",
    "added_lines": [
      "struct in_device *idev = ((struct in_ifaddr *)ptr)->ifa_dev",
      "if (idev->dead",
      "return NOTIFY_DONE",
      "netdev_notifier_info_init(&info, idev->dev"
    ],
    "removed_lines": [
      "struct net_device *dev = ((struct in_ifaddr *)ptr)->ifa_dev->dev",
      "netdev_notifier_info_init(&info, dev"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles destruction of device objects"
    ]
  },
  {
    "index": 800,
    "id": "CVE-2016-3140",
    "commit_id": "5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f",
    "added_lines": [
      "struct device *dev = &serial->interface->dev",
      "int i",
      "if (serial->num_port_pointers < serial->type->num_ports + 1)",
      "dev_err(dev, \"OOB endpoints missing\\n\"",
      "return -ENODEV",
      "for (i = 0; i < serial->type->num_ports + 1 ; i++)",
      "if (!serial->port[i]->read_urb)",
      "dev_err(dev, \"bulk-in endpoint missing\\n\"",
      "return -ENODEV",
      "if (!serial->port[i]->write_urb)",
      "dev_err(dev, \"bulk-out endpoint missing\\n\"",
      "return -ENODEV"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 801,
    "id": "CVE-2016-3139",
    "commit_id": "471d17148c8b4174ac5f5283a73316d12c4379bc",
    "added_lines": [],
    "removed_lines": [
      "# Multipart objects.",
      "wacom-objs\t:= wacom_wac.o wacom_sys.o",
      "obj-$(CONFIG_TABLET_USB_WACOM)\t+= wacom.o"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 802,
    "id": "CVE-2016-3138",
    "commit_id": "8835ba4a39cf53f705417b3b3a94eb067673f2c9",
    "added_lines": [
      "if (!data_interface || !control_interface",
      "return -ENODEV"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 803,
    "id": "CVE-2016-3137",
    "commit_id": "c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754",
    "added_lines": [
      "if (!port->interrupt_out_urb || !port->interrupt_in_urb)",
      "dev_err(&port->dev, \"required endpoint is missing\\n\"",
      "return -ENODEV"
    ],
    "removed_lines": [
      "if (!port->interrupt_in_urb)",
      "dev_err(&port->dev, \"%s - interrupt_in_urb is empty!\\n\",",
      "__func__",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 804,
    "id": "CVE-2016-3136",
    "commit_id": "4e9a0b05257f29cf4b75f3209243ed71614d062e",
    "added_lines": [
      "struct usb_serial *serial = port->serial",
      "if (!serial->port[1] || !serial->port[1]->interrupt_in_urb)",
      "dev_err(&port->dev, \"expected endpoint missing\\n\"",
      "return -ENODEV",
      "priv->read_urb = serial->port[1]->interrupt_in_urb"
    ],
    "removed_lines": [
      "priv->read_urb = port->serial->port[1]->interrupt_in_urb"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 808,
    "id": "CVE-2016-3120",
    "commit_id": "93b4a6306a0026cf1cc31ac4bd8a49ba5d034ba7",
    "added_lines": [
      "# Regression test for #8458: S4U2Self requests crash the KDC if",
      "# anonymous is restricted.",
      "realm.kinit(realm.host_princ, flags=['-k']",
      "realm.run([kvno, '-U', 'user', realm.host_princ]"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 809,
    "id": "CVE-2016-3119",
    "commit_id": "08c642c09c38a9c6454ab43a9b53b2a89b9eef99",
    "added_lines": [
      "arg = (arg != NULL) ? arg : \"\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 3.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 812,
    "id": "CVE-2016-3070",
    "commit_id": "42cb14b110a5698ccf26ce59c4441722605a3743",
    "added_lines": [
      "#include <linux/backing-dev.h>",
      "struct zone *oldzone, *newzone",
      "int dirty",
      "oldzone = page_zone(page",
      "newzone = page_zone(newpage",
      "dirty = PageDirty(page",
      "if (dirty)",
      "ClearPageDirty(page",
      "SetPageDirty(newpage",
      "spin_unlock(&mapping->tree_lock",
      "if (newzone != oldzone)",
      "__dec_zone_state(oldzone, NR_FILE_PAGES",
      "__inc_zone_state(newzone, NR_FILE_PAGES",
      "if (PageSwapBacked(page) && !PageSwapCache(page))",
      "__dec_zone_state(oldzone, NR_SHMEM",
      "__inc_zone_state(newzone, NR_SHMEM",
      "if (dirty && mapping_cap_account_dirty(mapping))",
      "__dec_zone_state(oldzone, NR_FILE_DIRTY",
      "__inc_zone_state(newzone, NR_FILE_DIRTY",
      "local_irq_enable",
      "if (PageDirty(page",
      "SetPageDirty(newpage"
    ],
    "removed_lines": [
      "__dec_zone_page_state(page, NR_FILE_PAGES",
      "__inc_zone_page_state(newpage, NR_FILE_PAGES",
      "if (!PageSwapCache(page) && PageSwapBacked(page))",
      "__dec_zone_page_state(page, NR_SHMEM",
      "__inc_zone_page_state(newpage, NR_SHMEM",
      "spin_unlock_irq(&mapping->tree_lock",
      "if (PageDirty(page))",
      "clear_page_dirty_for_io(page",
      "if (PageSwapBacked(page",
      "SetPageDirty(newpage",
      "else",
      "__set_page_dirty_nobuffers(newpage"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 814,
    "id": "CVE-2016-2847",
    "commit_id": "759c01142a5d0f364a462346168a56de28a80f52",
    "added_lines": [
      ".procname\t= \"pipe-user-pages-hard\",",
      ".data\t\t= &pipe_user_pages_hard,",
      ".maxlen\t\t= sizeof(pipe_user_pages_hard),",
      ".mode\t\t= 0644,",
      ".proc_handler\t= proc_doulongvec_minmax,",
      "},",
      ".procname\t= \"pipe-user-pages-soft\",",
      ".data\t\t= &pipe_user_pages_soft,",
      ".maxlen\t\t= sizeof(pipe_user_pages_soft),",
      ".mode\t\t= 0644,",
      ".proc_handler\t= proc_doulongvec_minmax,",
      "},"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not limit the amount of unread data in pipes"
    ]
  },
  {
    "index": 815,
    "id": "CVE-2016-2782",
    "commit_id": "cac9b50b0d75a1d50d6c056ff65c005f3224c8e0",
    "added_lines": [
      "if (serial->num_bulk_in < 2 || serial->num_interrupt_in < 2)",
      "dev_err(&serial->interface->dev, \"missing endpoints\\n\"",
      "return -ENODEV"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 816,
    "id": "CVE-2016-2550",
    "commit_id": "415e3d3e90ce9e18727e8843ae343eda5a58fad6",
    "added_lines": [
      "void unix_inflight(struct user_struct *user, struct file *fp",
      "user->unix_inflight++",
      "void unix_notinflight(struct user_struct *user, struct file *fp",
      "user->unix_inflight--"
    ],
    "removed_lines": [
      "void unix_inflight(struct file *fp",
      "fp->f_cred->user->unix_inflight++",
      "void unix_notinflight(struct file *fp",
      "fp->f_cred->user->unix_inflight--"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS Bypass",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS Bypass ",
    "summary": [
      "incorrect tracking of descriptor ownership and sending each descriptor over a UNIX socket before closing it"
    ]
  },
  {
    "index": 817,
    "id": "CVE-2016-2549",
    "commit_id": "2ba1fe7a06d3624f9a7586d672b55f08f7c670f3",
    "added_lines": [
      "hrtimer_try_to_cancel(&stime->hrt",
      "hrtimer_try_to_cancel(&stime->hrt"
    ],
    "removed_lines": [
      "hrtimer_cancel(&stime->hrt"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 818,
    "id": "CVE-2016-2548",
    "commit_id": "b5a663aa426f4884c71cd8580adae73f33570f0d",
    "added_lines": [
      "spin_lock(&master->timer->lock",
      "spin_unlock(&master->timer->lock",
      "spin_lock_irq(&slave_active_lock",
      "spin_lock(&timer->lock",
      "list_del_init(&slave->ack_list",
      "list_del_init(&slave->active_list",
      "spin_unlock(&timer->lock",
      "spin_unlock_irq(&slave_active_lock",
      "if (timeri->master && timeri->timer)",
      "spin_lock(&timeri->timer->lock",
      "spin_unlock(&timeri->timer->lock",
      "list_del_init(&timeri->ack_list",
      "list_del_init(&timeri->active_list"
    ],
    "removed_lines": [
      "spin_lock_irq(&slave_active_lock",
      "_snd_timer_stop(slave, 1, SNDRV_TIMER_EVENT_RESOLUTION",
      "spin_unlock_irq(&slave_active_lock",
      "if (timeri->master"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call"
    ]
  },
  {
    "index": 819,
    "id": "CVE-2016-2546",
    "commit_id": "af368027a49a751d6ff4ee9e3f9961f35bb4fede",
    "added_lines": [
      "struct mutex ioctl_lock",
      "mutex_init(&tu->ioctl_lock",
      "mutex_lock(&tu->ioctl_lock",
      "mutex_unlock(&tu->ioctl_lock",
      "static long __snd_timer_user_ioctl(struct file *file, unsigned int cmd,",
      "if (tu->timeri)",
      "if (get_user(xarg, p",
      "static long snd_timer_user_ioctl(struct file *file, unsigned int cmd,",
      "unsigned long arg",
      "struct snd_timer_user *tu = file->private_data",
      "long ret",
      "mutex_lock(&tu->ioctl_lock",
      "ret = __snd_timer_user_ioctl(file, cmd, arg",
      "mutex_unlock(&tu->ioctl_lock",
      "return ret"
    ],
    "removed_lines": [
      "struct mutex tread_sem",
      "mutex_init(&tu->tread_sem",
      "mutex_lock(&tu->tread_sem",
      "mutex_unlock(&tu->tread_sem",
      "static long snd_timer_user_ioctl(struct file *file, unsigned int cmd,",
      "mutex_lock(&tu->tread_sem",
      "if (tu->timeri)\t{",
      "mutex_unlock(&tu->tread_sem",
      "if (get_user(xarg, p))",
      "mutex_unlock(&tu->tread_sem",
      "mutex_unlock(&tu->tread_sem"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 820,
    "id": "CVE-2016-2545",
    "commit_id": "ee8413b01045c74340aa13ad5bdf905de32be736",
    "added_lines": [
      "list_del_init(&ti->active_list"
    ],
    "removed_lines": [
      "list_del(&ti->active_list"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "race condition"
    ]
  },
  {
    "index": 821,
    "id": "CVE-2016-2544",
    "commit_id": "3567eb6af614dac436c4b16a8d426f9faed639b3",
    "added_lines": [
      "mutex_lock(&q->timer_mutex",
      "mutex_unlock(&q->timer_mutex"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 822,
    "id": "CVE-2016-2543",
    "commit_id": "030e2c78d3a91dd0d27fef37e91950dde333eba1",
    "added_lines": [
      "if (client->type == USER_CLIENT && client->data.user.fifo"
    ],
    "removed_lines": [
      "if (client->type == USER_CLIENT"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference"
    ]
  },
  {
    "index": 824,
    "id": "CVE-2016-2384",
    "commit_id": "07d86ca93db7e5cdf4743564d98292042ec21af7",
    "added_lines": [],
    "removed_lines": [
      "snd_usbmidi_free(umidi"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 828,
    "id": "CVE-2016-2188",
    "commit_id": "4ec0ef3a82125efc36173062a50624550a900ae0",
    "added_lines": [
      "if (iface_desc->desc.bNumEndpoints < 1)",
      "dev_err(&interface->dev, \"Invalid number of endpoints\\n\"",
      "retval = -EINVAL",
      "goto error"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 829,
    "id": "CVE-2016-2187",
    "commit_id": "162f98dea487206d9ab79fc12ed64700667a894d",
    "added_lines": [
      "if (usbinterface->altsetting[0].desc.bNumEndpoints < 1)",
      "dev_err(&usbinterface->dev,",
      "\"Invalid number of endpoints\\n\"",
      "error = -EINVAL",
      "goto err_free_urb",
      "HID_DEVICE_TYPE, &hid_desc) != 0)"
    ],
    "removed_lines": [
      "HID_DEVICE_TYPE, &hid_desc) != 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 830,
    "id": "CVE-2016-2186",
    "commit_id": "9c6ba456711687b794dcf285856fc14e2c76074f",
    "added_lines": [
      "if (interface->desc.bNumEndpoints < 1",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 831,
    "id": "CVE-2016-2185",
    "commit_id": "950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d",
    "added_lines": [
      "if (alt->desc.bNumEndpoints < 1 || !alt->endpoint)",
      "dev_err(&interface->dev,",
      "\"%s(): interface 0 must have an endpoint\\n\", __func__",
      "r = -ENODEV",
      "goto fail1",
      "if ((udev->actconfig->desc.bNumInterfaces < 2) || !ar2->intf[1])",
      "dev_err(&interface->dev, \"%s(): need 2 interfaces, found %d\\n\",",
      "__func__, udev->actconfig->desc.bNumInterfaces",
      "r = -ENODEV",
      "goto fail1",
      "if (alt->desc.bNumEndpoints < 1 || !alt->endpoint)",
      "dev_err(&interface->dev,",
      "\"%s(): interface 1 must have an endpoint\\n\", __func__",
      "r = -ENODEV",
      "goto fail2",
      "goto fail3",
      "goto fail3",
      "goto fail3",
      "goto fail4",
      "fail4:",
      "fail3:",
      "fail2:"
    ],
    "removed_lines": [
      "goto fail2",
      "goto fail2",
      "goto fail2",
      "goto fail3",
      "fail3:",
      "fail2:"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 832,
    "id": "CVE-2016-2184",
    "commit_id": "0f886ca12765d20124bd06291c82951fd49a33be",
    "added_lines": [
      "if (altsd->bNumEndpoints < 1)",
      "kfree(fp",
      "kfree(rate_table",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free",
      "null pointer dereference"
    ]
  },
  {
    "index": 833,
    "id": "CVE-2016-2180",
    "commit_id": "0ed26acce328ec16a3aa635f1ca37365e8c7403a",
    "added_lines": [
      "OBJ_obj2txt(obj_txt, sizeof(obj_txt), obj, 0",
      "BIO_printf(bio, \"%s\\n\", obj_txt"
    ],
    "removed_lines": [
      "int len = OBJ_obj2txt(obj_txt, sizeof(obj_txt), obj, 0",
      "BIO_write(bio, obj_txt, len",
      "BIO_write(bio, \"\\n\", 1"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 834,
    "id": "CVE-2016-2143",
    "commit_id": "3446c13b268af86391d06611327006b059b8bab1",
    "added_lines": [
      "unsigned long *table = crst_table_alloc(mm",
      "if (!table",
      "return NULL",
      "if (mm->context.asce_limit == (1UL << 31))",
      "if (!pgtable_pmd_page_ctor(virt_to_page(table)))",
      "crst_table_free(mm, table",
      "return NULL",
      "return (pgd_t *) table",
      "static inline void pgd_free(struct mm_struct *mm, pgd_t *pgd",
      "if (mm->context.asce_limit == (1UL << 31",
      "pgtable_pmd_page_dtor(virt_to_page(pgd",
      "crst_table_free(mm, (unsigned long *) pgd"
    ],
    "removed_lines": [
      "spin_lock_init(&mm->context.list_lock",
      "INIT_LIST_HEAD(&mm->context.pgtable_list",
      "INIT_LIST_HEAD(&mm->context.gmap_list",
      "return (pgd_t *) crst_table_alloc(mm",
      "#define pgd_free(mm, pgd) crst_table_free(mm, (unsigned long *) pgd"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the case of four page-table levels"
    ]
  },
  {
    "index": 837,
    "id": "CVE-2016-2070",
    "commit_id": "8b8a321ff72c785ed5e8b4cf6eda20b35d427390",
    "added_lines": [
      "if (newly_acked_sacked <= 0 || WARN_ON_ONCE(!tp->prior_cwnd",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 839,
    "id": "CVE-2016-2053",
    "commit_id": "0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f",
    "added_lines": [
      "if ((op & ASN1_OP_MATCH__COND && flags & FLAG_MATCHED) ||",
      "(op & ASN1_OP_MATCH__SKIP && dp == datalen))"
    ],
    "removed_lines": [
      "if ((op & ASN1_OP_MATCH__COND &&",
      "flags & FLAG_MATCHED) ||",
      "dp == datalen)"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 840,
    "id": "CVE-2016-2052",
    "commit_id": "63ef0b41dc48d6112d1918c1b1de9de8ea90adb5",
    "added_lines": [
      "2 * (this->num_advances + this->num_metrics) > hb_blob_get_length (this->blob"
    ],
    "removed_lines": [
      "2 * (this->num_advances + this->num_metrics) < hb_blob_get_length (this->blob"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "buffer over-read"
    ]
  },
  {
    "index": 850,
    "id": "CVE-2016-0723",
    "commit_id": "5c17c861a357e9458001f021a7afa7aab9937439",
    "added_lines": [
      "static int tiocgetd(struct tty_struct *tty, int __user *p",
      "struct tty_ldisc *ld",
      "int ret",
      "ld = tty_ldisc_ref_wait(tty",
      "ret = put_user(ld->ops->num, p",
      "tty_ldisc_deref(ld",
      "return ret",
      "return tiocgetd(tty, p"
    ],
    "removed_lines": [
      "return put_user(tty->ldisc->ops->num, (int __user *)p"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 5.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "ioctl call",
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 852,
    "id": "CVE-2015-8970",
    "commit_id": "dd504589577d8e8e70f51f997ad487a4cb6c026f",
    "added_lines": [
      "struct skcipher_tfm",
      "struct crypto_skcipher *skcipher",
      "bool has_key",
      "struct skcipher_tfm *tfm",
      "struct crypto_skcipher *skcipher",
      "tfm = kzalloc(sizeof(*tfm), GFP_KERNEL",
      "if (!tfm",
      "return ERR_PTR(-ENOMEM",
      "skcipher = crypto_alloc_skcipher(name, type, mask",
      "if (IS_ERR(skcipher))",
      "kfree(tfm",
      "return ERR_CAST(skcipher",
      "tfm->skcipher = skcipher",
      "return tfm",
      "struct skcipher_tfm *tfm = private",
      "crypto_free_skcipher(tfm->skcipher",
      "kfree(tfm",
      "struct skcipher_tfm *tfm = private",
      "int err",
      "err = crypto_skcipher_setkey(tfm->skcipher, key, keylen",
      "tfm->has_key = !err",
      "return err",
      "struct skcipher_tfm *tfm = private",
      "struct crypto_skcipher *skcipher = tfm->skcipher",
      "unsigned int len = sizeof(*ctx) + crypto_skcipher_reqsize(skcipher",
      "if (!tfm->has_key",
      "return -ENOKEY",
      "ctx->iv = sock_kmalloc(sk, crypto_skcipher_ivsize(skcipher),",
      "memset(ctx->iv, 0, crypto_skcipher_ivsize(skcipher",
      "skcipher_request_set_tfm(&ctx->req, skcipher"
    ],
    "removed_lines": [
      "return crypto_alloc_skcipher(name, type, mask",
      "crypto_free_skcipher(private",
      "return crypto_skcipher_setkey(private, key, keylen",
      "unsigned int len = sizeof(*ctx) + crypto_skcipher_reqsize(private",
      "ctx->iv = sock_kmalloc(sk, crypto_skcipher_ivsize(private),",
      "memset(ctx->iv, 0, crypto_skcipher_ivsize(private",
      "skcipher_request_set_tfm(&ctx->req, private"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 856,
    "id": "CVE-2015-8963",
    "commit_id": "12ca6ad2e3a896256f086497a7c7406a547ee373",
    "added_lines": [
      "if (WARN_ON_ONCE(!head"
    ],
    "removed_lines": [
      "bool\t\t\t\tonline",
      "if (!head)",
      "WARN_ON_ONCE(swhash->online",
      "swhash->online = true",
      "struct swevent_htable *swhash = &per_cpu(swevent_htable, cpu",
      "mutex_lock(&swhash->hlist_mutex",
      "swhash->online = false",
      "swevent_hlist_release(swhash",
      "mutex_unlock(&swhash->hlist_mutex"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 7.6,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 857,
    "id": "CVE-2015-8962",
    "commit_id": "f3951a3709ff50990bf3e188c27d346792103432",
    "added_lines": [
      "if (srp->bio)",
      "if (srp->rq->cmd != srp->rq->__cmd",
      "kfree(srp->rq->cmd",
      "srp->rq = NULL"
    ],
    "removed_lines": [
      "if (srp->bio"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 9.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "ioctl call",
      "double free"
    ]
  },
  {
    "index": 858,
    "id": "CVE-2015-8961",
    "commit_id": "6934da9238da947628be83635e365df41064b09b",
    "added_lines": [
      "err = handle->h_err",
      "rc = jbd2_journal_stop(handle",
      "return err ? err : rc"
    ],
    "removed_lines": [
      "err = jbd2_journal_stop(handle",
      "return handle->h_err ? handle->h_err : err",
      "err = handle->h_err"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 9.3,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 859,
    "id": "CVE-2015-8956",
    "commit_id": "951b6a0717db97ce420547222647bcc40bf1eacd",
    "added_lines": [
      "struct sockaddr_rc sa",
      "int len, err = 0",
      "memset(&sa, 0, sizeof(sa",
      "len = min_t(unsigned int, sizeof(sa), addr_len",
      "memcpy(&sa, addr, len",
      "BT_DBG(\"sk %p %pMR\", sk, &sa.rc_bdaddr",
      "if (sa.rc_channel &&",
      "__rfcomm_get_listen_sock_by_addr(sa.rc_channel, &sa.rc_bdaddr))",
      "bacpy(&rfcomm_pi(sk)->src, &sa.rc_bdaddr",
      "rfcomm_pi(sk)->channel = sa.rc_channel"
    ],
    "removed_lines": [
      "struct sockaddr_rc *sa = (struct sockaddr_rc *) addr",
      "int chan = sa->rc_channel",
      "int err = 0",
      "BT_DBG(\"sk %p %pMR\", sk, &sa->rc_bdaddr",
      "if (chan && __rfcomm_get_listen_sock_by_addr(chan, &sa->rc_bdaddr))",
      "bacpy(&rfcomm_pi(sk)->src, &sa->rc_bdaddr",
      "rfcomm_pi(sk)->channel = chan"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Info",
    "score": 3.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "bind system call",
      "null pointer dereference"
    ]
  },
  {
    "index": 860,
    "id": "CVE-2015-8955",
    "commit_id": "8fff105e13041e49b82f92eef034f363a6b1c071",
    "added_lines": [
      "validate_event(struct pmu *pmu, struct pmu_hw_events *hw_events,",
      "struct perf_event *event",
      "struct arm_pmu *armpmu",
      "if (event->pmu != pmu",
      "return 0",
      "armpmu = to_arm_pmu(event->pmu",
      "if (!validate_event(event->pmu, &fake_pmu, leader",
      "if (!validate_event(event->pmu, &fake_pmu, sibling",
      "if (!validate_event(event->pmu, &fake_pmu, event"
    ],
    "removed_lines": [
      "validate_event(struct pmu_hw_events *hw_events,",
      "struct perf_event *event",
      "struct arm_pmu *armpmu = to_arm_pmu(event->pmu",
      "if (!validate_event(&fake_pmu, leader",
      "if (!validate_event(&fake_pmu, sibling",
      "if (!validate_event(&fake_pmu, event"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "invalid pointer dereference"
    ]
  },
  {
    "index": 861,
    "id": "CVE-2015-8953",
    "commit_id": "ab79efab0a0ba01a74df782eb7fa44b044dae8b5",
    "added_lines": [
      "goto out2"
    ],
    "removed_lines": [
      "goto out"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses an incorrect cleanup code path"
    ]
  },
  {
    "index": 862,
    "id": "CVE-2015-8952",
    "commit_id": "f9a61eb4e2471c56a63cd804c7474128138c38ac",
    "added_lines": [
      "#ifndef _LINUX_MB2CACHE_H",
      "#define _LINUX_MB2CACHE_H",
      "#include <linux/hash.h>",
      "#include <linux/list_bl.h>",
      "#include <linux/list.h>",
      "#include <linux/atomic.h>",
      "#include <linux/fs.h>",
      "struct mb2_cache",
      "struct mb2_cache_entry",
      "struct list_head\te_lru_list",
      "struct hlist_bl_node\te_hash_list",
      "atomic_t\t\te_refcnt",
      "u32\t\t\te_key",
      "sector_t\t\te_block",
      "struct hlist_bl_head\t*e_hash_list_head",
      "struct mb2_cache *mb2_cache_create(int bucket_bits",
      "void mb2_cache_destroy(struct mb2_cache *cache",
      "int mb2_cache_entry_create(struct mb2_cache *cache, gfp_t mask, u32 key,",
      "sector_t block",
      "void __mb2_cache_entry_free(struct mb2_cache_entry *entry",
      "static inline int mb2_cache_entry_put(struct mb2_cache *cache,",
      "struct mb2_cache_entry *entry",
      "if (!atomic_dec_and_test(&entry->e_refcnt",
      "return 0",
      "__mb2_cache_entry_free(entry",
      "return 1",
      "void mb2_cache_entry_delete_block(struct mb2_cache *cache, u32 key,",
      "sector_t block",
      "struct mb2_cache_entry *mb2_cache_entry_find_first(struct mb2_cache *cache,",
      "u32 key",
      "struct mb2_cache_entry *mb2_cache_entry_find_next(struct mb2_cache *cache,",
      "struct mb2_cache_entry *entry",
      "void mb2_cache_entry_touch(struct mb2_cache *cache,",
      "struct mb2_cache_entry *entry",
      "#endif"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "mishandles xattr block caching",
      "soft lockup"
    ]
  },
  {
    "index": 866,
    "id": "CVE-2015-8877",
    "commit_id": "4751b606fa38edc456d627140898a7ec679fcc24",
    "added_lines": [
      "gdImageDestroy(tmp_im"
    ],
    "removed_lines": [
      "gdFree(tmp_im"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "uses inconsistent allocate and free approaches"
    ]
  },
  {
    "index": 867,
    "id": "CVE-2015-8872",
    "commit_id": "07908124838afcc99c577d1d3e84cef2dbd39cb7",
    "added_lines": [
      "if (cluster != fs->clusters + 1"
    ],
    "removed_lines": [
      "if (cluster != fs->clusters - 1"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "*off-by-two error.*",
      "invalid memory read"
    ]
  },
  {
    "index": 872,
    "id": "CVE-2015-8845",
    "commit_id": "7f821fc9c77a9b01fe7b1d6e72717b33d8d64142",
    "added_lines": [
      "if (!MSR_TM_SUSPENDED(mfmsr",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 1"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that TM suspend mode exists before proceeding with a tm_reclaim call"
    ]
  },
  {
    "index": 873,
    "id": "CVE-2015-8844",
    "commit_id": "d2b9d2a5ad5ef04ff978c9923d19730cb05efd55",
    "added_lines": [
      "if (MSR_TM_RESV(msr",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not check for an MSR with both the S and T bits set"
    ]
  },
  {
    "index": 875,
    "id": "CVE-2015-8839",
    "commit_id": "ea3d7209ca01da209cda6f0dea8be9cc4b7a933b",
    "added_lines": [
      "down_write(&EXT4_I(inode)->i_mmap_sem",
      "up_write(&EXT4_I(inode)->i_mmap_sem"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 877,
    "id": "CVE-2015-8816",
    "commit_id": "e50293ef9775c5f1cf3fcc093037dd6a8c5684ea",
    "added_lines": [
      "if (type == HUB_INIT2 || type == HUB_INIT3)",
      "device_lock(hub->intfdev",
      "if (hub->disconnected)",
      "device_unlock(hub->intfdev",
      "kref_put(&hub->kref, hub_release",
      "return",
      "if (type == HUB_INIT2",
      "goto init2",
      "kref_get(&hub->kref",
      "device_unlock(hub->intfdev",
      "if (type == HUB_INIT2 || type == HUB_INIT3",
      "device_unlock(hub->intfdev",
      "kref_put(&hub->kref, hub_release"
    ],
    "removed_lines": [
      "if (type == HUB_INIT2",
      "goto init2",
      "if (type == HUB_INIT3"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid memory access"
    ]
  },
  {
    "index": 878,
    "id": "CVE-2015-8812",
    "commit_id": "67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3",
    "added_lines": [
      "return error < 0 ? error : 0",
      "return error < 0 ? error : 0"
    ],
    "removed_lines": [
      "return error",
      "return error"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 883,
    "id": "CVE-2015-8787",
    "commit_id": "94f9cd81436c85d8c3a318ba92e236ede73752fc",
    "added_lines": [
      "if (indev && indev->ifa_list)"
    ],
    "removed_lines": [
      "if (indev != NULL)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 884,
    "id": "CVE-2015-8785",
    "commit_id": "3ca8138f014a913f98e6ef40e939868e1e9ea876",
    "added_lines": [
      "iov_iter_advance(ii, tmp"
    ],
    "removed_lines": [
      "iov_iter_advance(ii, tmp"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 886,
    "id": "CVE-2015-8767",
    "commit_id": "635682a14427d241bab7bbdeebb48a7d7b91638e",
    "added_lines": [
      "struct sock *sk = asoc->base.sk",
      "struct net *net = sock_net(sk",
      "bh_lock_sock(sk",
      "if (sock_owned_by_user(sk))",
      "sk->sk_err = -error",
      "bh_unlock_sock(sk",
      "struct sock *sk = asoc->base.sk",
      "struct net *net = sock_net(sk",
      "bh_lock_sock(sk",
      "if (sock_owned_by_user(sk))",
      "sk->sk_err = -error",
      "bh_unlock_sock(sk",
      "struct sock *sk = asoc->base.sk",
      "struct net *net = sock_net(sk",
      "bh_lock_sock(sk",
      "if (sock_owned_by_user(sk))",
      "sk->sk_err = -error",
      "bh_unlock_sock(sk",
      "struct sock *sk = asoc->base.sk",
      "struct net *net = sock_net(sk",
      "bh_lock_sock(sk",
      "if (sock_owned_by_user(sk))",
      "bh_unlock_sock(sk"
    ],
    "removed_lines": [
      "struct net *net = sock_net(asoc->base.sk",
      "bh_lock_sock(asoc->base.sk",
      "if (sock_owned_by_user(asoc->base.sk))",
      "asoc->base.sk->sk_err = -error",
      "bh_unlock_sock(asoc->base.sk",
      "struct net *net = sock_net(asoc->base.sk",
      "bh_lock_sock(asoc->base.sk",
      "if (sock_owned_by_user(asoc->base.sk))",
      "asoc->base.sk->sk_err = -error",
      "bh_unlock_sock(asoc->base.sk",
      "struct net *net = sock_net(asoc->base.sk",
      "bh_lock_sock(asoc->base.sk",
      "if (sock_owned_by_user(asoc->base.sk))",
      "asoc->base.sk->sk_err = -error",
      "bh_unlock_sock(asoc->base.sk",
      "struct net *net = sock_net(asoc->base.sk",
      "bh_lock_sock(asoc->base.sk",
      "if (sock_owned_by_user(asoc->base.sk))",
      "bh_unlock_sock(asoc->base.sk"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly manage the relationship between a lock and a socket"
    ]
  },
  {
    "index": 887,
    "id": "CVE-2015-8746",
    "commit_id": "18e3b739fdc826481c6a1335ce0c5b19b3d415da",
    "added_lines": [
      ".mig_recovery_ops = &nfs41_mig_recovery_ops,"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 888,
    "id": "CVE-2015-8702",
    "commit_id": "6058483d9fbc1b904d5ae7cfea47bfcde5c5b559",
    "added_lines": [
      "if (resultstr.find_first_not_of(\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-\") != std::string::npos",
      "std::string ro = req->orig",
      "delete req",
      "return DNSResult(this_id | ERROR_MASK, \"Invalid char(s) in reply\", 0, ro"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 890,
    "id": "CVE-2015-8630",
    "commit_id": "b863de7fbf080b15e347a736fdda0a82d42f4f6b",
    "added_lines": [
      "if (entry == NULL",
      "return EINVAL",
      "if((mask & KADM5_POLICY) && entry->policy == NULL",
      "return KADM5_BAD_MASK",
      "if(entry == NULL",
      "return EINVAL",
      "if((mask & KADM5_POLICY) && entry->policy == NULL",
      "return KADM5_BAD_MASK"
    ],
    "removed_lines": [
      "if (entry == NULL",
      "return EINVAL",
      "if(entry == (kadm5_principal_ent_t) NULL",
      "return EINVAL"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 894,
    "id": "CVE-2015-8547",
    "commit_id": "b8edbda019eeb99da8663193e224efc9d1265dc7",
    "added_lines": [
      "if (nicks == \"*\" && bufferInfo.type() == BufferInfo::ChannelBuffer) { // All users in channel"
    ],
    "removed_lines": [
      "if (nicks == \"*\") { // All users in channel"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 895,
    "id": "CVE-2015-8539",
    "commit_id": "096fe9eaea40a17e125569f9e657e34cdb6d73bd",
    "added_lines": [
      "if (!test_bit(KEY_FLAG_NEGATIVE, &key->flags",
      "zap = key->payload.data[0]",
      "else",
      "zap = NULL"
    ],
    "removed_lines": [
      "zap = key->payload.data[0]"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 896,
    "id": "CVE-2015-8324",
    "commit_id": "744692dc059845b2a3022119871846e74d4f6e11",
    "added_lines": [
      "spin_lock_init(&ei->i_completed_io_lock",
      "if (test_opt(sb, DIOREAD_NOLOCK",
      "seq_puts(seq, \",dioread_nolock\"",
      "Opt_dioread_nolock, Opt_dioread_lock,",
      "{Opt_dioread_nolock, \"dioread_nolock\"},",
      "{Opt_dioread_lock, \"dioread_lock\"},",
      "case Opt_dioread_nolock:",
      "set_opt(sbi->s_mount_opt, DIOREAD_NOLOCK",
      "break",
      "case Opt_dioread_lock:",
      "clear_opt(sbi->s_mount_opt, DIOREAD_NOLOCK",
      "break",
      "goto failed_mount_wq",
      "goto failed_mount_wq",
      "goto failed_mount_wq",
      "if (test_opt(sb, DIOREAD_NOLOCK))",
      "ext4_msg(sb, KERN_WARNING, \"dioread_nolock option is \"",
      "\"not supported with nobh mode\"",
      "goto failed_mount_wq",
      "if (test_opt(sb, DIOREAD_NOLOCK))",
      "if (test_opt(sb, DATA_FLAGS) == EXT4_MOUNT_JOURNAL_DATA)",
      "ext4_msg(sb, KERN_WARNING, \"Ignoring dioread_nolock \"",
      "\"option - requested data journaling mode\"",
      "clear_opt(sbi->s_mount_opt, DIOREAD_NOLOCK",
      "if (sb->s_blocksize < PAGE_SIZE)",
      "ext4_msg(sb, KERN_WARNING, \"Ignoring dioread_nolock \"",
      "\"option - block size is too small\"",
      "clear_opt(sbi->s_mount_opt, DIOREAD_NOLOCK"
    ],
    "removed_lines": [
      "goto failed_mount4",
      "goto failed_mount4",
      "goto failed_mount4"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 897,
    "id": "CVE-2015-7566",
    "commit_id": "cb3232138e37129e88240a98a1d2aba2187ff57c",
    "added_lines": [
      "if (serial->num_bulk_out < 2)",
      "dev_err(&serial->interface->dev, \"missing bulk out endpoints\\n\"",
      "return -ENODEV"
    ],
    "removed_lines": [
      "if (serial->num_ports < 2",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 898,
    "id": "CVE-2015-7550",
    "commit_id": "b4a1b4f5047e4f54e194681125c74c0aa64d637d",
    "added_lines": [
      "ret = -EOPNOTSUPP",
      "if (key->type->read)",
      "down_read(&key->sem",
      "ret = key_validate(key",
      "if (ret == 0",
      "up_read(&key->sem"
    ],
    "removed_lines": [
      "ret = key_validate(key",
      "if (ret == 0)",
      "ret = -EOPNOTSUPP",
      "if (key->type->read)",
      "down_read(&key->sem",
      "up_read(&key->sem"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "null pointer dereference"
    ]
  },
  {
    "index": 900,
    "id": "CVE-2015-7515",
    "commit_id": "8e20cf2bce122ce9262d6034ee5d5b76fbb92f96",
    "added_lines": [
      "if (intf->altsetting[0].desc.bNumEndpoints < 1)",
      "dev_err(&intf->dev,",
      "\"interface has %d endpoints, but must have minimum 1\\n\",",
      "intf->altsetting[0].desc.bNumEndpoints",
      "err = -EINVAL",
      "goto fail3",
      "err = -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 901,
    "id": "CVE-2015-7513",
    "commit_id": "0185604c2d82c560dab2f2933a18f797e74ab5a8",
    "added_lines": [
      "int i",
      "for (i = 0; i < 3; i++",
      "kvm_pit_load_count(kvm, i, ps->channels[i].count, 0",
      "int i",
      "for (i = 0; i < 3; i++",
      "kvm_pit_load_count(kvm, i, kvm->arch.vpit->pit_state.channels[i].count, start"
    ],
    "removed_lines": [
      "kvm_pit_load_count(kvm, 0, ps->channels[0].count, 0",
      "kvm_pit_load_count(kvm, 0, kvm->arch.vpit->pit_state.channels[0].count, start"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 902,
    "id": "CVE-2015-4178",
    "commit_id": "820f9f147dcce2602eefd9b575bbbd9ea14f0953",
    "added_lines": [
      "INIT_HLIST_NODE(&p->s_list",
      "INIT_HLIST_NODE(&p->m_list"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not ensure the internal consistency of a certain list data structure,"
    ]
  },
  {
    "index": 903,
    "id": "CVE-2015-4177",
    "commit_id": "cd4a40174b71acd021877341684d8bb1dc8ea4ae",
    "added_lines": [
      "if (!check_mnt(real_mount(path->mnt",
      "tree = ERR_PTR(-EINVAL",
      "else",
      "tree = copy_tree(real_mount(path->mnt), path->dentry,",
      "CL_COPY_ALL | CL_PRIVATE"
    ],
    "removed_lines": [
      "tree = copy_tree(real_mount(path->mnt), path->dentry,",
      "CL_COPY_ALL | CL_PRIVATE"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly consider"
    ]
  },
  {
    "index": 905,
    "id": "CVE-2015-4170",
    "commit_id": "cf872776fc84128bb779ce2b83a37c884c3203ae",
    "added_lines": [
      "long tmp = atomic_long_cmpxchg(&sem->count, *old, new",
      "if (tmp == *old)",
      "return 1",
      "} else",
      "return 0"
    ],
    "removed_lines": [
      "long tmp = *old",
      "return *old == tmp"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 906,
    "id": "CVE-2015-3288",
    "commit_id": "6b7339f4c31ad69c8e9c0b2859276e22cf72176d",
    "added_lines": [
      "if (vma->vm_flags & VM_SHARED",
      "return VM_FAULT_SIGBUS",
      "if (!vma->vm_ops->fault",
      "return VM_FAULT_SIGBUS",
      "if (vma->vm_ops",
      "return do_fault(mm, vma, address, pte, pmd,",
      "flags, entry",
      "return do_anonymous_page(mm, vma, address, pte, pmd,",
      "flags"
    ],
    "removed_lines": [
      "if (vma->vm_ops)",
      "if (likely(vma->vm_ops->fault",
      "return do_fault(mm, vma, address, pte,",
      "pmd, flags, entry",
      "return do_anonymous_page(mm, vma, address,",
      "pte, pmd, flags"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "mishandles anonymous pages"
    ]
  },
  {
    "index": 909,
    "id": "CVE-2015-2672",
    "commit_id": "06c8173eb92bbfc03a0fe8bb64315857d0badd06",
    "added_lines": [
      "xstate_fault",
      ": \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "xstate_fault",
      ": \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "xstate_fault",
      ": \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "xstate_fault",
      ": \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "XSAVEOPT,",
      "XSAVES,",
      "XRSTORS,"
    ],
    "removed_lines": [
      ": : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      ": : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "asm volatile(xstate_fault",
      ": \"0\" (0",
      ": \"memory\"",
      ": : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      ": : \"D\" (fx), \"m\" (*fx), \"a\" (lmask), \"d\" (hmask",
      "asm volatile(xstate_fault",
      ": \"0\" (0",
      ": \"memory\"",
      "\"1:\"XSAVEOPT,",
      "\"1:\"XSAVES,",
      "\"1: \" XRSTORS,"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not provide any protection against instruction faulting,"
    ]
  },
  {
    "index": 910,
    "id": "CVE-2015-1573",
    "commit_id": "a2f18db0c68fec96631c10cad9384c196e9008ac",
    "added_lines": [
      "list_for_each_entry(chain, &ctx->table->chains, list)",
      "list_for_each_entry_safe(chain, nc, &ctx->table->chains, list)",
      "ctx->chain = chain",
      "err = nft_delchain(ctx",
      "if (err < 0",
      "goto out"
    ],
    "removed_lines": [
      "list_for_each_entry_safe(chain, nc, &ctx->table->chains, list)",
      "err = nft_delchain(ctx",
      "if (err < 0",
      "goto out"
    ],
    "cause": [
      "Parsing or Interpretation Errors",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the interaction between cross-chain jumps and ruleset flushes",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 911,
    "id": "CVE-2015-1339",
    "commit_id": "2c5816b4beccc8ba709144539f6fdd764f8fa49c",
    "added_lines": [
      "fuse_conn_put(&cc->fc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 922,
    "id": "CVE-2013-7456",
    "commit_id": "4f65a3e4eedaffa1efcf9ee1eb08f0b504fbc31a",
    "added_lines": [
      "res->ContribRow[u].Left = iLeft",
      "res->ContribRow[u].Right = iRight"
    ],
    "removed_lines": [
      "res->ContribRow[u].Left = iLeft",
      "res->ContribRow[u].Right = iRight"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 927,
    "id": "CVE-2013-4119",
    "commit_id": "0773bb9303d24473fe1185d85a424dfe159aff53",
    "added_lines": [
      "if (!handle || !SecIsValidHandle(handle",
      "if (!handle || !SecIsValidHandle(handle",
      "char* Name = NULL"
    ],
    "removed_lines": [
      "if (!handle",
      "if (!handle",
      "char* Name"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 928,
    "id": "CVE-2013-4118",
    "commit_id": "7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7",
    "added_lines": [
      "if (rdp->rc4_decrypt_key == NULL",
      "return FALSE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference",
      "unspecified vectors"
    ]
  },
  {
    "index": 933,
    "id": "CVE-2011-5321",
    "commit_id": "c290f8358acaeffd8e0c551ddcc24d1206143376",
    "added_lines": [
      "tty_driver_kref_put(driver"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 934,
    "id": "CVE-2008-7316",
    "commit_id": "124d3b7041f9a0ca7c43a6293e1cae4576c32fd5",
    "added_lines": [
      "while (bytes || !iov->iov_len)",
      "iov_iter_advance(i, copied"
    ],
    "removed_lines": [
      "while (bytes)",
      "iov_iter_advance(i, copied"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 937,
    "id": "CVE-2017-1000252",
    "commit_id": "36ae3c0a36b7456432fedce38ae2f7bd3e01a563",
    "added_lines": [
      "if (args->gsi >= KVM_MAX_IRQ_ROUTES",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 943,
    "id": "CVE-2017-1000201",
    "commit_id": "e2d953050766ac538615a811c64b34358614edce",
    "added_lines": [
      "struct dbus_info *info = handler ? handler->opaque : NULL"
    ],
    "removed_lines": [
      "struct dbus_info *info = handler->opaque"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 944,
    "id": "CVE-2017-1000200",
    "commit_id": "bb80e9c7a798f035768260ebdadffb6eb0786178",
    "added_lines": [
      "bool _is_dbus_handler"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 947,
    "id": "CVE-2017-17862",
    "commit_id": "c131187db2d3fa2f8bf32fdf4e9a4ef805168467",
    "added_lines": [
      "env->insn_aux_data[insn_idx].seen = true",
      "env->insn_aux_data[insn_idx].seen = true",
      "int i",
      "for (i = off; i < off + cnt - 1; i++",
      "new_data[i].seen = true",
      "static void sanitize_dead_code(struct bpf_verifier_env *env",
      "struct bpf_insn_aux_data *aux_data = env->insn_aux_data",
      "struct bpf_insn nop = BPF_MOV64_REG(BPF_REG_0, BPF_REG_0",
      "struct bpf_insn *insn = env->prog->insnsi",
      "const int insn_cnt = env->prog->len",
      "int i",
      "for (i = 0; i < insn_cnt; i++)",
      "if (aux_data[i].seen",
      "continue",
      "memcpy(insn + i, &nop, sizeof(nop",
      "if (ret == 0",
      "sanitize_dead_code(env"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "improper branch-pruning logic issue"
    ]
  },
  {
    "index": 956,
    "id": "CVE-2017-17805",
    "commit_id": "ecaaab5649781c5a0effdaf298a925063020500e",
    "added_lines": [],
    "removed_lines": [
      "if (likely(walk.nbytes == nbytes",
      "salsa20_encrypt_bytes(ctx, walk.dst.virt.addr,",
      "walk.src.virt.addr, nbytes",
      "return blkcipher_walk_done(desc, &walk, 0"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not correctly handle zero-length inputs"
    ]
  },
  {
    "index": 962,
    "id": "CVE-2017-17081",
    "commit_id": "58cf31cee7a456057f337b3102a03206d833d5e8",
    "added_lines": [
      "int need_emu  =  (unsigned) ix >= width  - w || width < w ||",
      "(unsigned) iy >= height - h || height< h"
    ],
    "removed_lines": [
      "int need_emu  =  (unsigned) ix >= width  - w ||",
      "(unsigned) iy >= height - h"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "integer signedness error",
      "out-of-array read",
      "out-of-array read"
    ]
  },
  {
    "index": 968,
    "id": "CVE-2017-16939",
    "commit_id": "1137b5e2529a8f5ca8ee709288ecba3e68044df2",
    "added_lines": [
      "struct xfrm_policy_walk *walk = (struct xfrm_policy_walk *)cb->args",
      "static int xfrm_dump_policy_start(struct netlink_callback *cb",
      "struct xfrm_policy_walk *walk = (struct xfrm_policy_walk *)cb->args",
      "BUILD_BUG_ON(sizeof(*walk) > sizeof(cb->args",
      "xfrm_policy_walk_init(walk, XFRM_POLICY_TYPE_ANY",
      "return 0",
      "struct xfrm_policy_walk *walk = (struct xfrm_policy_walk *)cb->args",
      "int (*start)(struct netlink_callback *",
      ".start = xfrm_dump_policy_start,",
      ".start = link->start,"
    ],
    "removed_lines": [
      "struct xfrm_policy_walk *walk = (struct xfrm_policy_walk *) &cb->args[1]",
      "struct xfrm_policy_walk *walk = (struct xfrm_policy_walk *) &cb->args[1]",
      "BUILD_BUG_ON(sizeof(struct xfrm_policy_walk) >",
      "sizeof(cb->args) - sizeof(cb->args[0]",
      "if (!cb->args[0])",
      "cb->args[0] = 1",
      "xfrm_policy_walk_init(walk, XFRM_POLICY_TYPE_ANY"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 972,
    "id": "CVE-2017-16818",
    "commit_id": "b3118cabb8060a8cc6a01c4e8264cb18e7b1745a",
    "added_lines": [],
    "removed_lines": [
      "#include \"include/assert.h\" // razzin' frazzin' ...grrr.",
      "ceph_assert(shift > 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 973,
    "id": "CVE-2017-16805",
    "commit_id": "2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d",
    "added_lines": [
      "struct"
    ],
    "removed_lines": [
      "struct str_structt"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid read"
    ]
  },
  {
    "index": 975,
    "id": "CVE-2017-16645",
    "commit_id": "ea04efee7635c9120d015dcdeeeb6988130cb67a",
    "added_lines": [
      "while (buflen >= sizeof(*union_desc))",
      "if (union_desc->bLength > buflen)",
      "dev_err(&intf->dev, \"Too large descriptor\\n\"",
      "return NULL",
      "if (union_desc->bLength >= sizeof(*union_desc",
      "return union_desc",
      "dev_err(&intf->dev,",
      "\"Union descriptor to short (%d vs %zd\\n)\",",
      "union_desc->bLength, sizeof(*union_desc",
      "return NULL"
    ],
    "removed_lines": [
      "while (buflen > 0)",
      "return union_desc"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 976,
    "id": "CVE-2017-16643",
    "commit_id": "a50829479f58416a013a4ccca791336af3c584c7",
    "added_lines": [
      "prefix = report[i++]",
      "size = (1U << PREF_SIZE(prefix)) >> 1",
      "if (i + size > length)",
      "dev_err(ddev,",
      "\"Not enough data (need %d, have %d)\\n\",",
      "i + size, length",
      "break",
      "case 4:"
    ],
    "removed_lines": [
      "prefix = report[i]",
      "i++",
      "size = PREF_SIZE(prefix",
      "case 3:",
      "size = 4"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 979,
    "id": "CVE-2017-16535",
    "commit_id": "1c0edc3633b56000e18d82fc241e3995ca18a69e",
    "added_lines": [
      "if (total_len < sizeof(*cap) || total_len < cap->bLength)",
      "dev->bos->desc->bNumDeviceCaps = i",
      "length = cap->bLength"
    ],
    "removed_lines": [
      "length = cap->bLength",
      "if (total_len < length"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 981,
    "id": "CVE-2017-16533",
    "commit_id": "f043bfc98c193c284e2cd768fefabe18ac2fed9b",
    "added_lines": [
      "int num_descriptors",
      "size_t offset = offsetof(struct hid_descriptor, desc",
      "if (hdesc->bLength < sizeof(struct hid_descriptor))",
      "dbg_hid(\"hid descriptor is too short\\n\"",
      "return -EINVAL",
      "num_descriptors = min_t(int, hdesc->bNumDescriptors,",
      "(hdesc->bLength - offset) / sizeof(struct hid_class_descriptor",
      "for (n = 0; n < num_descriptors; n++"
    ],
    "removed_lines": [
      "for (n = 0; n < hdesc->bNumDescriptors; n++"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 982,
    "id": "CVE-2017-16532",
    "commit_id": "7c80f9e4a588f1925b07134bb2e3689335f6c6d8",
    "added_lines": [
      "if (in",
      "if (out"
    ],
    "removed_lines": [
      "if (in)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 984,
    "id": "CVE-2017-16530",
    "commit_id": "786de92b3cb26012d3d0f00ee37adf14527f35c4",
    "added_lines": [
      "struct usb_host_interface *alt",
      "if (!alt",
      "return -ENODEV",
      "return usb_set_interface(udev, alt->desc.bInterfaceNumber,",
      "alt->desc.bAlternateSetting"
    ],
    "removed_lines": [
      "int alt",
      "if (alt < 0",
      "return alt",
      "return usb_set_interface(udev,",
      "intf->altsetting[0].desc.bInterfaceNumber, alt"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 985,
    "id": "CVE-2017-16529",
    "commit_id": "bfc81a8bc18e3c4ba0cbaa7666ff76be2f998991",
    "added_lines": [
      "int rest_bytes",
      "rest_bytes = (void *)(host_iface->extra + host_iface->extralen) -",
      "control_header",
      "if (rest_bytes <= 0)",
      "dev_err(&dev->dev, \"invalid control header\\n\"",
      "return -EINVAL",
      "if (rest_bytes < sizeof(*h1))",
      "dev_err(&dev->dev, \"too short v1 buffer descriptor\\n\"",
      "return -EINVAL",
      "if (rest_bytes < h1->bLength)",
      "dev_err(&dev->dev, \"invalid buffer length (v1)\\n\"",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 986,
    "id": "CVE-2017-16528",
    "commit_id": "fc27fe7e8deef2f37cba3f2be2d52b6ca5eb9d57",
    "added_lines": [
      "#define cancel_autoload_drivers()\tcancel_work_sync(&autoload_work",
      "#define cancel_autoload_drivers()",
      "cancel_autoload_drivers"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 987,
    "id": "CVE-2017-16527",
    "commit_id": "124751d5e63c823092060074bd0abaae61aaa9c4",
    "added_lines": [
      "bool disconnected"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 989,
    "id": "CVE-2017-16525",
    "commit_id": "299d7572e46f98534033a9e65973f13ad1ce9047",
    "added_lines": [
      "info->port = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 994,
    "id": "CVE-2017-15951",
    "commit_id": "363b02dab09b3226f3bd1420dad9c72b79a42a76",
    "added_lines": [
      "if (key_is_positive(key",
      "if (key_is_positive(key"
    ],
    "removed_lines": [
      "if (!test_bit(KEY_FLAG_NEGATIVE, &key->flags",
      "if (key_is_instantiated(key"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 1004,
    "id": "CVE-2017-15368",
    "commit_id": "52b1526443c1f433087928291d1c3d37a5600515",
    "added_lines": [
      "static RFlagsAtOffset* r_flag_get_nearest_list(RFlag *f, ut64 off, int dir)"
    ],
    "removed_lines": [
      "static  RFlagsAtOffset* r_flag_get_nearest_list(RFlag *f, ut64 off, int dir)"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1005,
    "id": "CVE-2017-15306",
    "commit_id": "ac64115a66c18c01745bbd3c47a36b124e5fd8c0",
    "added_lines": [
      "r = cpu_has_feature(CPU_FTR_TM_COMP) && hv_enabled"
    ],
    "removed_lines": [
      "r = cpu_has_feature(CPU_FTR_TM_COMP) &&",
      "is_kvmppc_hv_enabled(kvm"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "null pointer dereference"
    ]
  },
  {
    "index": 1007,
    "id": "CVE-2017-15274",
    "commit_id": "5649645d725c73df4302428ee4e02c869248b4c5",
    "added_lines": [
      "if (plen)",
      "if (plen)"
    ],
    "removed_lines": [
      "if (_payload)",
      "if (_payload)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1008,
    "id": "CVE-2017-15265",
    "commit_id": "71105998845fb012937332fe2e806d443c09e026",
    "added_lines": [
      "snd_use_lock_use(&new_port->use_lock",
      "sprintf(new_port->name, \"port-%d\", num"
    ],
    "removed_lines": [
      "sprintf(new_port->name, \"port-%d\", num"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1009,
    "id": "CVE-2017-15116",
    "commit_id": "94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "added_lines": [],
    "removed_lines": [
      "struct crypto_rng",
      "struct old_rng_alg",
      "int (*rng_make_random)(struct crypto_rng *tfm, u8 *rdata,",
      "unsigned int dlen",
      "int (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen",
      "unsigned int seedsize",
      "#define cra_rng\t\tcra_u.rng",
      "struct old_rng_alg rng"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1010,
    "id": "CVE-2017-15115",
    "commit_id": "df80cd9b28b9ebaa284a41df611dbf3a2d05ca74",
    "added_lines": [
      "if (!net_eq(current->nsproxy->net_ns, sock_net(sk",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1021,
    "id": "CVE-2017-14642",
    "commit_id": "22192de5367fa0cee985917f092be4060b7c00b0",
    "added_lines": [
      "if (size < AP4_FULL_ATOM_HEADER_SIZE+20) return",
      "AP4_UI32 name_size = size-(AP4_FULL_ATOM_HEADER_SIZE+20",
      "if (name == NULL) return"
    ],
    "removed_lines": [
      "int name_size = size-(AP4_FULL_ATOM_HEADER_SIZE+20",
      "if (name_size == 0) return"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault",
      "null pointer dereference"
    ]
  },
  {
    "index": 1022,
    "id": "CVE-2017-14641",
    "commit_id": "41cad602709436628f07b4c4f64e9ff7a611f687",
    "added_lines": [
      "m_DataType(DATA_TYPE_BINARY),",
      "m_Source(NULL",
      "AP4_Atom(AP4_ATOM_TYPE_DATA, size),",
      "m_Source(NULL"
    ],
    "removed_lines": [
      "m_DataType(DATA_TYPE_BINARY",
      "AP4_Atom(AP4_ATOM_TYPE_DATA, size"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault",
      "null pointer dereference"
    ]
  },
  {
    "index": 1023,
    "id": "CVE-2017-14640",
    "commit_id": "2f267f89f957088197f4b1fc254632d1645b415d",
    "added_lines": [
      "if (m_SttsAtom)",
      "result = m_SttsAtom->GetDts(index, dts, &duration",
      "if (AP4_FAILED(result)) return result"
    ],
    "removed_lines": [
      "result = m_SttsAtom->GetDts(index, dts, &duration",
      "if (AP4_FAILED(result)) return result"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault",
      "null pointer dereference"
    ]
  },
  {
    "index": 1024,
    "id": "CVE-2017-14639",
    "commit_id": "03d1222ab9c2ce779cdf01bdb96cdd69cbdcfeda",
    "added_lines": [
      "AP4_UI08 compressor_name[33]",
      "AP4_UI08 name_length = compressor_name[0]",
      "m_CompressorName = (const char*)(&compressor_name[1]"
    ],
    "removed_lines": [
      "char compressor_name[33]",
      "int name_length = compressor_name[0]",
      "m_CompressorName = &compressor_name[1]"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer underflow",
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1032,
    "id": "CVE-2017-14340",
    "commit_id": "b31ff3cdf540110da4572e3e29bd172087af65cc",
    "added_lines": [
      "#define XFS_IS_REALTIME_INODE(ip)\t\t\t\\",
      "(((ip)->i_d.di_flags & XFS_DIFLAG_REALTIME) &&\t\\",
      "(ip)->i_mount->m_rtdev_targp"
    ],
    "removed_lines": [
      "#define XFS_IS_REALTIME_INODE(ip) ((ip)->i_d.di_flags & XFS_DIFLAG_REALTIME"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1033,
    "id": "CVE-2017-14230",
    "commit_id": "6bd33275368edfa71ae117de895488584678ac79",
    "added_lines": [
      "if (prefixlen <= len)"
    ],
    "removed_lines": [
      "if (prefixlen < len)"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 6.4,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "off-by-one",
      "off-by-one error",
      "uninitialized memory"
    ]
  },
  {
    "index": 1044,
    "id": "CVE-2017-14166",
    "commit_id": "fa7438a0ff4033e4741c807394a9af6207940d71",
    "added_lines": [
      "if (char_cnt == 0",
      "return (0",
      "if (char_cnt == 0",
      "return (0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1050,
    "id": "CVE-2017-14106",
    "commit_id": "499350a5a6e7512d9ed369ed63a4244b6536f4f8",
    "added_lines": [
      "icsk->icsk_ack.rcv_mss = TCP_MIN_MSS"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "recvmsg",
      "divide-by-zero error"
    ]
  },
  {
    "index": 1052,
    "id": "CVE-2017-14058",
    "commit_id": "7ec414892ddcad88313848494b6fc5f437c9ca4a",
    "added_lines": [
      "int max_reload",
      "int reload_count = 0",
      "reload_count++",
      "if (reload_count > c->max_reload",
      "return AVERROR_EOF",
      "{\"max_reload\", \"Maximum number of times a insufficient list is attempted to be reloaded\",",
      "OFFSET(max_reload), AV_OPT_TYPE_INT, {.i64 = 1000}, 0, INT_MAX, FLAGS},"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1058,
    "id": "CVE-2017-14040",
    "commit_id": "2cd30c2b06ce332dede81cccad8b334cde997281",
    "added_lines": [
      "static unsigned short get_tga_ushort(const unsigned char *data",
      "return data[0] | (data[1] << 8",
      "cmap_len = get_tga_ushort(&tga[5]",
      "x_origin = get_tga_ushort(&tga[8]",
      "y_origin = get_tga_ushort(&tga[10]",
      "image_w = get_tga_ushort(&tga[12]",
      "image_h = get_tga_ushort(&tga[14]",
      "if (image_height != 0 && image_width > 10000000 / image_height / numcomps)",
      "char ch",
      "OPJ_UINT64 expected_file_size =",
      "(OPJ_UINT64)image_width * image_height * numcomps",
      "long curpos = ftell(f",
      "if (expected_file_size > (OPJ_UINT64)INT_MAX)",
      "expected_file_size = (OPJ_UINT64)INT_MAX",
      "fseek(f, (long)expected_file_size - 1, SEEK_SET",
      "if (fread(&ch, 1, 1, f) != 1)",
      "fclose(f",
      "return NULL",
      "fseek(f, curpos, SEEK_SET"
    ],
    "removed_lines": [
      "static unsigned short get_ushort(const unsigned char *data",
      "unsigned short val = *(const unsigned short *)data",
      "#ifdef OPJ_BIG_ENDIAN",
      "val = ((val & 0xffU) << 8) | (val >> 8",
      "#endif",
      "return val",
      "cmap_len = get_ushort(&tga[5]",
      "x_origin = get_ushort(&tga[8]",
      "y_origin = get_ushort(&tga[10]",
      "image_w = get_ushort(&tga[12]",
      "image_h = get_ushort(&tga[14]"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering a crash in the tgatoimage function",
      "invalid write"
    ]
  },
  {
    "index": 1062,
    "id": "CVE-2017-13715",
    "commit_id": "a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0",
    "added_lines": [
      "bool ret = false",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_good",
      "goto out_bad",
      "goto out_good",
      "goto out_good",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "goto out_bad",
      "out_good:",
      "ret = true",
      "out_bad:",
      "key_basic->n_proto = proto",
      "key_basic->ip_proto = ip_proto",
      "key_control->thoff = (u16)nhoff",
      "return ret"
    ],
    "removed_lines": [
      "return false",
      "return false",
      "return false",
      "return false",
      "return false",
      "return false",
      "key_basic->n_proto = proto",
      "key_control->thoff = (u16)nhoff",
      "return true",
      "return false",
      "key_basic->n_proto = proto",
      "key_basic->ip_proto = ip_proto",
      "key_control->thoff = (u16)nhoff",
      "return true",
      "return true",
      "return false",
      "return false",
      "return false",
      "return false",
      "return false",
      "key_basic->n_proto = proto",
      "key_basic->ip_proto = ip_proto",
      "key_control->thoff = (u16)nhoff",
      "return true"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "does not ensure that n_proto, ip_proto, and thoff are initialized"
    ]
  },
  {
    "index": 1070,
    "id": "CVE-2017-13686",
    "commit_id": "bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205",
    "added_lines": [
      "if (rtm->rtm_flags & RTM_F_FIB_MATCH)",
      "if (!res.fi)",
      "err = fib_props[res.type].error",
      "if (!err",
      "err = -EHOSTUNREACH",
      "goto errout_free",
      "} else"
    ],
    "removed_lines": [
      "if (rtm->rtm_flags & RTM_F_FIB_MATCH",
      "else"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1071,
    "id": "CVE-2017-13658",
    "commit_id": "e5c063a1007506ba69e97a35effcdef944421c89",
    "added_lines": [
      "if (clone_info != (ImageInfo *) NULL",
      "clone_info=DestroyImageInfo(clone_info"
    ],
    "removed_lines": [
      "clone_info=DestroyImageInfo(clone_info"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1162,
    "id": "CVE-2017-12877",
    "commit_id": "04178de2247e353fc095846784b9a10fefdbf890",
    "added_lines": [
      "if (tmp == image2",
      "image2=(Image *) NULL"
    ],
    "removed_lines": [
      "if (clone_info",
      "clone_info=DestroyImageInfo(clone_info"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1167,
    "id": "CVE-2017-12678",
    "commit_id": "eb9ded1206f18f2c319157337edea2533a40bea6#diff-37f706c8696a7c1ca939b169c0a04d97",
    "added_lines": [
      "dynamic_cast<TextIdentificationFrame *>(tag->frameList(\"TDRC\").front",
      "if(tdrc &&",
      "tdrc->fieldList().size() == 1 &&"
    ],
    "removed_lines": [
      "static_cast<TextIdentificationFrame *>(tag->frameList(\"TDRC\").front",
      "if(tdrc->fieldList().size() == 1 &&"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "pointer to cast vulnerability"
    ]
  },
  {
    "index": 1180,
    "id": "CVE-2017-12595",
    "commit_id": "ad527a64f93dca12f6aabab2ca99ae5eb352ab4b",
    "added_lines": [
      "WARNING: issue-146.pdf: file is damaged",
      "WARNING: issue-146.pdf: can't find startxref",
      "WARNING: issue-146.pdf: Attempting to reconstruct cross-reference table",
      "WARNING: issue-146.pdf (trailer, file position 20728): unknown token while reading object; treating as string",
      "issue-146.pdf (trailer, file position 20732): EOF while reading token"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault",
      "stack consumption"
    ]
  },
  {
    "index": 1182,
    "id": "CVE-2017-12476",
    "commit_id": "4d3f0bebd5f8518fd775f671c12bea58c68e814e",
    "added_lines": [
      "#define AP4_VERSION        0x01050001",
      "#define AP4_VERSION_STRING \"1.5.0.1\""
    ],
    "removed_lines": [
      "#define AP4_VERSION        0x01050000",
      "#define AP4_VERSION_STRING \"1.5.0.0\""
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1183,
    "id": "CVE-2017-12427",
    "commit_id": "e793eb203e5e0f91f5037aed6585e81b1e27395b",
    "added_lines": [
      "Free resources.",
      "msl_info.image_info=(ImageInfo **) RelinquishMagickMemory",
      "msl_info.image_info",
      "msl_info.draw_info=(DrawInfo **) RelinquishMagickMemory(msl_info.draw_info",
      "msl_info.image=(Image **) RelinquishMagickMemory(msl_info.image",
      "msl_info.attributes=(Image **) RelinquishMagickMemory(msl_info.attributes",
      "msl_info.group_info=(MSLGroupInfo *) RelinquishMagickMemory",
      "msl_info.group_info"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1184,
    "id": "CVE-2017-12193",
    "commit_id": "ea6789980fdaa610d7eb63602c746bf6ec70cd2b",
    "added_lines": [
      "pr_devel(\"present leaves cluster but not new leaf\\n\""
    ],
    "removed_lines": [
      "goto present_leaves_cluster_but_not_new_leaf",
      "present_leaves_cluster_but_not_new_leaf:",
      "pr_devel(\"present leaves cluster but not new leaf\\n\"",
      "new_n0->back_pointer = node->back_pointer",
      "new_n0->parent_slot = node->parent_slot",
      "new_n0->nr_leaves_on_branch = node->nr_leaves_on_branch",
      "new_n1->back_pointer = assoc_array_node_to_ptr(new_n0",
      "new_n1->parent_slot = edit->segment_cache[0]",
      "new_n1->nr_leaves_on_branch = node->nr_leaves_on_branch",
      "edit->adjust_count_on = new_n0",
      "for (i = 0; i < ASSOC_ARRAY_FAN_OUT; i++",
      "new_n1->slots[i] = node->slots[i]",
      "new_n0->slots[edit->segment_cache[0]] = assoc_array_node_to_ptr(new_n0",
      "edit->leaf_p = &new_n0->slots[edit->segment_cache[ASSOC_ARRAY_FAN_OUT]]",
      "edit->set[0].ptr = &assoc_array_ptr_to_node(node->back_pointer)->slots[node->parent_slot]",
      "edit->set[0].to = assoc_array_node_to_ptr(new_n0",
      "edit->excised_meta[0] = assoc_array_node_to_ptr(node",
      "pr_devel(\"<--%s() = ok [insert node before]\\n\", __func__",
      "return true"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1185,
    "id": "CVE-2017-12192",
    "commit_id": "37863c43b2c6464f252862bf2e9768264e961678",
    "added_lines": [
      "if (test_bit(KEY_FLAG_NEGATIVE, &key->flags))",
      "ret = -ENOKEY",
      "goto error2"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly consider"
    ]
  },
  {
    "index": 1187,
    "id": "CVE-2017-12168",
    "commit_id": "9e3f7a29694049edd728e2400ab57ad7553e5aa9",
    "added_lines": [
      "return false",
      "} else if (r->CRn == 0 && r->CRm == 9)",
      "if (pmu_access_event_counter_el0_disabled(vcpu",
      "return false",
      "idx = ARMV8_PMU_CYCLE_IDX",
      "return false"
    ],
    "removed_lines": [
      "BUG",
      "BUG"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1191,
    "id": "CVE-2017-11719",
    "commit_id": "296debd213bd6dce7647cedd34eb64e5b94cdc92",
    "added_lines": [
      "if (ctx->mb_height > 68)",
      "if ((ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4)",
      "av_log(ctx->avctx, AV_LOG_ERROR,",
      "\"mb height too big: %d\\n\", ctx->mb_height",
      "return AVERROR_INVALIDDATA"
    ],
    "removed_lines": [
      "if (ctx->mb_height > 68 ||",
      "(ctx->mb_height << frame->interlaced_frame) > (ctx->height + 15) >> 4)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access"
    ]
  },
  {
    "index": 1192,
    "id": "CVE-2017-11665",
    "commit_id": "ffcc82219cef0928bed2d558b19ef6ea35634130",
    "added_lines": [
      "static int amf_get_field_value2(GetByteContext *gb,",
      "while (bytestream2_peek_byte(gb) != AMF_DATA_TYPE_OBJECT && bytestream2_get_bytes_left(gb) > 0)",
      "int ret = amf_tag_skip(gb",
      "if (ret < 0",
      "return -1",
      "if (bytestream2_get_bytes_left(gb) < 3",
      "bytestream2_get_byte(gb",
      "int size = bytestream2_get_be16(gb",
      "if (size < 0 || size >= bytestream2_get_bytes_left(gb",
      "bytestream2_skip(gb, size",
      "if (size == namelen && !memcmp(gb->buffer-size, name, namelen))",
      "switch (bytestream2_get_byte(gb))",
      "snprintf(dst, dst_size, \"%g\", av_int2double(bytestream2_get_be64(gb",
      "snprintf(dst, dst_size, \"%s\", bytestream2_get_byte(gb) ? \"true\" : \"false\"",
      "len = bytestream2_get_be16(gb",
      "if (dst_size < 1",
      "return -1",
      "if (dst_size < len + 1",
      "len = dst_size - 1",
      "bytestream2_get_buffer(gb, dst, len",
      "dst[len] = 0",
      "len = amf_tag_skip(gb",
      "if (len < 0 || bytestream2_get_bytes_left(gb) <= 0",
      "int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
      "const uint8_t *name, uint8_t *dst, int dst_size",
      "GetByteContext gb",
      "if (data >= data_end",
      "return -1",
      "bytestream2_init(&gb, data, data_end - data",
      "return amf_get_field_value2(&gb, name, dst, dst_size"
    ],
    "removed_lines": [
      "int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,",
      "while (*data != AMF_DATA_TYPE_OBJECT && data < data_end)",
      "len = ff_amf_tag_size(data, data_end",
      "if (len < 0",
      "len = data_end - data",
      "data += len",
      "if (data_end - data < 3",
      "data++",
      "int size = bytestream_get_be16(&data",
      "if (size < 0 || size >= data_end - data",
      "data += size",
      "if (size == namelen && !memcmp(data-size, name, namelen))",
      "switch (*data++)",
      "snprintf(dst, dst_size, \"%g\", av_int2double(AV_RB64(data",
      "snprintf(dst, dst_size, \"%s\", *data ? \"true\" : \"false\"",
      "len = bytestream_get_be16(&data",
      "av_strlcpy(dst, data, FFMIN(len+1, dst_size",
      "len = ff_amf_tag_size(data, data_end",
      "if (len < 0 || len >= data_end - data",
      "data += len"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation violation"
    ]
  },
  {
    "index": 1193,
    "id": "CVE-2017-11664",
    "commit_id": "660b513d99bced8783a4a5984ac2f742c74ebbdd",
    "added_lines": [
      "uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event)",
      "if (!siz) goto shortbuf",
      "if (--siz == 0) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 4) goto shortbuf",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!tmp_length) break;",
      "if (siz < 3) goto shortbuf",
      "if (siz < 3) goto shortbuf",
      "if (siz < 2) goto shortbuf",
      "if (siz < 5) goto shortbuf",
      "if (siz < 7) goto shortbuf",
      "if (siz < 6) goto shortbuf",
      "if (siz < 4) goto shortbuf",
      "if (--siz && *event_data > 0x7f)",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < tmp_length) goto shortbuf",
      "if (!siz) break",
      "siz--",
      "if (!siz) goto shortbuf",
      "if (--siz < sysex_len) goto shortbuf",
      "if (!sysex_len) break;",
      "shortbuf:",
      "_WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, \"(too short)\", 0",
      "return 0"
    ],
    "removed_lines": [
      "uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (*event_data > 0x7f)",
      "if (!sysex_len) break"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid memory read"
    ]
  },
  {
    "index": 1194,
    "id": "CVE-2017-11523",
    "commit_id": "a8f9c2aabed37cd6a728532d1aed13ae0f3dfd78",
    "added_lines": [
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1195,
    "id": "CVE-2017-11522",
    "commit_id": "816ecab6c532ae086ff4186b3eaf4aa7092d536f",
    "added_lines": [
      "if (image == (Image *) NULL",
      "return(MagickFalse",
      "ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\""
    ],
    "removed_lines": [
      "ThrowWriterException(ResourceLimitError, \"MemoryAllocationFailed\""
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1198,
    "id": "CVE-2017-11450",
    "commit_id": "948356eec65aea91995d4b7cc487d197d2c5f602",
    "added_lines": [
      "Verify that file size large enough to contain a JPEG datastream.",
      "if (GetBlobSize(image) < 107",
      "ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\"",
      "entry->seekable_stream=MagickTrue",
      "entry->seekable_stream=MagickTrue",
      "entry->seekable_stream=MagickTrue",
      "entry->seekable_stream=MagickTrue",
      "entry->seekable_stream=MagickTrue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1199,
    "id": "CVE-2017-11449",
    "commit_id": "b007dd3a048097d8f58949297f5b434612e1e1a3",
    "added_lines": [
      "entry->seekable_stream=MagickTrue",
      "entry->seekable_stream=MagickTrue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not enable seekable streams and thus cannot validate blob sizes"
    ]
  },
  {
    "index": 1201,
    "id": "CVE-2017-11447",
    "commit_id": "8c10b9247509c0484b55330458846115131ec2ae",
    "added_lines": [
      "if (image == (Image *) NULL",
      "image=screen",
      "else",
      "AppendImageToList(&image,screen"
    ],
    "removed_lines": [
      "if (image == (Image *) NULL",
      "image=screen",
      "else",
      "AppendImageToList(&image,screen"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1206,
    "id": "CVE-2017-11176",
    "commit_id": "f991af3daabaecff34684fd51fac80319d1baad1",
    "added_lines": [
      "if (ret == 1)",
      "sock = NULL"
    ],
    "removed_lines": [
      "if (ret == 1"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1208,
    "id": "CVE-2017-11142",
    "commit_id": "0f8cf3b8497dc45c010c44ed9e96518e11e19fc3",
    "added_lines": [
      "size_t already_scanned",
      "char *start, *ksep, *vsep, *val",
      "start = var->ptr + var->already_scanned",
      "vsep = memchr(start, '&', var->end - start",
      "var->already_scanned = var->end - var->ptr",
      "var->already_scanned = 0",
      "if (!eof && vars->str.c != vars->ptr)"
    ],
    "removed_lines": [
      "char *ksep, *vsep, *val",
      "vsep = memchr(var->ptr, '&', var->end - var->ptr",
      "if (!eof)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "by injecting long form variables"
    ]
  },
  {
    "index": 1212,
    "id": "CVE-2017-10810",
    "commit_id": "385aee965b4e4c36551c362a334378d2985b722a",
    "added_lines": [
      "if (ret != 0)",
      "kfree(bo"
    ],
    "removed_lines": [
      "if (ret != 0"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1217,
    "id": "CVE-2017-10661",
    "commit_id": "1e38da300e1e395a15048b0af1e5305bd91402f6",
    "added_lines": [
      "spinlock_t cancel_lock",
      "static void __timerfd_remove_cancel(struct timerfd_ctx *ctx",
      "static void timerfd_remove_cancel(struct timerfd_ctx *ctx",
      "spin_lock(&ctx->cancel_lock",
      "__timerfd_remove_cancel(ctx",
      "spin_unlock(&ctx->cancel_lock",
      "spin_lock(&ctx->cancel_lock",
      "} else",
      "__timerfd_remove_cancel(ctx",
      "spin_unlock(&ctx->cancel_lock",
      "spin_lock_init(&ctx->cancel_lock"
    ],
    "removed_lines": [
      "static void timerfd_remove_cancel(struct timerfd_ctx *ctx",
      "} else if (ctx->might_cancel)",
      "timerfd_remove_cancel(ctx"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 7.6,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1225,
    "id": "CVE-2017-9985",
    "commit_id": "20e2b791796bd68816fa115f12be5320de2b8021",
    "added_lines": [
      "u16 head, tail, size",
      "head = readw(chip->DSPQ + JQS_wHead",
      "tail = readw(chip->DSPQ + JQS_wTail",
      "size = readw(chip->DSPQ + JQS_wSize",
      "if (head > size || tail > size",
      "goto out",
      "while (head != tail)",
      "snd_msnd_eval_dsp_msg(chip, readw(pwDSPQData + 2 * head",
      "if (++head > size",
      "head = 0",
      "writew(head, chip->DSPQ + JQS_wHead",
      "out:"
    ],
    "removed_lines": [
      "while (readw(chip->DSPQ + JQS_wTail) != readw(chip->DSPQ + JQS_wHead))",
      "u16 wTmp",
      "snd_msnd_eval_dsp_msg(chip,",
      "readw(pwDSPQData + 2 * readw(chip->DSPQ + JQS_wHead",
      "wTmp = readw(chip->DSPQ + JQS_wHead) + 1",
      "if (wTmp > readw(chip->DSPQ + JQS_wSize",
      "writew(0, chip->DSPQ + JQS_wHead",
      "else",
      "writew(wTmp, chip->DSPQ + JQS_wHead"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "*double fetch* vulnerability"
    ]
  },
  {
    "index": 1226,
    "id": "CVE-2017-9949",
    "commit_id": "796dd28aaa6b9fa76d99c42c4d5ff8b257cc2191",
    "added_lines": [
      "RebuildFs()",
      "Rebuild shlr/grub",
      "Rebuild libr/fs",
      "fs)     RebuildFs;"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "buffer underflow"
    ]
  },
  {
    "index": 1230,
    "id": "CVE-2017-9608",
    "commit_id": "31c1c0b46a7021802c3d1d18039fca30dba5a14e",
    "added_lines": [
      "int remaining",
      "remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (remaining <= 0)",
      "remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (remaining <= 0",
      "continue",
      "dctx->remaining = remaining"
    ],
    "removed_lines": [
      "dctx->remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (dctx->remaining <= 0)",
      "dctx->remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (dctx->remaining <= 0",
      "return dctx->remaining"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1232,
    "id": "CVE-2017-9527",
    "commit_id": "5c114c91d4ff31859fcd84cf8bf349b737b90d99",
    "added_lines": [
      "mrb_value nil",
      "mrb_gc_mark(mrb, mrb_basic_ptr(v",
      "e = c->stend - c->stbase",
      "nil = mrb_nil_value",
      "for (; i<e; i++)",
      "c->stbase[i] = nil"
    ],
    "removed_lines": [
      "if (mrb_basic_ptr(v)->tt == MRB_TT_FREE)",
      "c->stbase[i] = mrb_nil_value",
      "else",
      "mrb_gc_mark(mrb, mrb_basic_ptr(v"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1233,
    "id": "CVE-2017-9520",
    "commit_id": "f85bc674b2a2256a364fe796351bc1971e106005",
    "added_lines": [
      "char * arch = strdup(info->arch",
      "char * cpu = info->cpu? strdup(info->cpu): NULL",
      "if (cpu && *cpu)",
      "r_config_set (r->config, \"anal.cpu\", cpu",
      "free (cpu",
      "free (arch"
    ],
    "removed_lines": [
      "const char * arch = info->arch",
      "if (info->cpu && *info->cpu)",
      "r_config_set (r->config, \"anal.cpu\", info->cpu"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1234,
    "id": "CVE-2017-9501",
    "commit_id": "01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74",
    "added_lines": [
      "image=(Image *) RelinquishMagickMemory(image"
    ],
    "removed_lines": [
      "clone_image=DestroyImage(clone_image"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1235,
    "id": "CVE-2017-9499",
    "commit_id": "7fd419441bc7103398e313558171d342c6315f44",
    "added_lines": [
      "if (image->number_meta_channels > MaxPixelChannels",
      "ThrowReaderException(CorruptImageError,",
      "\"ImproperImageHeader\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1236,
    "id": "CVE-2017-9465",
    "commit_id": "992480c30f75943e9cd6245bb2015c7737f9b661",
    "added_lines": [
      "assert(match_offset + match_length <= callback_args->data_size"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS +Info",
    "score": 5.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Info ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1238,
    "id": "CVE-2017-9438",
    "commit_id": "10e8bd3071677dd1fa76beeef4bc2fc427cea5e7",
    "added_lines": [
      "#define incr_ast_levels() \\",
      "if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
      "{ \\",
      "lex_env->last_error_code = ERROR_INVALID_HEX_STRING; \\",
      "YYABORT; \\",
      "incr_ast_levels",
      "incr_ast_levels",
      "incr_ast_levels",
      "incr_ast_levels"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "stack consumption"
    ]
  },
  {
    "index": 1241,
    "id": "CVE-2017-9304",
    "commit_id": "925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699",
    "added_lines": [
      "#define incr_ast_levels() \\",
      "if (((RE_AST*) yyget_extra(yyscanner))->levels++ > RE_MAX_AST_LEVELS) \\",
      "{ \\",
      "lex_env->last_error_code = ERROR_INVALID_REGULAR_EXPRESSION; \\",
      "YYABORT; \\",
      "incr_ast_levels",
      "incr_ast_levels",
      "incr_ast_levels",
      "incr_ast_levels"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "stack consumption"
    ]
  },
  {
    "index": 1242,
    "id": "CVE-2017-9250",
    "commit_id": "03a8c630f015f63268639d3ed3bf82cff6fa77d8",
    "added_lines": [
      "'\\",
      "'"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1243,
    "id": "CVE-2017-9242",
    "commit_id": "232cd35d0804cc241eb887bb8d4d9b3b9881c64a",
    "added_lines": [
      "copy = datalen - transhdrlen - fraggap",
      "if (copy < 0)",
      "err = -EINVAL",
      "goto error",
      "if (copy > 0 &&",
      "getfrag(from, data + transhdrlen, offset,",
      "copy, fraggap, skb) < 0)"
    ],
    "removed_lines": [
      "copy = datalen - transhdrlen - fraggap",
      "if (copy < 0)",
      "err = -EINVAL",
      "kfree_skb(skb",
      "goto error",
      "} else if (copy > 0 && getfrag(from, data + transhdrlen, offset, copy, fraggap, skb) < 0)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "is too late in checking whether an overwrite of an skb data structure may occur"
    ]
  },
  {
    "index": 1250,
    "id": "CVE-2017-9217",
    "commit_id": "a924f43f30f9c4acaf70618dd2a055f8b0f166be",
    "added_lines": [
      "if (!p->question",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1251,
    "id": "CVE-2017-9211",
    "commit_id": "9933e113c2e87a9f46a40fde8dafbf801dca1ab9",
    "added_lines": [
      "static int skcipher_setkey_unaligned(struct crypto_skcipher *tfm,",
      "const u8 *key, unsigned int keylen",
      "unsigned long alignmask = crypto_skcipher_alignmask(tfm",
      "struct skcipher_alg *cipher = crypto_skcipher_alg(tfm",
      "u8 *buffer, *alignbuffer",
      "unsigned long absize",
      "int ret",
      "absize = keylen + alignmask",
      "buffer = kmalloc(absize, GFP_ATOMIC",
      "if (!buffer",
      "return -ENOMEM",
      "alignbuffer = (u8 *)ALIGN((unsigned long)buffer, alignmask + 1",
      "memcpy(alignbuffer, key, keylen",
      "ret = cipher->setkey(tfm, alignbuffer, keylen",
      "kzfree(buffer",
      "return ret",
      "static int skcipher_setkey(struct crypto_skcipher *tfm, const u8 *key,",
      "unsigned int keylen",
      "struct skcipher_alg *cipher = crypto_skcipher_alg(tfm",
      "unsigned long alignmask = crypto_skcipher_alignmask(tfm",
      "if (keylen < cipher->min_keysize || keylen > cipher->max_keysize)",
      "crypto_skcipher_set_flags(tfm, CRYPTO_TFM_RES_BAD_KEY_LEN",
      "return -EINVAL",
      "if ((unsigned long)key & alignmask",
      "return skcipher_setkey_unaligned(tfm, key, keylen",
      "return cipher->setkey(tfm, key, keylen",
      "skcipher->setkey = skcipher_setkey"
    ],
    "removed_lines": [
      "skcipher->setkey = alg->setkey"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1252,
    "id": "CVE-2017-9207",
    "commit_id": "b45cb1b665a14b0175b9cb1502ef7168e1fe0d5d",
    "added_lines": [
      "static unsigned int get_exif_ui16(struct iw_exif_state *e, unsigned int pos",
      "if(e->d_len<2 || pos>e->d_len-2) return 0",
      "return iw_get_ui16_e(&e->d[pos], e->endian",
      "static unsigned int get_exif_ui32(struct iw_exif_state *e, unsigned int pos",
      "if(e->d_len<4 || pos>e->d_len-4) return 0",
      "return iw_get_ui32_e(&e->d[pos], e->endian",
      "field_type = get_exif_ui16(e, tag_pos+2",
      "value_count = get_exif_ui32(e, tag_pos+4",
      "field_type = get_exif_ui16(e, tag_pos+2",
      "value_count = get_exif_ui32(e, tag_pos+4",
      "value_pos = get_exif_ui32(e, tag_pos+8",
      "numer = get_exif_ui32(e, value_pos",
      "denom = get_exif_ui32(e, value_pos+4",
      "if(ifd<8 || e->d_len<18 || ifd>e->d_len-18) return",
      "tag_count = get_exif_ui16(e, ifd",
      "tag_id = get_exif_ui16(e, tag_pos",
      "ifd = get_exif_ui32(&e, 4"
    ],
    "removed_lines": [
      "field_type = iw_get_ui16_e(&e->d[tag_pos+2],e->endian",
      "value_count = iw_get_ui32_e(&e->d[tag_pos+4],e->endian",
      "field_type = iw_get_ui16_e(&e->d[tag_pos+2],e->endian",
      "value_count = iw_get_ui32_e(&e->d[tag_pos+4],e->endian",
      "value_pos = iw_get_ui32_e(&e->d[tag_pos+8],e->endian",
      "numer = iw_get_ui32_e(&e->d[value_pos  ],e->endian",
      "denom = iw_get_ui32_e(&e->d[value_pos+4],e->endian",
      "if(ifd<8 || ifd>e->d_len-18) return",
      "tag_count = iw_get_ui16_e(&e->d[ifd],e->endian",
      "tag_id = iw_get_ui16_e(&e->d[tag_pos],e->endian",
      "ifd = iw_get_ui32_e(&d[4],e.endian"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1253,
    "id": "CVE-2017-9203",
    "commit_id": "a4f247707f08e322f0b41e82c3e06e224240a654",
    "added_lines": [
      "struct iw_channelinfo_out default_ci_out",
      "if(output_channel>=0)",
      "out_ci = &ctx->img2_ci[output_channel]",
      "else",
      "iw_zeromem(&default_ci_out, sizeof(struct iw_channelinfo_out",
      "default_ci_out.channeltype = IW_CHANNELTYPE_NONALPHA",
      "out_ci = &default_ci_out"
    ],
    "removed_lines": [
      "out_ci = &ctx->img2_ci[output_channel]"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer underflow"
    ]
  },
  {
    "index": 1254,
    "id": "CVE-2017-9202",
    "commit_id": "dc49c807926b96e503bd7c0dec35119eecd6c6fe",
    "added_lines": [
      "if(ctx->img1.density_code==IW_DENSITY_UNKNOWN)",
      "return 0",
      "if(!iw_is_valid_density(ctx->img1.density_x, ctx->img1.density_y,",
      "ctx->img1.density_code",
      "return 0",
      "return 1"
    ],
    "removed_lines": [
      "if(ctx->img1.density_code!=IW_DENSITY_UNKNOWN)",
      "return 1",
      "return 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1257,
    "id": "CVE-2017-9143",
    "commit_id": "7b8c1df65b25d6671f113e2306982eded44ce3b4",
    "added_lines": [
      "quantum_info=DestroyQuantumInfo(quantum_info",
      "ThrowReaderException(CorruptImageError,\"UnableToReadImageData\""
    ],
    "removed_lines": [
      "ThrowReaderException(CorruptImageError,\"UnableToReadImageData\""
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1261,
    "id": "CVE-2017-9077",
    "commit_id": "83eaddab4378db256d00d295bda6ca997cd13a52",
    "added_lines": [
      "newnp->ipv6_mc_list = NULL",
      "newnp->ipv6_mc_list = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "mishandles inheritance"
    ]
  },
  {
    "index": 1262,
    "id": "CVE-2017-9075",
    "commit_id": "fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8",
    "added_lines": [
      "newnp->ipv6_mc_list = NULL",
      "newnp->ipv6_ac_list = NULL",
      "newnp->ipv6_fl_list = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "mishandles inheritance"
    ]
  },
  {
    "index": 1263,
    "id": "CVE-2017-9074",
    "commit_id": "2423496af35d94a87156b063ea5cedffc10a70a1",
    "added_lines": [
      "if (unfrag_ip6hlen < 0",
      "return ERR_PTR(unfrag_ip6hlen"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1264,
    "id": "CVE-2017-9059",
    "commit_id": "c70422f760c120480fee4de6c38804c72aa26bc1",
    "added_lines": [
      "INIT_LIST_HEAD(&cma_xprt->sc_rw_ctxts",
      "spin_lock_init(&cma_xprt->sc_rw_ctxt_lock",
      "newxprt->sc_port_num = newxprt->sc_cm_id->port_num",
      "newxprt->sc_sq_depth = newxprt->sc_rq_depth",
      "qp_attr.port_num = newxprt->sc_cm_id->port_num",
      "qp_attr.cap.max_rdma_ctxs = newxprt->sc_max_requests",
      "svc_rdma_destroy_rw_ctxts(rdma"
    ],
    "removed_lines": [
      "static struct svc_rdma_req_map *alloc_req_map(gfp_t flags",
      "struct svc_rdma_req_map *map",
      "map = kmalloc(sizeof(*map), flags",
      "if (map",
      "INIT_LIST_HEAD(&map->free",
      "return map",
      "static bool svc_rdma_prealloc_maps(struct svcxprt_rdma *xprt",
      "unsigned int i",
      "i = xprt->sc_max_requests",
      "while (i--)",
      "struct svc_rdma_req_map *map",
      "map = alloc_req_map(GFP_KERNEL",
      "if (!map)",
      "dprintk(\"svcrdma: No memory for request map\\n\"",
      "return false",
      "list_add(&map->free, &xprt->sc_maps",
      "return true",
      "struct svc_rdma_req_map *svc_rdma_get_req_map(struct svcxprt_rdma *xprt",
      "struct svc_rdma_req_map *map = NULL",
      "spin_lock(&xprt->sc_map_lock",
      "if (list_empty(&xprt->sc_maps",
      "goto out_empty",
      "map = list_first_entry(&xprt->sc_maps,",
      "struct svc_rdma_req_map, free",
      "list_del_init(&map->free",
      "spin_unlock(&xprt->sc_map_lock",
      "out:",
      "map->count = 0",
      "return map",
      "out_empty:",
      "spin_unlock(&xprt->sc_map_lock",
      "map = alloc_req_map(GFP_NOIO",
      "if (map",
      "goto out",
      "WARN_ONCE(1, \"svcrdma: empty request map list?\\n\"",
      "return NULL",
      "void svc_rdma_put_req_map(struct svcxprt_rdma *xprt,",
      "struct svc_rdma_req_map *map",
      "spin_lock(&xprt->sc_map_lock",
      "list_add(&map->free, &xprt->sc_maps",
      "spin_unlock(&xprt->sc_map_lock",
      "static void svc_rdma_destroy_maps(struct svcxprt_rdma *xprt",
      "while (!list_empty(&xprt->sc_maps))",
      "struct svc_rdma_req_map *map",
      "map = list_first_entry(&xprt->sc_maps,",
      "struct svc_rdma_req_map, free",
      "list_del(&map->free",
      "kfree(map",
      "void svc_rdma_wc_write(struct ib_cq *cq, struct ib_wc *wc",
      "struct ib_cqe *cqe = wc->wr_cqe",
      "struct svc_rdma_op_ctxt *ctxt",
      "svc_rdma_send_wc_common_put(cq, wc, \"write\"",
      "ctxt = container_of(cqe, struct svc_rdma_op_ctxt, cqe",
      "svc_rdma_unmap_dma(ctxt",
      "svc_rdma_put_context(ctxt, 0",
      "INIT_LIST_HEAD(&cma_xprt->sc_maps",
      "spin_lock_init(&cma_xprt->sc_map_lock",
      "newxprt->sc_sq_depth = RPCRDMA_SQ_DEPTH_MULT * newxprt->sc_rq_depth",
      "if (!svc_rdma_prealloc_maps(newxprt",
      "goto errout",
      "svc_rdma_destroy_maps(rdma"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "MEM_FREE",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "*module reference and kernel daemon* leak"
    ]
  },
  {
    "index": 1266,
    "id": "CVE-2017-8929",
    "commit_id": "053e67e3ec81cc9268ce30eaf0d6663d8639ed1e",
    "added_lines": [
      "assert_true_rule",
      "\"import \\\"tests\\\" \\",
      "rule test { \\",
      "condition: tests.foobar(1) == tests.foobar(1) \\",
      "}\",",
      "NULL",
      "assert_true_rule",
      "\"import \\\"tests\\\" \\",
      "rule test { \\",
      "condition: tests.foobar(1) != tests.foobar(2) \\",
      "}\",",
      "NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1267,
    "id": "CVE-2017-8925",
    "commit_id": "30572418b445d85fcfe6c8fe84c947d2606767d8",
    "added_lines": [],
    "removed_lines": [
      "struct usb_serial\t*serial = port->serial",
      "struct usb_serial_port\t*wport",
      "wport = serial->port[1]",
      "tty_port_tty_set(&wport->port, tty"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "reference count mishandling"
    ]
  },
  {
    "index": 1270,
    "id": "CVE-2017-8890",
    "commit_id": "657831ffc38e30092a2d5f03d385d710eb88b09a",
    "added_lines": [
      "inet_sk(newsk)->mc_list = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1271,
    "id": "CVE-2017-8831",
    "commit_id": "354dd3924a2e43806774953de536257548b5002c",
    "added_lines": [
      "memcpy(msg, &msg_tmp, sizeof(*msg"
    ],
    "removed_lines": [
      "memcpy(msg, &msg_tmp, sizeof(*msg",
      "memcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, space_rem",
      "memcpy_fromio((u8 *)msg + space_rem, bus->m_pdwGetRing,",
      "sizeof(*msg) - space_rem",
      "memcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg",
      "memcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg",
      "memcpy_fromio(msg, bus->m_pdwGetRing + curr_grp, sizeof(*msg",
      "msg->size = le16_to_cpu((__force __le16)msg->size",
      "msg->command = le32_to_cpu((__force __le32)msg->command",
      "msg->controlselector = le16_to_cpu((__force __le16)msg->controlselector"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "*double fetch* vulnerability",
      "out-of-bounds"
    ]
  },
  {
    "index": 1275,
    "id": "CVE-2017-8327",
    "commit_id": "86564051db45b466e5f667111ce00b5eeedc8fb6",
    "added_lines": [
      "#define IW_DEFAULT_MAX_DIMENSION 40000",
      "#define IW_DEFAULT_MAX_MALLOC 2000000000"
    ],
    "removed_lines": [
      "#define IW_DEFAULT_MAX_DIMENSION 1000000",
      "#define IW_DEFAULT_MAX_MALLOC 2000000000000"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1276,
    "id": "CVE-2017-8326",
    "commit_id": "a00183107d4b84bc8a714290e824ca9c68dac738",
    "added_lines": [
      "return (unsigned int)b[0] | ((unsigned int)b[1]<<8",
      "return (unsigned int)b[0] | ((unsigned int)b[1]<<8) |",
      "((unsigned int)b[2]<<16) | ((unsigned int)b[3]<<24",
      "return (iw_int32)(iw_uint32)((unsigned int)b[0] | ((unsigned int)b[1]<<8) |",
      "((unsigned int)b[2]<<16) | ((unsigned int)b[3]<<24",
      "return ((unsigned int)b[0]<<8) | (unsigned int)b[1]",
      "return ((unsigned int)b[0]<<24) | ((unsigned int)b[1]<<16) |",
      "((unsigned int)b[2]<<8) | (unsigned int)b[3]"
    ],
    "removed_lines": [
      "return b[0] | (b[1]<<8",
      "return b[0] | (b[1]<<8) | (b[2]<<16) | (b[3]<<24",
      "return (iw_int32)(iw_uint32)(b[0] | (b[1]<<8) | (b[2]<<16) | (b[3]<<24",
      "return (b[0]<<8) | b[1]",
      "return (b[0]<<24) | (b[1]<<16) | (b[2]<<8) | b[3]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN",
      "ARRAY_ACCESS",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "has *left shift cannot be represented in type int* undefined behavior issues"
    ]
  },
  {
    "index": 1277,
    "id": "CVE-2017-8294",
    "commit_id": "83d799804648c2a0895d40a19835d9b757c6fa4e",
    "added_lines": [
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "\"\\0a\\0b\\0c\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "\"\\ta\\0b\\0c\\0\"",
      "assert_false_rule_blob",
      "\"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "\"x\\0a\\0b\\0c\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /\\\\babc/ wide condition: $a }\",",
      "\"x\\ta\\0b\\0c\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0\\t\"",
      "assert_false_rule_blob",
      "\"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0x\\0\"",
      "assert_true_rule_blob",
      "\"rule test { strings: $a = /abc\\\\b/ wide condition: $a }\",",
      "\"a\\0b\\0c\\0b\\t\"",
      "assert_false_rule_blob",
      "\"rule test { strings: $a = /\\\\b/ wide condition: $a }\",",
      "\"abc\""
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1282,
    "id": "CVE-2017-8071",
    "commit_id": "7a7b5df84b6b4e5d599c7289526eed96541a0654",
    "added_lines": [
      "struct mutex lock",
      "mutex_lock(&dev->lock",
      "mutex_unlock(&dev->lock",
      "mutex_lock(&dev->lock",
      "mutex_unlock(&dev->lock",
      "mutex_lock(&dev->lock",
      "mutex_unlock(&dev->lock",
      "mutex_lock(&dev->lock",
      "mutex_unlock(&dev->lock",
      "mutex_unlock(&dev->lock",
      "mutex_init(&dev->lock"
    ],
    "removed_lines": [
      "spinlock_t lock",
      "unsigned long flags",
      "spin_lock_irqsave(&dev->lock, flags",
      "spin_unlock_irqrestore(&dev->lock, flags",
      "unsigned long flags",
      "spin_lock_irqsave(&dev->lock, flags",
      "spin_unlock_irqrestore(&dev->lock, flags",
      "unsigned long flags",
      "spin_lock_irqsave(&dev->lock, flags",
      "spin_unlock_irqrestore(&dev->lock, flags",
      "unsigned long flags",
      "spin_lock_irqsave(&dev->lock, flags",
      "spin_unlock_irqrestore(&dev->lock, flags",
      "spin_unlock_irqrestore(&dev->lock, flags",
      "spin_lock_init(&dev->lock"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 1293,
    "id": "CVE-2017-7962",
    "commit_id": "ca3356eb49fee03e2eaf6b6aff826988c1122d93",
    "added_lines": [
      "if(rctx->image_width<1 || rctx->image_height<1)",
      "iw_set_error(rctx->ctx, \"Invalid image dimensions\"",
      "goto done"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1294,
    "id": "CVE-2017-7946",
    "commit_id": "d1e8ac62c6d978d4662f69116e30230d43033c92",
    "added_lines": [
      "if (!parse_dylib (bin, off",
      "bin->dyld_info = calloc (1, sizeof (struct dyld_info_command",
      "if (bin->dyld_info)",
      "if (off + sizeof (struct dyld_info_command) > bin->size",
      "bprintf (\"Cannot parse dyldinfo\\n\"",
      "R_FREE (bin->dyld_info",
      "return false",
      "if (r_buf_read_at (bin->b, off, dyldi, sizeof (struct dyld_info_command)) == -1)",
      "free (bin->dyld_info",
      "bin->dyld_info = NULL",
      "bprintf (\"Error: read (LC_DYLD_INFO) at 0x%08\"PFMT64x\"\\n\", off",
      "} else",
      "bin->dyld_info->cmd = r_read_ble32 (&dyldi[0], bin->big_endian",
      "bin->dyld_info->cmdsize = r_read_ble32 (&dyldi[4], bin->big_endian",
      "bin->dyld_info->rebase_off = r_read_ble32 (&dyldi[8], bin->big_endian",
      "bin->dyld_info->rebase_size = r_read_ble32 (&dyldi[12], bin->big_endian",
      "bin->dyld_info->bind_off = r_read_ble32 (&dyldi[16], bin->big_endian",
      "bin->dyld_info->bind_size = r_read_ble32 (&dyldi[20], bin->big_endian",
      "bin->dyld_info->weak_bind_off = r_read_ble32 (&dyldi[24], bin->big_endian",
      "bin->dyld_info->weak_bind_size = r_read_ble32 (&dyldi[28], bin->big_endian",
      "bin->dyld_info->lazy_bind_off = r_read_ble32 (&dyldi[32], bin->big_endian",
      "bin->dyld_info->lazy_bind_size = r_read_ble32 (&dyldi[36], bin->big_endian",
      "bin->dyld_info->export_off = r_read_ble32 (&dyldi[40], bin->big_endian",
      "bin->dyld_info->export_size = r_read_ble32 (&dyldi[44], bin->big_endian",
      "if (bin->dyld_info->bind_off > bin->size || bin->dyld_info->bind_off + bind_size > bin->size)",
      "bin->dyld_info->lazy_bind_off + lazy_size > bin->size)",
      "if (bin->dyld_info->bind_off+bind_size+lazy_size > bin->size)",
      "if (!(relocs = calloc (1, (1 + bind_size + lazy_size) * sizeof (struct reloc_t))))",
      "if (!bin->symtab || !bin->symstr || !bin->sects || !bin->indirectsyms)",
      "if (!(relocs = malloc ((bin->dysymtab.nundefsym + 1) * sizeof(struct reloc_t))))",
      "if (parse_import_ptr (bin, &relocs[i], bin->dysymtab.iundefsym + j))",
      "if (!bin->nlibs)",
      "if (!(libs = calloc ((bin->nlibs + 1), sizeof(struct lib_t))))",
      "if (bin->hdr.filetype != MH_EXECUTE && bin->hdr.filetype != MH_DYLINKER)",
      "for (i = 0; i < bin->nsegs; ++i)",
      "if (bin->segs[i].fileoff == 0 && bin->segs[i].filesize != 0)",
      "if (entry > bin->size || entry + sizeof (b) > bin->size)"
    ],
    "removed_lines": [
      "if (!parse_dylib(bin, off",
      "bin->dyld_info = malloc (sizeof(struct dyld_info_command",
      "if (off + sizeof (struct dyld_info_command) > bin->size",
      "bprintf (\"Cannot parse dyldinfo\\n\"",
      "free (bin->dyld_info",
      "return false",
      "if (r_buf_read_at (bin->b, off, dyldi, sizeof (struct dyld_info_command)) == -1)",
      "free (bin->dyld_info",
      "bin->dyld_info = NULL",
      "bprintf (\"Error: read (LC_DYLD_INFO) at 0x%08\"PFMT64x\"\\n\", off",
      "} else",
      "bin->dyld_info->cmd = r_read_ble32 (&dyldi[0], bin->big_endian",
      "bin->dyld_info->cmdsize = r_read_ble32 (&dyldi[4], bin->big_endian",
      "bin->dyld_info->rebase_off = r_read_ble32 (&dyldi[8], bin->big_endian",
      "bin->dyld_info->rebase_size = r_read_ble32 (&dyldi[12], bin->big_endian",
      "bin->dyld_info->bind_off = r_read_ble32 (&dyldi[16], bin->big_endian",
      "bin->dyld_info->bind_size = r_read_ble32 (&dyldi[20], bin->big_endian",
      "bin->dyld_info->weak_bind_off = r_read_ble32 (&dyldi[24], bin->big_endian",
      "bin->dyld_info->weak_bind_size = r_read_ble32 (&dyldi[28], bin->big_endian",
      "bin->dyld_info->lazy_bind_off = r_read_ble32 (&dyldi[32], bin->big_endian",
      "bin->dyld_info->lazy_bind_size = r_read_ble32 (&dyldi[36], bin->big_endian",
      "bin->dyld_info->export_off = r_read_ble32 (&dyldi[40], bin->big_endian",
      "bin->dyld_info->export_size = r_read_ble32 (&dyldi[44], bin->big_endian",
      "if (bin->dyld_info->bind_off > bin->size || bin->dyld_info->bind_off + bind_size > bin->size",
      "bin->dyld_info->lazy_bind_off + lazy_size > bin->size",
      "if (bin->dyld_info->bind_off+bind_size+lazy_size > bin->size",
      "if (!(relocs = calloc (1, (1 + bind_size + lazy_size) * sizeof (struct reloc_t",
      "if (!bin->symtab || !bin->symstr || !bin->sects || !bin->indirectsyms",
      "if (!(relocs = malloc ((bin->dysymtab.nundefsym + 1) * sizeof(struct reloc_t",
      "if (parse_import_ptr(bin, &relocs[i], bin->dysymtab.iundefsym + j))",
      "if (!bin->nlibs",
      "if (!(libs = calloc ((bin->nlibs + 1), sizeof(struct lib_t",
      "if (bin->hdr.filetype != MH_EXECUTE && bin->hdr.filetype != MH_DYLINKER",
      "for (i = 0; i < bin->nsegs; ++i",
      "if (bin->segs[i].fileoff == 0 && bin->segs[i].filesize != 0",
      "if (entry > bin->size || entry + sizeof (b) > bin->size"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "MEM_ALLOC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "MEM_ALLOC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "MEM_ALLOC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1302,
    "id": "CVE-2017-7854",
    "commit_id": "d2632f6483a3ceb5d8e0a5fb11142c51c43978b4",
    "added_lines": [
      "i++",
      "ut32 len =  sec->payload_len",
      "int buflen = bin->buf->length - (ut32)sec->payload_data",
      "while (i < len && len < buflen && r < count)",
      "goto beach",
      "if (i + 4 >= buflen)",
      "goto beach",
      "goto beach",
      "goto beach",
      "if (i + 4 >= buflen)",
      "goto beach",
      "return ret",
      "beach:",
      "free (ptr",
      "int buflen = bin->buf->length - (ut32)sec->payload_data",
      "int buflen = bin->buf->length - (ut32)sec->payload_data",
      "while (i < len && len < buflen && r < count)",
      "goto beach",
      "goto beach",
      "goto beach",
      "while (i < len && j < ptr->num_elem)",
      "return ret",
      "beach:",
      "free (ptr"
    ],
    "removed_lines": [
      "i += 1",
      "ut32 len =  sec->payload_len",
      "while (i < len && r < count)",
      "free (ptr",
      "return ret",
      "free (ptr",
      "return ret",
      "free (ptr",
      "return ret",
      "int buflen = bin->buf->length",
      "if (sec->payload_data + 32 > buflen)",
      "return NULL",
      "while (i < len && r < count)",
      "free (ptr",
      "return ret",
      "free (ptr",
      "return ret",
      "free (ptr",
      "return ret",
      "while (i < len && j < ptr->num_elem\t)"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1304,
    "id": "CVE-2017-7645",
    "commit_id": "e6838a29ecb484c97e4efef9429643b9851fba6e",
    "added_lines": [
      "static bool nfs_request_too_big(struct svc_rqst *rqstp,",
      "struct svc_procedure *proc",
      "if (rqstp->rq_prog != NFS_PROGRAM",
      "return false",
      "if (rqstp->rq_vers >= 4",
      "return false",
      "if (proc->pc_xdrressize > 0 &&",
      "proc->pc_xdrressize < XDR_QUADLEN(PAGE_SIZE",
      "return false",
      "return rqstp->rq_arg.len > PAGE_SIZE",
      "if (nfs_request_too_big(rqstp, proc))",
      "dprintk(\"nfsd: NFSv%d argument too large\\n\", rqstp->rq_vers",
      "return 1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1309,
    "id": "CVE-2017-7533",
    "commit_id": "49d31c2f389acfe83417083e1208422b4091cd9e",
    "added_lines": [],
    "removed_lines": [
      "#if defined(CONFIG_FSNOTIFY)",
      "static inline const unsigned char *fsnotify_oldname_init(const unsigned char *name",
      "return kstrdup(name, GFP_KERNEL",
      "static inline void fsnotify_oldname_free(const unsigned char *old_name",
      "kfree(old_name",
      "#else",
      "static inline const char *fsnotify_oldname_init(const unsigned char *name",
      "return NULL",
      "static inline void fsnotify_oldname_free(const unsigned char *old_name",
      "#endif"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 6.9,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 1311,
    "id": "CVE-2017-7501",
    "commit_id": "404ef011c300207cdb1e531670384564aae04bdc",
    "added_lines": [
      "static int linkSane(FD_t wfd, const char *dest",
      "struct stat sb, lsb",
      "return (fstat(Fileno(wfd), &sb) == 0 && sb.st_size == 0 &&",
      "(sb.st_mode & ~S_IFMT) == S_IWUSR &&",
      "lstat(dest, &lsb) == 0 && S_ISREG(lsb.st_mode) &&",
      "sb.st_dev == lsb.st_dev && sb.st_ino == lsb.st_ino",
      "static int expandRegular(rpmfi fi, const char *dest, rpmpsm psm, int exclusive, int nodigest, int nocontent",
      "wfd = Fopen(dest, exclusive ? \"wx.ufdio\" : \"a.ufdio\"",
      "if (!exclusive && wfd != NULL && !linkSane(wfd, dest))",
      "rc = RPMERR_OPEN_FAILED",
      "goto exit",
      "rc = expandRegular(fi, dest, psm, 1, nodigest, 1",
      "rc = expandRegular(fi, dest, psm, 1, nodigest, 0",
      "rc = expandRegular(fi, dest, psm, 0, nodigest, 0",
      "rc = expandRegular(fi, fn, psm, 0, nodigest, 0"
    ],
    "removed_lines": [
      "static int expandRegular(rpmfi fi, const char *dest, rpmpsm psm, int nodigest, int nocontent",
      "wfd = Fopen(dest, \"w.ufdio\"",
      "rc = expandRegular(fi, dest, psm, nodigest, 1",
      "rc = expandRegular(fi, dest, psm, nodigest, 0",
      "rc = expandRegular(fi, dest, psm, nodigest, 0",
      "rc = expandRegular(fi, fn, psm, nodigest, 0"
    ],
    "cause": [
      "Configuration or Permissions Errors"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "permissions"
    ]
  },
  {
    "index": 1313,
    "id": "CVE-2017-7487",
    "commit_id": "ee0d8d8482345ff97a75a7d747efc309f13b0d80",
    "added_lines": [
      "rc = 0",
      "rc = -EFAULT"
    ],
    "removed_lines": [
      "rc = -EFAULT",
      "break",
      "rc = 0"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "ioctl call",
      "use-after-free"
    ]
  },
  {
    "index": 1314,
    "id": "CVE-2017-7472",
    "commit_id": "c9f838d104fed6f2f61d68164712e3204bf5271b",
    "added_lines": [
      "if (new->thread_keyring",
      "return 0",
      "return 0",
      "return ret"
    ],
    "removed_lines": [
      "BUG_ON(new->thread_keyring",
      "return -EEXIST",
      "return ret != -EEXIST ? ret : 0"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1315,
    "id": "CVE-2017-7448",
    "commit_id": "7789d99ac156adfd7bbf66e7824bd3e948a74cf7",
    "added_lines": [
      "freqmax_[(int)color][coord] = (freqmax[coord] + quantization_table_[(int)color][coord] - 1",
      "if (quantization_table_[(int)color][coord])",
      "freqmax_[(int)color][coord] /= quantization_table_[(int)color][coord]"
    ],
    "removed_lines": [
      "freqmax_[(int)color][coord] = (freqmax[coord] + quantization_table_[(int)color][coord] - 1",
      "/ quantization_table_[(int)color][coord]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1320,
    "id": "CVE-2017-7374",
    "commit_id": "1b53cf9815bb4744958d41f3795d5d5a1d365e2d",
    "added_lines": [
      "down_read(&keyring_key->sem",
      "up_read(&keyring_key->sem",
      "int fscrypt_get_encryption_info(struct inode *inode",
      "if (inode->i_crypt_info",
      "return 0",
      "if (cmpxchg(&inode->i_crypt_info, NULL, crypt_info) == NULL",
      "crypt_info = NULL",
      "EXPORT_SYMBOL(fscrypt_get_encryption_info"
    ],
    "removed_lines": [
      "down_read(&keyring_key->sem",
      "up_read(&keyring_key->sem",
      "up_read(&keyring_key->sem",
      "up_read(&keyring_key->sem",
      "if (res",
      "goto out",
      "crypt_info->ci_keyring_key = keyring_key",
      "return 0",
      "key_put(ci->ci_keyring_key",
      "int fscrypt_get_crypt_info(struct inode *inode",
      "retry:",
      "crypt_info = ACCESS_ONCE(inode->i_crypt_info",
      "if (crypt_info)",
      "if (!crypt_info->ci_keyring_key ||",
      "key_validate(crypt_info->ci_keyring_key) == 0",
      "return 0",
      "fscrypt_put_encryption_info(inode, crypt_info",
      "goto retry",
      "crypt_info->ci_keyring_key = NULL",
      "kzfree(raw_key",
      "raw_key = NULL",
      "if (cmpxchg(&inode->i_crypt_info, NULL, crypt_info) != NULL)",
      "put_crypt_info(crypt_info",
      "goto retry",
      "return 0",
      "int fscrypt_get_encryption_info(struct inode *inode",
      "struct fscrypt_info *ci = inode->i_crypt_info",
      "if (!ci ||",
      "(ci->ci_keyring_key &&",
      "(ci->ci_keyring_key->flags & ((1 << KEY_FLAG_INVALIDATED) |",
      "(1 << KEY_FLAG_REVOKED) |",
      "(1 << KEY_FLAG_DEAD",
      "return fscrypt_get_crypt_info(inode",
      "return 0",
      "EXPORT_SYMBOL(fscrypt_get_encryption_info"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "null pointer dereference"
    ]
  },
  {
    "index": 1321,
    "id": "CVE-2017-7277",
    "commit_id": "8605330aac5a5785630aec8f64378a54891937cc",
    "added_lines": [
      "static bool skb_is_err_queue(const struct sk_buff *skb",
      "return skb->pkt_type == PACKET_OUTGOING",
      "if (skb_is_err_queue(skb) && skb->len &&",
      "(sk->sk_tsflags & SOF_TIMESTAMPING_OPT_STATS"
    ],
    "removed_lines": [
      "if (skb->len && (sk->sk_tsflags & SOF_TIMESTAMPING_OPT_STATS"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 6.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1322,
    "id": "CVE-2017-7274",
    "commit_id": "7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf",
    "added_lines": [
      "if (!object || object->list.length != 2 || !object->list.objects ||",
      "!object->list.objects[0] || !object->list.objects[1] ||",
      "object->list.objects[1]->list.length != 1)"
    ],
    "removed_lines": [
      "if (!object || object->list.length != 2 || !object->list.objects[0] || object->list.objects[1]->list.length != 1)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1323,
    "id": "CVE-2017-7273",
    "commit_id": "1ebb71143758f45dc0fa76e2f48429e13b16d110",
    "added_lines": [
      "if (*rsize < 4",
      "return rdesc"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "integer underflow",
      "integer underflow"
    ]
  },
  {
    "index": 1325,
    "id": "CVE-2017-7191",
    "commit_id": "77b2631c78461965bc9a7414aae206b5c514e1b3",
    "added_lines": [
      "static void sig_server_disconnected(IRC_SERVER_REC *server",
      "NETJOIN_SERVER_REC *netjoin_server",
      "g_return_if_fail(server != NULL",
      "if (!IS_IRC_SERVER(server",
      "return",
      "if ((netjoin_server = netjoin_find_server(server)))",
      "netjoin_server_remove(netjoin_server",
      "signal_add(\"server disconnected\", (SIGNAL_FUNC) sig_server_disconnected",
      "signal_remove(\"server disconnected\", (SIGNAL_FUNC) sig_server_disconnected"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free",
      "unspecified vectors"
    ]
  },
  {
    "index": 1326,
    "id": "CVE-2017-7185",
    "commit_id": "042eb437973a202d00589b13d628181c6de5cf5b",
    "added_lines": [
      "if (pd->mp_stream.boundary == NULL)",
      "pd->mp_stream.state = MPS_FINALIZE",
      "DBG((\"Invalid request: boundary not initilaized\"",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1327,
    "id": "CVE-2017-7184",
    "commit_id": "f843ee6dd019bcece3e74e76ad9df0155655d0df",
    "added_lines": [
      "if (nla_len(rp) < ulen ||",
      "xfrm_replay_state_esn_len(replay_esn) != ulen ||",
      "replay_esn->bmp_len != up->bmp_len"
    ],
    "removed_lines": [
      "if (nla_len(rp) < ulen || xfrm_replay_state_esn_len(replay_esn) != ulen"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds access",
      "out-of-bounds",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 1334,
    "id": "CVE-2017-6874",
    "commit_id": "040757f738e13caaa9c5078bca79aa97e11dde88",
    "added_lines": [
      "new->count = 0",
      "if (ucounts->count == INT_MAX",
      "else",
      "ucounts->count += 1",
      "spin_lock_irqsave(&ucounts_lock, flags",
      "ucounts->count -= 1",
      "if (!ucounts->count",
      "else",
      "ucounts = NULL",
      "spin_unlock_irqrestore(&ucounts_lock, flags",
      "kfree(ucounts"
    ],
    "removed_lines": [
      "atomic_set(&new->count, 0",
      "if (!atomic_add_unless(&ucounts->count, 1, INT_MAX",
      "if (atomic_dec_and_test(&ucounts->count))",
      "spin_lock_irqsave(&ucounts_lock, flags",
      "spin_unlock_irqrestore(&ucounts_lock, flags",
      "kfree(ucounts"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1335,
    "id": "CVE-2017-6850",
    "commit_id": "e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d",
    "added_lines": [
      "jp2_box_t *jp2_box_create0",
      "box->type = 0",
      "box->len = 0",
      "box->ops = &jp2_boxinfo_unk.ops",
      "return box",
      "jp2_box_t *jp2_box_create(int type",
      "jp2_box_t *box",
      "jp2_boxinfo_t *boxinfo",
      "if (!(box = jp2_box_create0()))",
      "return 0",
      "if (!(box = jp2_box_create0()))",
      "\"preliminary processing of JP2 box: \"",
      "\"type=%c%s%c (0x%08x); length=%\"PRIuFAST32\"\\n\",",
      "JAS_DBGLOG(10, (\"big length\\n\"",
      "bpcc->bpcs = 0",
      "cdef->ents = 0",
      "if (jas_stream_copy(out, tmpstream, box->len -",
      "JP2_BOX_HDRLEN(false)))",
      "jas_eprintf(\"cannot copy box data\\n\"",
      "cmap->ents = 0",
      "pclr->bpc = 0",
      "box = 0",
      "out = 0"
    ],
    "removed_lines": [
      "jp2_box_t *jp2_box_create(int type",
      "jp2_boxinfo_t *boxinfo",
      "if (!(box = jas_malloc(sizeof(jp2_box_t))))",
      "box->ops = &jp2_boxinfo_unk.ops",
      "\"preliminary processing of JP2 box: type=%c%s%c (0x%08x); length=%d\\n\",",
      "if (jas_stream_copy(out, tmpstream, box->len - JP2_BOX_HDRLEN(false)))",
      "box = 0",
      "out = 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1338,
    "id": "CVE-2017-6837",
    "commit_id": "c48e4c6503f7dabd41f11d4c9c7b7f8960e7f2c0",
    "added_lines": [
      "if (numCoefficients < 7 || numCoefficients > 255",
      "_af_error(AF_BAD_HEADER,",
      "\"Bad number of coefficients\"",
      "return AF_FAIL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1340,
    "id": "CVE-2017-6829",
    "commit_id": "25eb00ce913452c2e614548d7df93070bf0d066f",
    "added_lines": [
      "m_adpcmState[c].index = clamp(encoded[2], 0, 88",
      "state.index = clamp(encoded[1] & 0x7f, 0, 88"
    ],
    "removed_lines": [
      "m_adpcmState[c].index = encoded[2]",
      "state.index = encoded[1] & 0x7f"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1353,
    "id": "CVE-2017-6430",
    "commit_id": "626dc56686f15f2dda13c48f78c2a666cb6d8506",
    "added_lines": [
      "if (ninst == 0",
      "return -E_INVALID"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1355,
    "id": "CVE-2017-6420",
    "commit_id": "dfc00cd3301a42b571454b51a6102eecf58407bc",
    "added_lines": [
      "if (!CLI_ISCONTAINED(wwsect, sects[scount].rsz, wwsect+0x295, 4) ||",
      "!CLI_ISCONTAINED(wwsect, sects[scount].rsz, wwsect+0x295+sects[scount].rva, 4) ||",
      "!CLI_ISCONTAINED(wwsect, sects[scount].rsz, wwsect+0x295+sects[scount].rva+0x299, 4))",
      "cli_dbgmsg(\"WWPack: unpack memory address out of bounds.\\n\"",
      "return CL_EFORMAT"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1357,
    "id": "CVE-2017-6418",
    "commit_id": "586a5180287262070637c8943f2f7efd652e4a2c",
    "added_lines": [
      "if (strlen(p) > 8)",
      "cli_dbgmsg(\"Possible data corruption fixed\\n\"",
      "p[8] = '='",
      "} else",
      "cli_dbgmsg(\"Possible data corruption not fixed\\n\"",
      "if((strlen(ptr) > 2) && (*++ptr == '\"') && (strchr(&ptr[1], '\"') != NULL))"
    ],
    "removed_lines": [
      "cli_dbgmsg(\"Possible data corruption fixed\\n\"",
      "p[8] = '='",
      "if((*++ptr == '\"') && (strchr(&ptr[1], '\"') != NULL))"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1358,
    "id": "CVE-2017-6415",
    "commit_id": "252afb1cff9676f3ae1f341a28448bf2c8b6e308",
    "added_lines": [
      "if (p4 <= 0)",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1360,
    "id": "CVE-2017-6387",
    "commit_id": "ead645853a63bf83d8386702cad0cf23b31d7eeb",
    "added_lines": [
      "#export LDFLAGS=\"-lasan\"",
      "#export CFLAGS=\"${CFLAGS} -lasan\""
    ],
    "removed_lines": [
      "export LDFLAGS=\"-lasan\"",
      "export CFLAGS=\"${CFLAGS} -lasan\""
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1361,
    "id": "CVE-2017-6353",
    "commit_id": "dfcb9f4f99f1e9a49e43398a7bfbf56927544af1",
    "added_lines": [
      "if (waitqueue_active(&asoc->wait",
      "return -EBUSY"
    ],
    "removed_lines": [
      "if (sk != asoc->base.sk",
      "goto do_error"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1362,
    "id": "CVE-2017-6348",
    "commit_id": "4c03b862b12f980456f9de92db6d508a4999b788",
    "added_lines": [
      "if (hashbin->hb_type & HB_LOCK",
      "spin_lock_irqsave(&hashbin->hb_spinlock, flags",
      "while (1)",
      "queue = dequeue_first((irda_queue_t**) &hashbin->hb_queue[i]",
      "if (!queue",
      "break",
      "if (free_func)",
      "if (hashbin->hb_type & HB_LOCK",
      "spin_unlock_irqrestore(&hashbin->hb_spinlock, flags",
      "free_func(queue",
      "if (hashbin->hb_type & HB_LOCK",
      "spin_lock_irqsave(&hashbin->hb_spinlock, flags",
      "if (hashbin->hb_type & HB_LOCK"
    ],
    "removed_lines": [
      "#ifdef CONFIG_LOCKDEP",
      "static int hashbin_lock_depth = 0",
      "#endif",
      "if ( hashbin->hb_type & HB_LOCK )",
      "spin_lock_irqsave_nested(&hashbin->hb_spinlock, flags,",
      "hashbin_lock_depth++",
      "queue = dequeue_first((irda_queue_t**) &hashbin->hb_queue[i]",
      "while (queue )",
      "if (free_func",
      "(*free_func)(queue",
      "queue = dequeue_first",
      "(irda_queue_t**) &hashbin->hb_queue[i]",
      "if ( hashbin->hb_type & HB_LOCK)",
      "#ifdef CONFIG_LOCKDEP",
      "hashbin_lock_depth--",
      "#endif"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "improperly manages lock dropping"
    ]
  },
  {
    "index": 1363,
    "id": "CVE-2017-6347",
    "commit_id": "ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32",
    "added_lines": [
      "if (offset != 0)",
      "int tend_off = skb_transport_offset(skb) + tlen",
      "csum = csum_sub(csum, skb_checksum(skb, tend_off, offset, 0"
    ],
    "removed_lines": [
      "if (offset != 0",
      "csum = csum_sub(csum,",
      "csum_partial(skb_transport_header(skb) + tlen,",
      "offset, 0"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1364,
    "id": "CVE-2017-6346",
    "commit_id": "d199fab63c11998a602205f7ee7ff7c05c97164b",
    "added_lines": [
      "struct packet_rollover *rollover = NULL",
      "mutex_lock(&fanout_mutex",
      "err = -EINVAL",
      "goto out",
      "err = -EALREADY",
      "goto out",
      "err = -ENOMEM",
      "rollover = kzalloc(sizeof(*rollover), GFP_KERNEL",
      "if (!rollover",
      "goto out",
      "atomic_long_set(&rollover->num, 0",
      "atomic_long_set(&rollover->num_huge, 0",
      "atomic_long_set(&rollover->num_failed, 0",
      "po->rollover = rollover",
      "if (err && rollover)",
      "kfree(rollover",
      "mutex_unlock(&fanout_mutex",
      "f = po->fanout",
      "if (f)",
      "po->fanout = NULL",
      "if (atomic_dec_and_test(&f->sk_ref))",
      "list_del(&f->list",
      "dev_remove_pack(&f->prot_hook",
      "fanout_release_data(f",
      "kfree(f",
      "if (po->rollover",
      "kfree_rcu(po->rollover, rcu"
    ],
    "removed_lines": [
      "return -EINVAL",
      "return -EALREADY",
      "po->rollover = kzalloc(sizeof(*po->rollover), GFP_KERNEL",
      "if (!po->rollover",
      "return -ENOMEM",
      "atomic_long_set(&po->rollover->num, 0",
      "atomic_long_set(&po->rollover->num_huge, 0",
      "atomic_long_set(&po->rollover->num_failed, 0",
      "mutex_lock(&fanout_mutex",
      "mutex_unlock(&fanout_mutex",
      "if (err)",
      "kfree(po->rollover",
      "f = po->fanout",
      "if (!f",
      "return",
      "po->fanout = NULL",
      "if (atomic_dec_and_test(&f->sk_ref))",
      "list_del(&f->list",
      "dev_remove_pack(&f->prot_hook",
      "fanout_release_data(f",
      "kfree(f",
      "if (po->rollover",
      "kfree_rcu(po->rollover, rcu"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1365,
    "id": "CVE-2017-6345",
    "commit_id": "8b74d439e1697110c5e5c600643e823eb1dd0762",
    "added_lines": [
      "skb_orphan(skb",
      "sock_hold(sk",
      "skb->destructor = sock_efree"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not ensure that a certain destructor exists in required circumstances"
    ]
  },
  {
    "index": 1370,
    "id": "CVE-2017-6214",
    "commit_id": "ccf7abb93af09ad0868ae9033d1ca8108bdaec82",
    "added_lines": [
      "if (!skb_queue_empty(&sk->sk_receive_queue",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "soft lockup",
      "infinite loop"
    ]
  },
  {
    "index": 1371,
    "id": "CVE-2017-6197",
    "commit_id": "1ea23bd6040441a21fbcfba69dce9a01af03f989",
    "added_lines": [
      "if (!src)",
      "return UT8_MAX",
      "if (!src)",
      "return UT8_MAX",
      "if (!src)",
      "return UT16_MAX",
      "if (!src)",
      "return UT16_MAX",
      "if (!src)",
      "return UT32_MAX",
      "if (!src)",
      "return UT32_MAX"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1373,
    "id": "CVE-2017-6074",
    "commit_id": "5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4",
    "added_lines": [
      "consume_skb(skb",
      "return 0"
    ],
    "removed_lines": [
      "goto discard"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1376,
    "id": "CVE-2017-5986",
    "commit_id": "2dcab598484185dea7ec22219c76dcdd59e3cb90",
    "added_lines": [
      "if (sk != asoc->base.sk",
      "goto do_error"
    ],
    "removed_lines": [
      "BUG_ON(sk != asoc->base.sk"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure",
      "race condition"
    ]
  },
  {
    "index": 1378,
    "id": "CVE-2017-5970",
    "commit_id": "34b2cef20f19c87999fff3da4071e66937db9644",
    "added_lines": [
      "if (unlikely(IPCB(skb)->opt.optlen",
      "skb_dst_force(skb",
      "else",
      "skb_dst_drop(skb"
    ],
    "removed_lines": [
      "skb_dst_drop(skb"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1380,
    "id": "CVE-2017-5924",
    "commit_id": "7f02eca670f29c00a1d2c305e96febae6ce5d37b",
    "added_lines": [
      "if (compiler->loop_depth > 0",
      "compiler->loop_depth--",
      "compiler->loop_identifier[compiler->loop_depth] = NULL"
    ],
    "removed_lines": [
      "compiler->loop_depth--",
      "compiler->loop_identifier[compiler->loop_depth] = NULL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1381,
    "id": "CVE-2017-5923",
    "commit_id": "ab906da53ff2a68c6fd6d1fa73f2b7c7bf0bc636",
    "added_lines": [
      "default:",
      "assert(FALSE",
      "default:",
      "assert(FALSE",
      "YYERROR"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1382,
    "id": "CVE-2017-5850",
    "commit_id": "142cfc82b932bc211218fbd7bdda8c7ce83f19df",
    "added_lines": [
      "void",
      "server_read_httprange(struct bufferevent *bev, void *arg",
      "struct client\t\t*clt = arg",
      "struct evbuffer\t\t*src = EVBUFFER_INPUT(bev",
      "size_t\t\t\t size",
      "struct media_type\t*media",
      "struct range_data\t*r = &clt->clt_ranges",
      "struct range\t\t*range",
      "getmonotime(&clt->clt_tv_last",
      "if (r->range_toread > 0)",
      "size = EVBUFFER_LENGTH(src",
      "if (!size",
      "return",
      "if ((off_t)size > r->range_toread)",
      "size = r->range_toread",
      "if (server_bufferevent_write_chunk(clt, src, size",
      "== -1",
      "goto fail",
      "r->range_toread = 0",
      "} else",
      "if (server_bufferevent_write_buffer(clt, src) == -1",
      "goto fail",
      "r->range_toread -= size",
      "if (r->range_toread < 1",
      "r->range_toread = TOREAD_HTTP_RANGE",
      "DPRINTF(\"%s: done, size %lu, to read %lld\", __func__,",
      "size, r->range_toread",
      "switch (r->range_toread)",
      "case TOREAD_HTTP_RANGE:",
      "if (r->range_index >= r->range_count)",
      "if (r->range_count > 1)",
      "if (server_bufferevent_printf(clt,",
      "\"\\r\\n--%llu--\\r\\n\",",
      "clt->clt_boundary) == -1",
      "goto fail",
      "r->range_toread = TOREAD_HTTP_NONE",
      "break",
      "range = &r->range[r->range_index]",
      "if (r->range_count > 1)",
      "media = r->range_media",
      "if (server_bufferevent_printf(clt,",
      "\"\\r\\n--%llu\\r\\n\"",
      "\"Content-Type: %s/%s\\r\\n\"",
      "\"Content-Range: bytes %lld-%lld/%zu\\r\\n\\r\\n\",",
      "clt->clt_boundary,",
      "media->media_type, media->media_subtype,",
      "range->start, range->end, r->range_total) == -1",
      "goto fail",
      "r->range_toread = range->end - range->start + 1",
      "if (lseek(clt->clt_fd, range->start, SEEK_SET) == -1",
      "goto fail",
      "evbuffer_drain(src, EVBUFFER_LENGTH(src",
      "r->range_index++",
      "break",
      "case TOREAD_HTTP_NONE:",
      "case 0:",
      "break",
      "if (clt->clt_done",
      "goto done",
      "if (EVBUFFER_LENGTH(EVBUFFER_OUTPUT(clt->clt_bev)) > (size_t",
      "SERVER_MAX_PREFETCH * clt->clt_sndbufsiz)",
      "bufferevent_disable(clt->clt_srvbev, EV_READ",
      "clt->clt_srvbev_throttled = 1",
      "return",
      "done:",
      "(*bev->errorcb)(bev, EVBUFFER_READ, bev->cbarg",
      "return",
      "fail:",
      "server_close(clt, strerror(errno"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1383,
    "id": "CVE-2017-5847",
    "commit_id": "d21017b52a585f145e8d62781bcc1c5fefc7ee37",
    "added_lines": [
      "guint uint_val",
      "if (value_len < 4",
      "break",
      "uint_val = GST_READ_UINT32_LE (value",
      "gboolean bool_val",
      "if (value_len < 4",
      "break",
      "bool_val = GST_READ_UINT32_LE (value"
    ],
    "removed_lines": [
      "guint uint_val = GST_READ_UINT32_LE (value",
      "gboolean bool_val = GST_READ_UINT32_LE (value"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 1385,
    "id": "CVE-2017-5668",
    "commit_id": "30d598ce7cd3f136ee9d7097f39fa9818a272441",
    "added_lines": [
      "if (!px->ft)",
      "return FALSE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1397,
    "id": "CVE-2017-5546",
    "commit_id": "c4e490cf148e85ead0d1b1c2caaba833f1d5b29f",
    "added_lines": [
      "state->pos = rand % count",
      "if (state->pos >= state->count",
      "state->pos = 0",
      "return state->list[state->pos++]"
    ],
    "removed_lines": [
      "unsigned int rand",
      "state->pos = 0",
      "state->rand = rand",
      "return (state->list[state->pos++] + state->rand) % state->count"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "the selection of a large value for a random number"
    ]
  },
  {
    "index": 1398,
    "id": "CVE-2017-5545",
    "commit_id": "7391a506352c009fe044dead7baad9e22dd279ee",
    "added_lines": [
      "if (filestats.st_size < 8)",
      "printf(\"ERROR: Input file is too small to contain valid plist data.\\n\"",
      "return -1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS +Info",
    "score": 6.4,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Info ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1404,
    "id": "CVE-2017-5507",
    "commit_id": "4493d9ca1124564da17f9b628ef9d0f1a6be9738",
    "added_lines": [
      "#include \"magick/resource_.h\"",
      "image->colormap=(PixelPacket *) AcquireQuantumMemory(image->colors+1,",
      "sizeof(*image->colormap",
      "if (image->colormap == (PixelPacket *) NULL",
      "if ((AcquireMagickResource(WidthResource,image->columns) == MagickFalse) ||",
      "(AcquireMagickResource(HeightResource,image->rows) == MagickFalse",
      "ThrowReaderException(ImageError,\"WidthOrHeightExceedsLimit\""
    ],
    "removed_lines": [
      "if (AcquireImageColormap(image,image->colors) == MagickFalse",
      "status=SetImageExtent(image,image->columns,image->rows",
      "if (status == MagickFalse",
      "InheritException(exception,&image->exception",
      "return(DestroyImageList(image"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1409,
    "id": "CVE-2017-5209",
    "commit_id": "3a55ddd3c4c11ce75a86afbefd085d8d397ff957",
    "added_lines": [
      "52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -2, -1, -1,",
      "int wv, w1, w2, w3, w4",
      "int tmpval[4]",
      "int tmpcnt = 0",
      "while (ptr < buf+len && (*ptr == ' ' || *ptr == '\\t' || *ptr == '\\n' || *ptr == '\\r'))",
      "ptr++",
      "if ((wv = base64_table[(int)(unsigned char)*ptr++]) == -1)",
      "continue",
      "tmpval[tmpcnt++] = wv",
      "if (tmpcnt == 4)",
      "tmpcnt = 0",
      "w1 = tmpval[0]",
      "w2 = tmpval[1]",
      "w3 = tmpval[2]",
      "w4 = tmpval[3]",
      "if (w2 >= 0)",
      "outbuf[p++] = (unsigned char)(((w1 << 2) + (w2 >> 4)) & 0xFF",
      "if (w3 >= 0)",
      "outbuf[p++] = (unsigned char)(((w2 << 4) + (w3 >> 2)) & 0xFF",
      "if (w4 >= 0)",
      "outbuf[p++] = (unsigned char)(((w3 << 6) + w4) & 0xFF"
    ],
    "removed_lines": [
      "52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,",
      "static int base64decode_block(unsigned char *target, const char *data, size_t data_size",
      "int w1,w2,w3,w4",
      "int i",
      "size_t n",
      "if (!data || (data_size <= 0))",
      "return 0",
      "n = 0",
      "i = 0",
      "while (n < data_size-3)",
      "w1 = base64_table[(int)data[n]]",
      "w2 = base64_table[(int)data[n+1]]",
      "w3 = base64_table[(int)data[n+2]]",
      "w4 = base64_table[(int)data[n+3]]",
      "if (w2 >= 0)",
      "target[i++] = (char)((w1*4 + (w2 >> 4)) & 255",
      "if (w3 >= 0)",
      "target[i++] = (char)((w2*16 + (w3 >> 2)) & 255",
      "if (w4 >= 0)",
      "target[i++] = (char)((w3*64 + w4) & 255",
      "n+=4",
      "return i",
      "size_t l = 0",
      "ptr += strspn(ptr, \"\\r\\n\\t \"",
      "l = strcspn(ptr, \"\\r\\n\\t \"",
      "if (l > 3 && ptr+l <= buf+len)",
      "p+=base64decode_block(outbuf+p, ptr, l",
      "ptr += l",
      "} else",
      "break"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS +Info",
    "score": 6.4,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1419,
    "id": "CVE-2017-3730",
    "commit_id": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "added_lines": [
      "if (ckey == NULL)",
      "SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR",
      "return 0",
      "if (ckey == NULL)",
      "SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR",
      "goto err"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "dereference a NULL pointer"
    ]
  },
  {
    "index": 1421,
    "id": "CVE-2017-2671",
    "commit_id": "43a6684519ab0a6c52024b5e25322476cabad893",
    "added_lines": [
      "write_lock_bh(&ping_table.lock",
      "write_unlock_bh(&ping_table.lock"
    ],
    "removed_lines": [
      "write_lock_bh(&ping_table.lock",
      "write_unlock_bh(&ping_table.lock"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "is too late in obtaining a certain lock and consequently cannot ensure that disconnect function calls are safe"
    ]
  },
  {
    "index": 1422,
    "id": "CVE-2017-2647",
    "commit_id": "c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
    "added_lines": [],
    "removed_lines": [
      ".match\t\t\t= user_match,",
      ".match\t\t\t= user_match,",
      "int user_match(const struct key *key, const struct key_match_data *match_data",
      "return strcmp(key->description, match_data->raw_data) == 0",
      "EXPORT_SYMBOL_GPL(user_match"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1423,
    "id": "CVE-2017-2584",
    "commit_id": "129a72a0d3c8e139a04512325384fe5ac119e74d",
    "added_lines": [
      "static int segmented_write_std(struct x86_emulate_ctxt *ctxt,",
      "struct segmented_address addr,",
      "void *data,",
      "unsigned int size",
      "int rc",
      "ulong linear",
      "rc = linearize(ctxt, addr, size, true, &linear",
      "if (rc != X86EMUL_CONTINUE",
      "return rc",
      "return ctxt->ops->write_std(ctxt, linear, data, size, &ctxt->exception",
      "return segmented_write_std(ctxt, ctxt->dst.addr.mem,",
      "&desc_ptr, 2 + ctxt->op_bytes",
      "return segmented_write_std(ctxt, ctxt->memop.addr.mem, &fx_state, size",
      "rc = segmented_read_std(ctxt, ctxt->memop.addr.mem, &fx_state, 512"
    ],
    "removed_lines": [
      "return segmented_write(ctxt, ctxt->dst.addr.mem,",
      "&desc_ptr, 2 + ctxt->op_bytes",
      "return segmented_write(ctxt, ctxt->memop.addr.mem, &fx_state, size",
      "rc = segmented_read(ctxt, ctxt->memop.addr.mem, &fx_state, 512"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 3.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1424,
    "id": "CVE-2017-2583",
    "commit_id": "33ab91103b3415e12457e3104f0e4517ce12d0f3",
    "added_lines": [
      "if (null_selector)",
      "if (seg == VCPU_SREG_CS || seg == VCPU_SREG_TR",
      "goto exception",
      "if (seg == VCPU_SREG_SS)",
      "if (ctxt->mode != X86EMUL_MODE_PROT64 || rpl != cpl",
      "goto exception",
      "seg_desc.type = 3",
      "seg_desc.p = 1",
      "seg_desc.s = 1",
      "seg_desc.dpl = cpl",
      "seg_desc.d = 1",
      "seg_desc.g = 1",
      "if (seg == VCPU_SREG_SS && selector == 3 &&",
      "ctxt->mode == X86EMUL_MODE_PROT64",
      "return emulate_exception(ctxt, GP_VECTOR, 0, true"
    ],
    "removed_lines": [
      "if ((seg == VCPU_SREG_CS",
      "|| (seg == VCPU_SREG_SS",
      "&& (ctxt->mode != X86EMUL_MODE_PROT64 || rpl != cpl",
      "|| seg == VCPU_SREG_TR",
      "&& null_selector",
      "goto exception",
      "if (null_selector)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 4.6,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "improperly emulates a *MOV SS, NULL selector* instruction"
    ]
  },
  {
    "index": 1428,
    "id": "CVE-2017-0376",
    "commit_id": "56a7c5bc15e0447203a491c1ee37de9939ad1dcd",
    "added_lines": [
      "if (rh.command == RELAY_COMMAND_BEGIN_DIR &&",
      "circ->purpose != CIRCUIT_PURPOSE_S_REND_JOINED)"
    ],
    "removed_lines": [
      "if (rh.command == RELAY_COMMAND_BEGIN_DIR)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1429,
    "id": "CVE-2017-0375",
    "commit_id": "79b59a2dfcb68897ee89d98587d09e55f07e68d7",
    "added_lines": [
      "origin_circuit_t *origin_circ = NULL",
      "crypt_path_t *layer_hint = NULL",
      "if (!CIRCUIT_IS_ORIGIN(circ))",
      "} else",
      "tor_assert(circ->purpose == CIRCUIT_PURPOSE_S_REND_JOINED",
      "origin_circ = TO_ORIGIN_CIRCUIT(circ",
      "layer_hint = origin_circ->cpath->prev",
      "relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, layer_hint",
      "END_STREAM_REASON_NOTDIRECTORY, layer_hint",
      "END_STREAM_REASON_INTERNAL, layer_hint",
      "END_STREAM_REASON_EXITPOLICY, layer_hint",
      "tor_assert(origin_circ",
      "layer_hint"
    ],
    "removed_lines": [
      "if (!CIRCUIT_IS_ORIGIN(circ",
      "relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, NULL",
      "END_STREAM_REASON_NOTDIRECTORY, NULL",
      "END_STREAM_REASON_INTERNAL, NULL",
      "END_STREAM_REASON_EXITPOLICY, NULL",
      "origin_circuit_t *origin_circ = TO_ORIGIN_CIRCUIT(circ",
      "origin_circ->cpath->prev"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1432,
    "id": "CVE-2016-10506",
    "commit_id": "d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b",
    "added_lines": [
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue",
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue",
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Division-by-zero vulnerabilities",
      "division-by-zero"
    ]
  },
  {
    "index": 1437,
    "id": "CVE-2016-10318",
    "commit_id": "163ae1c6ad6299b19e22b4a35d5ab24a89791a98",
    "added_lines": [
      "if (!inode_owner_or_capable(inode",
      "return -EACCES"
    ],
    "removed_lines": [],
    "cause": [
      "Cryptographic Weakness"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "allows a user to assign an encryption policy to a directory owned by a different user"
    ]
  },
  {
    "index": 1439,
    "id": "CVE-2016-10270",
    "commit_id": "9a72a69e035ee70ff5c41541c8c61cd97990d018",
    "added_lines": [],
    "removed_lines": [
      "since ChopUpSingleUncompressedStrip might have altered and resized the",
      "since the td_stripbytecount and td_stripoffset arrays to the new value",
      "after the initial affectation of td_nstrips = TIFFNumberOfStrips() in",
      "tif_dirread.c ~line 3612.",
      "See http://bugzilla.maptools.org/show_bug.cgi?id=2587 */",
      "if( td->td_nstrips",
      "return td->td_nstrips"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1440,
    "id": "CVE-2016-10269",
    "commit_id": "1044b43637fa7f70fb19b93593777b78bd20da86",
    "added_lines": [
      "PixarLogState* sp = (PixarLogState*) tif->tif_data",
      "assert(sp != 0",
      "if (sp->state&PLSTATE_INIT)",
      "td->td_bitspersample = 8",
      "td->td_sampleformat = SAMPLEFORMAT_UINT"
    ],
    "removed_lines": [
      "td->td_bitspersample = 8",
      "td->td_sampleformat = SAMPLEFORMAT_UINT"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1441,
    "id": "CVE-2016-10268",
    "commit_id": "5397a417e61258c69209904e652a1f409ec3b9df",
    "added_lines": [
      "for (s = 0; s < ns && row < imagelength; s++)"
    ],
    "removed_lines": [
      "for (s = 0; s < ns; s++)"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "integer underflow",
      "integer underflow"
    ]
  },
  {
    "index": 1442,
    "id": "CVE-2016-10267",
    "commit_id": "43bc256d8ae44b92d2734a3c5bc73957a4d7c1ec",
    "added_lines": [
      "int decoder_ok",
      "sp->decoder_ok = 1",
      "static const char module[]=\"OJPEGDecode\"",
      "if( !sp->decoder_ok",
      "TIFFErrorExt(tif->tif_clientdata,module,\"Cannot decode: decoder not correctly initialized\"",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1443,
    "id": "CVE-2016-10266",
    "commit_id": "438274f938e046d33cb0e1230b41da32ffe223e1",
    "added_lines": [
      "#define TIFFhowmany_32_maxuint_compat(x, y) \\",
      "(((uint32)(x) / (uint32)(y)) + ((((uint32)(x) % (uint32)(y)) != 0) ? 1 : 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1445,
    "id": "CVE-2016-10250",
    "commit_id": "bdfe95a6e81ffb4b2fad31a76b57943695beed20",
    "added_lines": [
      "box->ops = &boxinfo->ops",
      "fprintf(out, \"type=%c%s%c (0x%08\"PRIxFAST32\"); length=%\"PRIuFAST32\"\\n\", '\"',",
      "boxinfo->name, '\"', box->type, box->len"
    ],
    "removed_lines": [
      "box->ops = &boxinfo->ops",
      "box->ops = &jp2_boxinfo_unk.ops",
      "fprintf(out, \"type=%c%s%c (0x%08\"PRIxFAST32\"); length=%\"PRIuFAST32\"\\n\", '\"', boxinfo->name,",
      "'\"', box->type, box->len"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1447,
    "id": "CVE-2016-10248",
    "commit_id": "2e82fa00466ae525339754bb3ab0a0474a31d4bd",
    "added_lines": [
      "return (tsfb->numlvls > 0 && jas_seq2d_size(a)) ?",
      "jpc_tsfb_synthesize2(tsfb,"
    ],
    "removed_lines": [
      "return (tsfb->numlvls > 0) ? jpc_tsfb_synthesize2(tsfb,"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1449,
    "id": "CVE-2016-10211",
    "commit_id": "890c3f850293176c0e996a602ffa88b315f4e98f",
    "added_lines": [
      "| _FOR_ for_expression error",
      "compiler->loop_depth--",
      "compiler->loop_identifier[compiler->loop_depth] = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1450,
    "id": "CVE-2016-10210",
    "commit_id": "3119b232c9c453c98d8fa8b6ae4e37ba18117cd4",
    "added_lines": [
      "assert_regexp_syntax_error(\"\\\\x0\"",
      "assert_regexp_syntax_error(\"\\\\x\"",
      "assert_regexp_syntax_error(\"\\\\xxy\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1451,
    "id": "CVE-2016-10208",
    "commit_id": "3a4b77cd47bb837b8557595ec7425f281f2ca1fe",
    "added_lines": [
      "if (ext4_has_feature_meta_bg(sb))",
      "if (le32_to_cpu(es->s_first_meta_bg) >= db_count)",
      "ext4_msg(sb, KERN_WARNING,",
      "\"first meta block group too large: %u \"",
      "\"(group descriptor block count %u)\",",
      "le32_to_cpu(es->s_first_meta_bg), db_count",
      "goto failed_mount"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1453,
    "id": "CVE-2016-10200",
    "commit_id": "32c231164b762dddefa13af5a0101032c70b50ef",
    "added_lines": [
      "if (!sock_flag(sk, SOCK_ZAPPED",
      "goto out_unlock"
    ],
    "removed_lines": [
      "if (!sock_flag(sk, SOCK_ZAPPED",
      "return -EINVAL"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "bind system call",
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1454,
    "id": "CVE-2016-10197",
    "commit_id": "ec65c42052d95d2c23d1d837136d1cf1d9ecef9e",
    "added_lines": [
      "char need_to_append_dot",
      "if (!base_len) return NULL",
      "need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1"
    ],
    "removed_lines": [
      "const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1460,
    "id": "CVE-2016-10189",
    "commit_id": "701ab8129ba9ea64f569daedca9a8603abad740f",
    "added_lines": [
      "if (bee->ui->ft_in_start && bu)"
    ],
    "removed_lines": [
      "if (bee->ui->ft_in_start)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS ExecCode",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1461,
    "id": "CVE-2016-10172",
    "commit_id": "4bc05fc490b66ef2d45b1de26abf1455b486b0dc",
    "added_lines": [
      "if (low > high)         // make sure high and low make sense",
      "high = low"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1463,
    "id": "CVE-2016-10167",
    "commit_id": "fe9ed49dafa993e3af96b6a5a589efeea9bfb36f",
    "added_lines": [
      "too_few_image_data.gd2 claims to have a size of 12336x48 pixels, but doesn't",
      "provide as much image data. We test that gdImageCreateFromGd2Ctx() returns NULL",
      "in this case.",
      "#include \"gd.h\"",
      "#include \"gdtest.h\"",
      "int main",
      "gdImagePtr im",
      "FILE *fp",
      "fp = gdTestFileOpen2(\"gd2\", \"too_few_image_data.gd2\"",
      "gdTestAssert(fp != NULL",
      "im = gdImageCreateFromGd2(fp",
      "gdTestAssert(im == NULL",
      "fclose(fp",
      "return gdNumFailures"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "crafted image file"
    ]
  },
  {
    "index": 1465,
    "id": "CVE-2016-10165",
    "commit_id": "5ca71a7bc18b6897ab21d815d15e218e204581e2",
    "added_lines": [
      "if ((Offset + Len) > SizeOfTag + 8) goto Error"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 5.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds"
    ]
  },
  {
    "index": 1466,
    "id": "CVE-2016-10162",
    "commit_id": "8d2539fa0faf3f63e1d1e7635347c5b9e777d47b",
    "added_lines": [
      "if (object_init_ex(&obj, pce) != SUCCESS || EG(exception))",
      "zval_ptr_dtor(&ent2->data",
      "ZVAL_UNDEF(&ent2->data",
      "php_error_docref(NULL, E_WARNING, \"Class %s can not be instantiated\", Z_STRVAL(ent1->data",
      "} else",
      "zend_hash_merge(Z_OBJPROP(obj),",
      "Z_ARRVAL(ent2->data),",
      "zval_add_ref, 0",
      "if (incomplete_class)",
      "php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data",
      "zval_ptr_dtor(&ent2->data",
      "ZVAL_COPY_VALUE(&ent2->data, &obj"
    ],
    "removed_lines": [
      "object_init_ex(&obj, pce",
      "zend_hash_merge(Z_OBJPROP(obj),",
      "Z_ARRVAL(ent2->data),",
      "zval_add_ref, 0",
      "if (incomplete_class)",
      "php_store_class_name(&obj, Z_STRVAL(ent1->data), Z_STRLEN(ent1->data",
      "zval_ptr_dtor(&ent2->data",
      "ZVAL_COPY_VALUE(&ent2->data, &obj"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1467,
    "id": "CVE-2016-10161",
    "commit_id": "16b3003ffc6393e250f069aa28a78dc5a2c064b2",
    "added_lines": [
      "if( *p >= max - 2)",
      "zend_error(E_WARNING, \"Bad unserialize data\"",
      "return -1",
      "return -1",
      "long elements",
      "elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR",
      "if (elements < 0)",
      "return 0",
      "return object_common2(UNSERIALIZE_PASSTHRU, elements",
      "if (elements < 0)",
      "efree(class_name",
      "return 0"
    ],
    "removed_lines": [
      "return 0",
      "return object_common2(UNSERIALIZE_PASSTHRU,",
      "object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1470,
    "id": "CVE-2016-10158",
    "commit_id": "1cda0d7c2ffb62d8331c64e703131d9cabdc03ea",
    "added_lines": [
      "--TEST--",
      "Bug #73737 (Crash when parsing a tag format",
      "--SKIPIF--",
      "<?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>",
      "--FILE--",
      "<?php",
      "$exif = exif_thumbnail(__DIR__ . '/bug73737.tiff'",
      "var_dump($exif",
      "?>",
      "--EXPECTF--",
      "Warning: exif_thumbnail(bug73737.tiff): Error in TIFF: filesize(x0030) less than start of IFD dir(x10102) in %s line %d",
      "bool(false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1473,
    "id": "CVE-2016-10153",
    "commit_id": "a45f795c65b479b4ba107b6ccde29b896d51ee98",
    "added_lines": [
      "int ceph_crypt(const struct ceph_crypto_key *key, bool encrypt,",
      "void *buf, int buf_len, int in_len, int *pout_len"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "interacts incorrectly with the CONFIG_VMAP_STACK option"
    ]
  },
  {
    "index": 1474,
    "id": "CVE-2016-10150",
    "commit_id": "a0f1d21c1ccb1da66629627a74059dd7f5ac9c61",
    "added_lines": [
      "ops->destroy(dev"
    ],
    "removed_lines": [
      "ops->destroy(dev"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Priv",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "ioctl call",
      "use-after-free"
    ]
  },
  {
    "index": 1475,
    "id": "CVE-2016-10147",
    "commit_id": "48a992727d82cb7db076fa15d372178743b1f4cd",
    "added_lines": [
      "static inline bool mcryptd_check_internal(struct rtattr **tb, u32 *type,",
      "return false",
      "if (*type & *mask & CRYPTO_ALG_INTERNAL",
      "return true",
      "else",
      "return false",
      "if (!mcryptd_check_internal(tb, &type, &mask",
      "return -EINVAL"
    ],
    "removed_lines": [
      "static inline void mcryptd_check_internal(struct rtattr **tb, u32 *type,",
      "return",
      "if ((algt->type & CRYPTO_ALG_INTERNAL",
      "if ((algt->mask & CRYPTO_ALG_INTERNAL",
      "mcryptd_check_internal(tb, &type, &mask"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1476,
    "id": "CVE-2016-10146",
    "commit_id": "aeff00de228bc5a158c2a975ab47845d8a1db456",
    "added_lines": [
      "(void) CloneString(&draw_info->geometry,geometry"
    ],
    "removed_lines": [
      "draw_info->geometry=AcquireString(geometry"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak",
      "unspecified vectors"
    ]
  },
  {
    "index": 1480,
    "id": "CVE-2016-10129",
    "commit_id": "2fdef641fd0dd2828bd948234ae86de75221a11a",
    "added_lines": [],
    "removed_lines": [
      "if (pkt == NULL",
      "continue",
      "if (pkt == NULL",
      "continue"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1485,
    "id": "CVE-2016-10071",
    "commit_id": "f3b483e8b054c50149912523b4773687e18afe25",
    "added_lines": [
      "BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(double));"
    ],
    "removed_lines": [
      "BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(unsigned char));"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1487,
    "id": "CVE-2016-10069",
    "commit_id": "8a370f9ab120faf182aa160900ba692ba8e2bcf0",
    "added_lines": [
      "Frames = ReadBlobXXXLong(image2",
      "if (Frames == 0",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\""
    ],
    "removed_lines": [
      "Frames = ReadBlobXXXLong(image2"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1488,
    "id": "CVE-2016-10068",
    "commit_id": "56d6e20de489113617cbbddaf41e92600a34db22",
    "added_lines": [
      "if (value == (char *) NULL",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1491,
    "id": "CVE-2016-10065",
    "commit_id": "134463b926fa965571aa4febd61b810be5e7da05",
    "added_lines": [
      "static MagickBooleanType CheckMemoryOverflow(const size_t count,",
      "const size_t quantum",
      "size_t",
      "size",
      "size=count*quantum",
      "if ((count == 0) || (quantum != (size/count",
      "errno=ENOMEM",
      "return(MagickTrue",
      "return(MagickFalse",
      "image->alpha_trait=viff_info.number_data_bands == 4 ? BlendPixelTrait :",
      "if (CheckMemoryOverflow((image->columns+7UL) >> 3UL,image->rows) != MagickFalse",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "max_packets=((image->columns+7UL) >> 3UL)*image->rows",
      "if (CheckMemoryOverflow(number_pixels,viff_info.number_data_bands) != MagickFalse",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "max_packets=(size_t) (number_pixels*viff_info.number_data_bands"
    ],
    "removed_lines": [
      "image->alpha_trait=viff_info.number_data_bands == 4 ? BlendPixelTrait :",
      "max_packets=((image->columns+7UL) >> 3UL)*image->rows",
      "max_packets=(size_t) (number_pixels*viff_info.number_data_bands"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1494,
    "id": "CVE-2016-10061",
    "commit_id": "4e914bbe371433f0590cefdf3bd5f3a5710069f9",
    "added_lines": [
      "status=MagickTrue",
      "if (fputc(c,file) != c",
      "status=MagickFalse",
      "if (status == MagickFalse",
      "image=DestroyImage(image"
    ],
    "removed_lines": [
      "(void) fputc(c,file"
    ],
    "cause": [
      "Improper Input Validation",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not check the return value of the fputc function",
      "crafted image file"
    ]
  },
  {
    "index": 1495,
    "id": "CVE-2016-10060",
    "commit_id": "933e96f01a8c889c7bf5ffd30020e86a02a046e7",
    "added_lines": [
      "ExceptionInfo *exception",
      "MagickBooleanType",
      "status",
      "GetExceptionMessage(errno",
      "if (output == (FILE *) NULL",
      "ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",",
      "argv[argc-1]",
      "return(MagickFalse",
      "status=MagickTrue",
      "for (i=2; i < (ssize_t) (argc-1); i++",
      "if (input == (FILE *) NULL",
      "if (fputc((char) c,output) != c",
      "status=MagickFalse",
      "return(status"
    ],
    "removed_lines": [
      "ExceptionInfo *exception",
      "GetExceptionMessage(errno",
      "if (output == (FILE *) NULL)",
      "ThrowFileException(exception,FileOpenError,\"UnableToOpenFile\",argv[argc-1]",
      "return(MagickFalse",
      "for (i=2; i < (ssize_t) (argc-1); i++)",
      "#if 0",
      "fprintf(stderr, \"DEBUG: Concatenate Image: \\\"%s\\\"\\n\", argv[i]",
      "#endif",
      "if (input == (FILE *) NULL)",
      "(void) fputc((char) c,output",
      "return(MagickTrue"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not check the return value of the fputc function"
    ]
  },
  {
    "index": 1497,
    "id": "CVE-2016-10058",
    "commit_id": "4ec444f4eab88cf4bec664fafcf9cab50bc5ff6a",
    "added_lines": [
      "if (layer_info[i].info != (StringInfo *) NULL",
      "layer_info[i].info=DestroyStringInfo(layer_info[i].info"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "memory leak"
    ]
  },
  {
    "index": 1499,
    "id": "CVE-2016-10053",
    "commit_id": "f983dcdf9c178e0cbc49608a78713c5669aa1bb5",
    "added_lines": [
      "rows_per_strip=1",
      "if (TIFFScanlineSize(tiff) != 0",
      "rows_per_strip=TIFFDefaultStripSize(tiff,0"
    ],
    "removed_lines": [
      "rows_per_strip=TIFFDefaultStripSize(tiff,0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1501,
    "id": "CVE-2016-10051",
    "commit_id": "ecc03a2518c2b7dd375fde3a040fdae0bdf6a521",
    "added_lines": [],
    "removed_lines": [
      "(void) CloseBlob(pwp_image",
      "pwp_image=DestroyImage(pwp_image"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1512,
    "id": "CVE-2016-9936",
    "commit_id": "b2af4e8868726a040234de113436c6e4f6372d17",
    "added_lines": [
      "zval *retval",
      "retval = var_tmp_var(&var_hash",
      "if (!php_var_unserialize_ex(retval, &p, p + buf_len, &var_hash, class_hash))",
      "ZVAL_COPY(return_value, retval"
    ],
    "removed_lines": [
      "if (!php_var_unserialize_ex(return_value, &p, p + buf_len, &var_hash, class_hash))",
      "zval_ptr_dtor(return_value",
      "in case nesting calls to unserialize */",
      "var_push_dtor(&var_hash, return_value"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1513,
    "id": "CVE-2016-9935",
    "commit_id": "66fd44209d5ffcb9b3d1bc1b9fd8e35b485040c0",
    "added_lines": [
      "} else",
      "ent.type = ST_BOOLEAN",
      "SET_STACK_VARNAME",
      "ZVAL_FALSE(&ent.data",
      "wddx_stack_push((wddx_stack *)stack, &ent, sizeof(st_entry"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1514,
    "id": "CVE-2016-9934",
    "commit_id": "6045de69c7dedcba3eadf7c4bba424b19c81d00d",
    "added_lines": [
      "zend_class_entry *ce",
      "PHP_CLASS_ATTRIBUTES",
      "PHP_SET_CLASS_ATTRIBUTES(obj",
      "ce = Z_OBJCE_P(obj",
      "if (!ce || ce->serialize || ce->unserialize)",
      "php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be serialized\", class_name",
      "PHP_CLEANUP_CLASS_ATTRIBUTES",
      "return",
      "PHP_CLEANUP_CLASS_ATTRIBUTES",
      "if (pce != &PHP_IC_ENTRY && ((*pce)->serialize || (*pce)->unserialize))",
      "ent2->data = NULL",
      "php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Class %s can not be unserialized\", Z_STRVAL_P(ent1->data",
      "} else",
      "MAKE_STD_ZVAL(obj",
      "object_init_ex(obj, *pce",
      "zend_hash_merge(Z_OBJPROP_P(obj),",
      "Z_ARRVAL_P(ent2->data),",
      "(void (*)(void *)) zval_add_ref,",
      "(void *) &tmp, sizeof(zval *), 0",
      "if (incomplete_class)",
      "php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data",
      "zval_ptr_dtor(&ent2->data",
      "ent2->data = obj"
    ],
    "removed_lines": [
      "PHP_CLASS_ATTRIBUTES",
      "PHP_SET_CLASS_ATTRIBUTES(obj",
      "PHP_CLEANUP_CLASS_ATTRIBUTES",
      "PHP_CLASS_ATTRIBUTES",
      "PHP_SET_CLASS_ATTRIBUTES(obj",
      "PHP_CLEANUP_CLASS_ATTRIBUTES",
      "MAKE_STD_ZVAL(obj",
      "object_init_ex(obj, *pce",
      "zend_hash_merge(Z_OBJPROP_P(obj),",
      "Z_ARRVAL_P(ent2->data),",
      "(void (*)(void *)) zval_add_ref,",
      "(void *) &tmp, sizeof(zval *), 0",
      "if (incomplete_class)",
      "php_store_class_name(obj, Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data",
      "zval_ptr_dtor(&ent2->data",
      "ent2->data = obj"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1522,
    "id": "CVE-2016-9559",
    "commit_id": "b61d35eaccc0a7ddeff8a1c3abfcd0a43ccf210b",
    "added_lines": [
      "ConcatenateColorComponent(&pixel,GrayPixelChannel,compliance,tuple"
    ],
    "removed_lines": [
      "ConcatenateColorComponent(&pixel,GrayPixelChannel,compliance,",
      "tuple"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1527,
    "id": "CVE-2016-9394",
    "commit_id": "f7038068550fba0e41e1d0c355787f1dcd5bf330",
    "added_lines": [
      "siz->comps = 0",
      "goto error",
      "if (!siz->width || !siz->height)",
      "jas_eprintf(\"reference grid cannot have zero area\\n\"",
      "goto error",
      "if (!siz->tilewidth || !siz->tileheight)",
      "jas_eprintf(\"tile cannot have zero area\\n\"",
      "goto error",
      "if (!siz->numcomps || siz->numcomps > 16384)",
      "jas_eprintf(\"number of components not in permissible range\\n\"",
      "goto error",
      "if (siz->xoff >= siz->width)",
      "jas_eprintf(\"XOsiz not in permissible range\\n\"",
      "goto error",
      "if (siz->yoff >= siz->height)",
      "jas_eprintf(\"YOsiz not in permissible range\\n\"",
      "goto error",
      "if (siz->tilexoff > siz->xoff || siz->tilexoff + siz->tilewidth <= siz->xoff)",
      "jas_eprintf(\"XTOsiz not in permissible range\\n\"",
      "goto error",
      "if (siz->tileyoff > siz->yoff || siz->tileyoff + siz->tileheight <= siz->yoff)",
      "jas_eprintf(\"YTOsiz not in permissible range\\n\"",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "error:",
      "if (siz->comps)",
      "jas_free(siz->comps",
      "return -1"
    ],
    "removed_lines": [
      "return -1",
      "if (!siz->width || !siz->height || !siz->tilewidth ||",
      "!siz->tileheight || !siz->numcomps || siz->numcomps > 16384)",
      "return -1",
      "if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height)",
      "jas_eprintf(\"all tiles are outside the image area\\n\"",
      "return -1",
      "return -1",
      "jas_free(siz->comps",
      "return -1",
      "jas_free(siz->comps",
      "return -1",
      "jas_free(siz->comps",
      "return -1",
      "jas_free(siz->comps",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1528,
    "id": "CVE-2016-9391",
    "commit_id": "1e84674d95353c64e5c4c0e7232ae86fd6ea813b",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1529,
    "id": "CVE-2016-9390",
    "commit_id": "ba2b9d000660313af7b692542afbd374c5685865",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "assertion failure"
    ]
  },
  {
    "index": 1530,
    "id": "CVE-2016-9389",
    "commit_id": "dee11ec440d7908d1daf69f40a3324b27cf213ba",
    "added_lines": [
      "if (!jas_image_cmpt_domains_same(dec->image))",
      "jas_eprintf(\"RCT requires all components have the same domain\\n\"",
      "return -1",
      "if (!jas_image_cmpt_domains_same(dec->image))",
      "jas_eprintf(\"RCT requires all components have the same domain\\n\"",
      "return -1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1531,
    "id": "CVE-2016-9388",
    "commit_id": "411a4068f8c464e883358bf403a3e25158863823",
    "added_lines": [
      "assert(numcmpts <= 3",
      "for (i = 0; i < 3; ++i)",
      "data[i] = 0",
      "if (!(data[i] = jas_matrix_create(jas_image_height(image),",
      "jas_image_width(image))))",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "data[i] = 0",
      "error:",
      "for (i = 0; i < numcmpts; ++i)",
      "if (data[i])",
      "jas_matrix_destroy(data[i]",
      "return -1"
    ],
    "removed_lines": [
      "data[i] = jas_matrix_create(jas_image_height(image), jas_image_width(image",
      "assert(data[i]",
      "return -1",
      "return -1",
      "return -1",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "assertion failure"
    ]
  },
  {
    "index": 1533,
    "id": "CVE-2016-9317",
    "commit_id": "1846f48e5fcdde996e7c27a4bbac5d0aef183e4b",
    "added_lines": [
      "#include <string.h>",
      "#include \"gd.h\"",
      "#include \"gd_errors.h\"",
      "#include \"gdtest.h\"",
      "#define MSG \"product of memory allocation multiplication would exceed INT_MAX, failing operation gracefully\\n\"",
      "void error_handler(int priority, const char *format, ...",
      "gdTestAssert(priority == GD_WARNING",
      "gdTestAssert(!strcmp(format, MSG",
      "int main",
      "gdImagePtr im",
      "im = gdImageCreate(64970, 65111",
      "gdTestAssert(im == NULL",
      "return gdNumFailures"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "oversized image"
    ]
  },
  {
    "index": 1537,
    "id": "CVE-2016-8887",
    "commit_id": "e24bdc716c3327b067c551bc6cfb97fd2370358d",
    "added_lines": [
      "jas_eprintf(\"got box type %s\\n\", box->info->name"
    ],
    "removed_lines": [
      "jas_eprintf(\"box type %s\\n\", box->info->name"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1538,
    "id": "CVE-2016-8884",
    "commit_id": "5d66894d2313e3f3469f19066e149e08ff076698",
    "added_lines": [
      "image = 0",
      "info = 0",
      "goto error",
      "goto error",
      "(\"BMP information: len %ld; width %ld; height %ld; numplanes %d; \"",
      "\"depth %d; enctype %ld; siz %ld; hres %ld; vres %ld; numcolors %ld; \"",
      "\"mincolors %ld\\n\", JAS_CAST(long, info->len),",
      "JAS_CAST(long, info->width), JAS_CAST(long, info->height),",
      "JAS_CAST(long, info->numplanes), JAS_CAST(long, info->depth),",
      "JAS_CAST(long, info->enctype), JAS_CAST(long, info->siz),",
      "JAS_CAST(long, info->hres), JAS_CAST(long, info->vres),",
      "JAS_CAST(long, info->numcolors), JAS_CAST(long, info->mincolors",
      "if (info->width < 0 || info->height < 0 || info->numplanes < 0 ||",
      "info->depth < 0 || info->siz < 0 || info->hres < 0 || info->vres < 0)",
      "jas_eprintf(\"corrupt bit stream\\n\"",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "goto error",
      "error:",
      "if (info)",
      "bmp_info_destroy(info",
      "if (image)",
      "jas_image_destroy(image",
      "return 0"
    ],
    "removed_lines": [
      "return 0",
      "return 0",
      "(\"BMP information: len %d; width %d; height %d; numplanes %d; \"",
      "\"depth %d; enctype %d; siz %d; hres %d; vres %d; numcolors %d; \"",
      "\"mincolors %d\\n\", info->len, info->width, info->height, info->numplanes,",
      "info->depth, info->enctype, info->siz, info->hres, info->vres,",
      "info->numcolors, info->mincolors",
      "bmp_info_destroy(info",
      "return 0",
      "return 0",
      "bmp_info_destroy(info",
      "return 0",
      "bmp_info_destroy(info",
      "return 0",
      "bmp_info_destroy(info",
      "jas_image_destroy(image",
      "return 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1540,
    "id": "CVE-2016-8693",
    "commit_id": "44a524e367597af58d6265ae2014468b334d0309",
    "added_lines": [
      "if (!(buf = jas_realloc2(m->buf_, bufsize, sizeof(unsigned char))) &&",
      "bufsize)"
    ],
    "removed_lines": [
      "assert(m->buf_",
      "if (!(buf = jas_realloc2(m->buf_, bufsize, sizeof(unsigned char))))"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS ExecCode",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1541,
    "id": "CVE-2016-8692",
    "commit_id": "d8c2604cd438c41ec72aff52c16ebd8183068020",
    "added_lines": [
      "if (siz->comps[i].hsamp == 0 || siz->comps[i].hsamp > 255)",
      "jas_eprintf(\"invalid XRsiz value %d\\n\", siz->comps[i].hsamp",
      "jas_free(siz->comps",
      "return -1",
      "if (siz->comps[i].vsamp == 0 || siz->comps[i].vsamp > 255)",
      "jas_eprintf(\"invalid YRsiz value %d\\n\", siz->comps[i].vsamp",
      "jas_free(siz->comps",
      "return -1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1542,
    "id": "CVE-2016-8690",
    "commit_id": "8f62b4761711d036fd8964df256b938c809b7fca",
    "added_lines": [
      "#include \"jasper/jas_debug.h\"",
      "JAS_DBGLOG(1,",
      "\"BMP header: magic 0x%x; siz %d; res1 %d; res2 %d; off %d\\n\",",
      "hdr.magic, hdr.siz, hdr.reserved1, hdr.reserved2, hdr.off",
      "JAS_DBGLOG(1,",
      "(\"BMP information: len %d; width %d; height %d; numplanes %d; \"",
      "\"depth %d; enctype %d; siz %d; hres %d; vres %d; numcolors %d; \"",
      "\"mincolors %d\\n\", info->len, info->width, info->height, info->numplanes,",
      "info->depth, info->enctype, info->siz, info->hres, info->vres,",
      "info->numcolors, info->mincolors",
      "v |= (JAS_CAST(uint_fast32_t, c) << 24"
    ],
    "removed_lines": [
      "v |= (c << 24"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1543,
    "id": "CVE-2016-8689",
    "commit_id": "7f17c791dcfd8c0416e2cd2485b19410e47ef126",
    "added_lines": [
      "if (h->emptyStreamBools != NULL",
      "return (-1",
      "if (h->emptyFileBools != NULL",
      "return (-1",
      "if (h->antiBools != NULL",
      "return (-1",
      "if (zip->entry_names != NULL",
      "return (-1",
      "if (h->attrBools != NULL",
      "return (-1"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1544,
    "id": "CVE-2016-8688",
    "commit_id": "eec077f52bfa2d3f7103b4b74d52572ba8a15aca",
    "added_lines": [
      "begin 600 test_read_format_mtree_crash747.mtree.bz2",
      "M0EIH.3%!62936:OH@(@``'/[@,`0`@!``'^```)A@9\\`$`@@`'4)049!IIH!",
      "MM021-0,F@&@6````9%>$(K!GIC*XFR0`$```J0+:$XP```!D-F)H[#SE9+2'",
      "4+E\"L=ASXUI%R(I\"HD'ZA(5?1`Q``",
      "`",
      "end"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "invalid read"
    ]
  },
  {
    "index": 1547,
    "id": "CVE-2016-8675",
    "commit_id": "e5b019725f53b79159931d3a7317107cbbfd0860",
    "added_lines": [
      "if (temp_buffer & 0xfffffe00",
      "continue",
      "if (temp_buffer < 2",
      "else if (temp_buffer >= 0x100 && temp_buffer < 0x120",
      "else if (temp_buffer >= 0x120 && temp_buffer < 0x130"
    ],
    "removed_lines": [
      "if ((temp_buffer & 0xffffff00) != 0x100",
      "else if (temp_buffer < 0x120",
      "else if (temp_buffer < 0x130"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1551,
    "id": "CVE-2016-7972",
    "commit_id": "aa54e0b59200a994d50a346b5d7ac818ebcf2d4b",
    "added_lines": [
      "shaper->n_glyphs = new_size"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory allocation failure",
      "unspecified vectors"
    ]
  },
  {
    "index": 1553,
    "id": "CVE-2016-7969",
    "commit_id": "b72b283b936a600c730e00875d7d067bded3fc26",
    "added_lines": [
      "if (DIFF(l1_new, l2_new) < DIFF(l1, l2) && w > text_info->glyphs)",
      "if (w->linebreak",
      "text_info->n_lines--"
    ],
    "removed_lines": [
      "if (DIFF(l1_new, l2_new) < DIFF(l1, l2))"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 1554,
    "id": "CVE-2016-7906",
    "commit_id": "d63a3c5729df59f183e9e110d5d8385d17caaad0",
    "added_lines": [
      "status=AcquireImageColormap(image,2"
    ],
    "removed_lines": [
      "image->colors=2"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1556,
    "id": "CVE-2016-7799",
    "commit_id": "a7bb158b7bedd1449a34432feb3a67c8f1873bfa",
    "added_lines": [
      "if ((format < 0) || ((format-1) >= EXIF_NUM_FORMATS"
    ],
    "removed_lines": [
      "if ((format-1) >= EXIF_NUM_FORMATS"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1558,
    "id": "CVE-2016-7797",
    "commit_id": "5ec24a2642bd0854b884d1a9b51d12371373b410",
    "added_lines": [
      "notify_of_new_client(client"
    ],
    "removed_lines": [
      "notify_of_new_client(new_client"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1560,
    "id": "CVE-2016-7540",
    "commit_id": "a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7",
    "added_lines": [
      "WriteRGFImage(const ImageInfo *,Image *",
      "%        Image *image",
      "static MagickBooleanType WriteRGFImage(const ImageInfo *image_info,Image *image",
      "status=OpenBlob(image_info,image,WriteBinaryBlobMode,&image->exception",
      "p=GetVirtualPixels(image,0,y,image->columns,1,&image->exception"
    ],
    "removed_lines": [
      "WriteRGFImage(const ImageInfo *,Image *,ExceptionInfo *",
      "%        Image *image,ExceptionInfo *exception",
      "static MagickBooleanType WriteRGFImage(const ImageInfo *image_info,Image *image,",
      "ExceptionInfo *exception",
      "assert(exception != (ExceptionInfo *) NULL",
      "assert(exception->signature == MagickSignature",
      "status=OpenBlob(image_info,image,WriteBinaryBlobMode,exception",
      "p=GetVirtualPixels(image,0,y,image->columns,1,exception"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1561,
    "id": "CVE-2016-7539",
    "commit_id": "4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c",
    "added_lines": [
      "cache_info->mapped=MagickFalse",
      "cache_info->pixels=(PixelPacket *) MagickAssumeAligned",
      "AcquireAlignedMemory(1,(size_t) cache_info->length"
    ],
    "removed_lines": [
      "static inline void AllocatePixelCachePixels(CacheInfo *cache_info",
      "cache_info->mapped=MagickFalse",
      "cache_info->pixels=(PixelPacket *) MagickAssumeAligned",
      "AcquireAlignedMemory(1,(size_t) cache_info->length",
      "if (cache_info->pixels == (PixelPacket *) NULL",
      "cache_info->mapped=MagickTrue",
      "cache_info->pixels=(PixelPacket *) MapBlob(-1,IOMode,0,(size_t",
      "cache_info->length",
      "AllocatePixelCachePixels(cache_info"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak",
      "unspecified vectors"
    ]
  },
  {
    "index": 1562,
    "id": "CVE-2016-7538",
    "commit_id": "53c1dcd34bed85181b901bfce1a2322f85a59472",
    "added_lines": [
      "if ((q+PSDQuantum(count)+12) < (datum+length-16",
      "(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-",
      "(PSDQuantum(count)+12)-(q-datum",
      "SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12"
    ],
    "removed_lines": [
      "(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-",
      "(PSDQuantum(count)+12)-(q-datum",
      "SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1563,
    "id": "CVE-2016-7537",
    "commit_id": "424d40ebfcde48bb872eba75179d3d73704fdf1f",
    "added_lines": [
      "pixels=(unsigned char *) AcquireQuantumMemory(packets+257UL,image->rows*",
      "buffer=(unsigned char *) AcquireQuantumMemory(257,sizeof(*buffer"
    ],
    "removed_lines": [
      "pixels=(unsigned char *) AcquireQuantumMemory(packets+256UL,image->rows*",
      "buffer=(unsigned char *) AcquireQuantumMemory(256,sizeof(*buffer"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds access",
      "out-of-bounds"
    ]
  },
  {
    "index": 1564,
    "id": "CVE-2016-7536",
    "commit_id": "478cce544fdf1de882d78381768458f397964453",
    "added_lines": [
      "if ((count < 0) || (p > (datum+length-count)) ||",
      "(count > (ssize_t) length"
    ],
    "removed_lines": [
      "if ((p > (datum+length-count)) || (count > (ssize_t) length"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1565,
    "id": "CVE-2016-7534",
    "commit_id": "430403b0029b37decf216d57f810899cab2317dd",
    "added_lines": [
      "case CbYCrAQuantum: packet_size=4; break",
      "case CbYCrQuantum: packet_size=3; break",
      "case CbYCrYQuantum: packet_size=4; break"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds access",
      "out-of-bounds"
    ]
  },
  {
    "index": 1566,
    "id": "CVE-2016-7533",
    "commit_id": "bef1e4f637d8f665bc133a9c6d30df08d983bc3a",
    "added_lines": [
      "ldblk+1,sizeof(*BImgBuff"
    ],
    "removed_lines": [
      "ldblk,sizeof(*BImgBuff"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1567,
    "id": "CVE-2016-7532",
    "commit_id": "4f2c04ea6673863b87ac7f186cbb0d911f74085c",
    "added_lines": [
      "ssize_t",
      "cnt",
      "return",
      "cnt=PSDQuantum(count",
      "if (cnt < 0",
      "return",
      "if ((id == 0x000003ed) && (cnt < (ssize_t) (length-12",
      "(void) CopyMagickMemory(q,q+cnt+12,length-(cnt+12)-(q-datum",
      "SetStringInfoLength(bim_profile,length-(cnt+12",
      "static MagickBooleanType WritePSDImage(const ImageInfo *image_info,",
      "Image *image,ExceptionInfo *exception"
    ],
    "removed_lines": [
      "break",
      "if ((id == 0x000003ed) && (PSDQuantum(count) < (ssize_t) (length-12",
      "(void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-",
      "(PSDQuantum(count)+12)-(q-datum",
      "SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12",
      "static MagickBooleanType WritePSDImage(const ImageInfo *image_info,Image *image,",
      "ExceptionInfo *exception"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1568,
    "id": "CVE-2016-7530",
    "commit_id": "c4e63ad30bc42da691f2b5f82a24516dd6b4dc70",
    "added_lines": [
      "extent,",
      "extent=MagickMax(image->columns,image->rows",
      "return((size_t) (packet_size*extent*((quantum_info->depth+7)/8",
      "return((size_t) ((packet_size*extent*quantum_info->depth+7)/8",
      "extent=MagickMax(image->columns,image->rows)*quantum",
      "if ((MagickMax(image->columns,image->rows) != 0) &&",
      "(quantum != (extent/MagickMax(image->columns,image->rows"
    ],
    "removed_lines": [
      "return((size_t) (packet_size*image->columns*((quantum_info->depth+7)/8",
      "return((size_t) ((packet_size*image->columns*quantum_info->depth+7)/8",
      "extent=image->columns*quantum",
      "if ((image->columns != 0) && (quantum != (extent/image->columns"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "divide-by-zero error",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1569,
    "id": "CVE-2016-7529",
    "commit_id": "a2e1064f288a353bc5fef7f79ccb7683759e775c",
    "added_lines": [
      "xcfdata=(XCFPixelInfo *) AcquireQuantumMemory(MagickMax(data_length,",
      "tile_image->columns*tile_image->rows),sizeof(*xcfdata"
    ],
    "removed_lines": [
      "xcfdata=(XCFPixelInfo *) AcquireQuantumMemory(data_length,sizeof(*xcfdata"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1570,
    "id": "CVE-2016-7528",
    "commit_id": "ca0c886abd6d3ef335eb74150cd23b89ebd17135",
    "added_lines": [
      "pixels=(unsigned char *) AcquireQuantumMemory(MagickMax(number_pixels,",
      "max_packets),bytes_per_pixel*sizeof(*pixels"
    ],
    "removed_lines": [
      "pixels=(unsigned char *) AcquireQuantumMemory(max_packets,",
      "bytes_per_pixel*sizeof(*pixels"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1571,
    "id": "CVE-2016-7527",
    "commit_id": "a251039393f423c7858e63cab6aa98d17b8b7a41",
    "added_lines": [
      "(void) strncpy(clone_info->magick,magic_info->name,MaxTextExtent"
    ],
    "removed_lines": [
      "(void) CopyMagickMemory(clone_info->magick,magic_info->name,MaxTextExtent"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1572,
    "id": "CVE-2016-7526",
    "commit_id": "b6ae2f9e0ab13343c0281732d479757a8e8979c7",
    "added_lines": [
      "for (x=0; x < ((ssize_t) image->columns-1); x+=4"
    ],
    "removed_lines": [
      "for (x=0; x < ((ssize_t) image->columns-1); x+=2"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1574,
    "id": "CVE-2016-7522",
    "commit_id": "4b1b9c0522628887195bad3a6723f7000b0c9a58",
    "added_lines": [
      "if ((count != (ssize_t) length) || (length < 4) ||"
    ],
    "removed_lines": [
      "if ((count != (ssize_t) length) ||"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1577,
    "id": "CVE-2016-7515",
    "commit_id": "2ad6d33493750a28a5a655d319a8e0b16c392de1",
    "added_lines": [
      "number_planes_filled,",
      "number_planes_filled=(number_planes % 2 == 0) ? number_planes :",
      "number_planes+1",
      "if ((number_pixels*number_planes_filled) != (size_t) (number_pixels*",
      "number_planes_filled",
      "pixel_info_length=image->columns*image->rows*number_planes_filled"
    ],
    "removed_lines": [
      "if ((number_pixels*number_planes) != (size_t) (number_pixels*number_planes",
      "pixel_info_length=image->columns*image->rows*MagickMax(number_planes,4"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1578,
    "id": "CVE-2016-7514",
    "commit_id": "e14fd0a2801f73bdc123baf4fbab97dec55919eb",
    "added_lines": [
      "ConstrainColormapIndex(image,GetPixelIndex(image,q),",
      "exception),q"
    ],
    "removed_lines": [
      "GetPixelIndex(image,q),q"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1579,
    "id": "CVE-2016-7513",
    "commit_id": "a54fe0e8600eaf3dc6fe717d3c0398001507f723",
    "added_lines": [
      "(void) memcpy(clone_info->pixels,cache_info->pixels,cache_info->columns*",
      "cache_info->rows*sizeof(*cache_info->pixels"
    ],
    "removed_lines": [
      "static inline void CopyPixels(PixelPacket *destination,",
      "const PixelPacket *source,const MagickSizeType number_pixels",
      "#if !defined(MAGICKCORE_OPENMP_SUPPORT) || (MAGICKCORE_QUANTUM_DEPTH <= 8",
      "(void) memcpy(destination,source,(size_t) number_pixels*sizeof(*source",
      "#else",
      "register MagickOffsetType",
      "i",
      "if ((number_pixels*sizeof(*source)) < MagickMaxBufferExtent",
      "(void) memcpy(destination,source,(size_t) number_pixels*",
      "sizeof(*source",
      "return",
      "#pragma omp parallel for",
      "for (i=0; i < (MagickOffsetType) number_pixels; i++",
      "destination[i]=source[i]",
      "#endif",
      "CopyPixels(clone_info->pixels,cache_info->pixels,cache_info->columns*",
      "cache_info->rows"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault",
      "off-by-one",
      "unspecified vectors",
      "off-by-one error"
    ]
  },
  {
    "index": 1583,
    "id": "CVE-2016-7101",
    "commit_id": "7afcf9f71043df15508e46f079387bd4689a738d",
    "added_lines": [
      "image->depth=(size_t) MagickMin((size_t) 8*iris_info.bytes_per_pixel,",
      "MAGICKCORE_QUANTUM_DEPTH",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\""
    ],
    "removed_lines": [
      "image->depth=(size_t) MagickMin((size_t) 8*",
      "iris_info.bytes_per_pixel,MAGICKCORE_QUANTUM_DEPTH"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1585,
    "id": "CVE-2016-6911",
    "commit_id": "4859d69e07504d4b0a4bdf9bcb4d9e3769ca35ae",
    "added_lines": [
      "We're testing that reading corrupt TIFF files doesn't cause any memory issues,",
      "and that the operation gracefully fails (i.e. gdImageCreateFromTiffPtr() returns",
      "NULL).",
      "#include \"gd.h\"",
      "#include \"gdtest.h\"",
      "static void check_file(char *basename",
      "static size_t read_test_file(char **buffer, char *basename",
      "int main",
      "check_file(\"tiff_invalid_read_1.tiff\"",
      "check_file(\"tiff_invalid_read_2.tiff\"",
      "check_file(\"tiff_invalid_read_3.tiff\"",
      "return gdNumFailures",
      "static void check_file(char *basename",
      "gdImagePtr im",
      "char *buffer",
      "size_t size",
      "size = read_test_file(&buffer, basename",
      "im = gdImageCreateFromTiffPtr(size, (void *) buffer",
      "gdTestAssert(im == NULL",
      "free(buffer",
      "static size_t read_test_file(char **buffer, char *basename",
      "char *filename",
      "FILE *fp",
      "size_t exp_size, act_size",
      "filename = gdTestFilePath2(\"tiff\", basename",
      "fp = fopen(filename, \"rb\"",
      "gdTestAssert(fp != NULL",
      "fseek(fp, 0, SEEK_END",
      "exp_size = ftell(fp",
      "fseek(fp, 0, SEEK_SET",
      "gdTestAssert(*buffer != NULL",
      "act_size = fread(*buffer, sizeof(**buffer), exp_size, fp",
      "gdTestAssert(act_size == exp_size",
      "fclose(fp",
      "free(filename",
      "return act_size"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1586,
    "id": "CVE-2016-6906",
    "commit_id": "fb0e0cce0b9f25389ab56604c3547351617e1415",
    "added_lines": [
      "#include \"gd.h\"",
      "#include \"gdtest.h\"",
      "static size_t read_test_file(char **buffer, char *basename",
      "int main",
      "gdImagePtr im",
      "char *buffer",
      "size_t size",
      "size = read_test_file(&buffer, \"heap_overflow.tga\"",
      "im = gdImageCreateFromTgaPtr(size, (void *) buffer",
      "gdTestAssert(im == NULL",
      "free(buffer",
      "return gdNumFailures",
      "static size_t read_test_file(char **buffer, char *basename",
      "char *filename",
      "FILE *fp",
      "size_t exp_size, act_size",
      "filename = gdTestFilePath2(\"tga\", basename",
      "fp = fopen(filename, \"rb\"",
      "gdTestAssert(fp != NULL",
      "fseek(fp, 0, SEEK_END",
      "exp_size = ftell(fp",
      "fseek(fp, 0, SEEK_SET",
      "gdTestAssert(*buffer != NULL",
      "act_size = fread(*buffer, sizeof(**buffer), exp_size, fp",
      "gdTestAssert(act_size == exp_size",
      "fclose(fp",
      "free(filename",
      "return act_size"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1601,
    "id": "CVE-2016-4797",
    "commit_id": "8f9cc62b3f9a1da9712329ddcedb9750d585505c",
    "added_lines": [
      "# issue 733",
      "!opj_decompress -i @INPUT_NR_PATH@/issue733.jp2 -o @TEMP_PATH@/issue733.png"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero vulnerability"
    ]
  },
  {
    "index": 1603,
    "id": "CVE-2016-3695",
    "commit_id": "d7a6be58edc01b1c66ecd8fcc91236bfbce0a420",
    "added_lines": [
      "#include <linux/security.h>",
      "if (get_securelevel() > 0",
      "return -EPERM"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "failure to disable APEI error injection through EINJ when securelevel is set"
    ]
  },
  {
    "index": 1604,
    "id": "CVE-2016-3183",
    "commit_id": "15f081c89650dccee4aa4ae66f614c3fdb268767",
    "added_lines": [
      "for (pad = (w % 4) ? (4 - w % 4) : 0; pad > 0; pad--)"
    ],
    "removed_lines": [
      "for ((pad = w % 4) ? (4 - w % 4) : 0; pad > 0; pad--)"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1605,
    "id": "CVE-2016-3179",
    "commit_id": "140ee8d2204b383279f854802b27bdb41c1d5d1a",
    "added_lines": [
      "memset(newserv, 0, sizeof(struct service));"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "invalid free"
    ]
  },
  {
    "index": 1606,
    "id": "CVE-2016-3178",
    "commit_id": "b238cade9a173c6f751a34acf8ccff838a62aa47",
    "added_lines": [
      "const char bad_command4[] = { 0x04, 0x01, 0x60, 0x8f, 0xff, 0xff, 0xff, 0x7f",
      "if(n == 0)",
      "close(s",
      "s = connect_unix_socket(sockpath",
      "n = SENDCOMMAND(bad_command4, sizeof(bad_command4",
      "n = read(s, buf, sizeof(buf",
      "printf(\"Response received %d bytes\\n\", (int)n",
      "printresponse(buf, n"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds memory"
    ]
  },
  {
    "index": 1611,
    "id": "CVE-2015-8959",
    "commit_id": "9b428b7af688fe319320aed15f2b94281d1e37b4",
    "added_lines": [
      "if (SeekBlob(image,offset,SEEK_CUR) < 0",
      "break"
    ],
    "removed_lines": [
      "(void) SeekBlob(image, offset, SEEK_CUR"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1612,
    "id": "CVE-2015-8958",
    "commit_id": "b8f17d08b7418204bf8a05a5c24e87b2fc395b75",
    "added_lines": [
      "if ((sun_info.type != RT_ENCODED) &&",
      "((number_pixels*sun_info.depth) > (8*sun_info.length",
      "length=image->rows*(bytes_per_line+bytes_per_line % 2"
    ],
    "removed_lines": [
      "if ((sun_info.type != RT_ENCODED) && (sun_info.depth >= 8) &&",
      "((number_pixels*((sun_info.depth+7)/8)) > sun_info.length",
      "length=image->rows*(bytes_per_line+image->columns % 2"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1614,
    "id": "CVE-2015-8900",
    "commit_id": "97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6",
    "added_lines": [
      "while ((c != '\\n') && (c != '\\0') && (c != EOF",
      "if (sscanf(value,\"%g %g %g %g %g %g %g %g\",&chromaticity[0],",
      "&chromaticity[1],&chromaticity[2],&chromaticity[3],",
      "&chromaticity[4],&chromaticity[5],&white_point[0],",
      "&white_point[1]) == 8",
      "image->chromaticity.red_primary.x=chromaticity[0]",
      "image->chromaticity.red_primary.y=chromaticity[1]",
      "image->chromaticity.green_primary.x=chromaticity[2]",
      "image->chromaticity.green_primary.y=chromaticity[3]",
      "image->chromaticity.blue_primary.x=chromaticity[4]",
      "image->chromaticity.blue_primary.y=chromaticity[5]",
      "image->chromaticity.white_point.x=white_point[0],",
      "image->chromaticity.white_point.y=white_point[1]",
      "if (sscanf(value,\"%d +X %d\",&height,&width) == 2",
      "image->columns=(size_t) width",
      "image->rows=(size_t) height"
    ],
    "removed_lines": [
      "while ((c != '\\n') && (c != '\\0'",
      "(void) sscanf(value,\"%g %g %g %g %g %g %g %g\",",
      "&chromaticity[0],&chromaticity[1],&chromaticity[2],",
      "&chromaticity[3],&chromaticity[4],&chromaticity[5],",
      "&white_point[0],&white_point[1]",
      "image->chromaticity.red_primary.x=chromaticity[0]",
      "image->chromaticity.red_primary.y=chromaticity[1]",
      "image->chromaticity.green_primary.x=chromaticity[2]",
      "image->chromaticity.green_primary.y=chromaticity[3]",
      "image->chromaticity.blue_primary.x=chromaticity[4]",
      "image->chromaticity.blue_primary.y=chromaticity[5]",
      "image->chromaticity.white_point.x=white_point[0],",
      "image->chromaticity.white_point.y=white_point[1]",
      "(void) sscanf(value,\"%d +X %d\",&height,&width",
      "image->columns=(size_t) width",
      "image->rows=(size_t) height"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1615,
    "id": "CVE-2015-8898",
    "commit_id": "5b4bebaa91849c592a8448bc353ab25a54ff8c44",
    "added_lines": [
      "register Image",
      "next=GetNextImageInList(p",
      "if (next == (Image *) NULL",
      "break",
      "if (p->scene >= next->scene"
    ],
    "removed_lines": [
      "if (p->scene >= GetNextImageInList(p)->scene"
    ],
    "cause": [
      "Uncategorized Cluster 8",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "null pointer dereference"
    ]
  },
  {
    "index": 1616,
    "id": "CVE-2015-8897",
    "commit_id": "7b1cf5784b5bcd85aa9293ecf56769f68c037231",
    "added_lines": [
      "columns,",
      "columns=MagickMin(splice_geometry.x,(ssize_t) splice_image->columns",
      "p=GetCacheViewVirtualPixels(image_view,0,y,splice_image->columns,1,",
      "exception",
      "for (x=0; x < columns; x++",
      "if ((y < 0) || (y >= (ssize_t)splice_image->rows",
      "p=GetCacheViewVirtualPixels(image_view,0,y-(ssize_t) splice_geometry.height,",
      "splice_image->columns,1,exception",
      "for (x=0; x < columns; x++"
    ],
    "removed_lines": [
      "p=GetCacheViewVirtualPixels(image_view,0,y,image->columns,1,exception",
      "for (x=0; x < splice_geometry.x; x++",
      "p=GetCacheViewVirtualPixels(image_view,0,y-(ssize_t) splice_geometry.height,",
      "image->columns,1,exception",
      "if ((y < 0) || (y >= (ssize_t) splice_image->rows",
      "for (x=0; x < splice_geometry.x; x++"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1617,
    "id": "CVE-2015-8896",
    "commit_id": "0f6fc2d5bf8f500820c3dbcf0d23ee14f2d9f734",
    "added_lines": [
      "MAGICK_FEATURES=\"Cipher $MAGICK_FEATURES\"",
      "MAGICK_FEATURES=\"Zero-configuration $MAGICK_FEATURES\"",
      "MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $LIBOPENJP2_LIB $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\""
    ],
    "removed_lines": [
      "MAGICK_FEATURES=\"Zero-Configuration $MAGICK_FEATURES\"",
      "MAGICK_DEP_LIBS=\"$USER_LIBS $JBIG_LIBS $LCMS_LIBS $TIFF_LIBS $FREETYPE_LIBS $JPEG_LIBS $GS_LIBS $LQR_LIBS $PNG_LIBS $AUTOTRACE_LIBS $DJVU_LIBS $FFTW_LIBS $FPX_LIBS $FONTCONFIG_LIBS $WEBP_LIBS $WMF_LIBS $DPS_LIBS $XEXT_LIBS $XT_LIBS $IPC_LIBS $X11_LIBS $LZMA_LIBS $BZLIB_LIBS $OPENEXR_LIBS $OPENJPEG_LIBS $PANGO_LIBS $RSVG_LIBS $XML_LIBS $GVC_LIBS $ZLIB_LIBS $GDI32_LIBS $MATH_LIBS $GOMP_LIBS $CL_LIBS $UMEM_LIBS $JEMALLOC_LIBS $THREAD_LIBS\""
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Integer truncation issue"
    ]
  },
  {
    "index": 1618,
    "id": "CVE-2015-8894",
    "commit_id": "4f68e9661518463fca523c9726bb5d940a2aa6d8",
    "added_lines": [
      "if (image->colors < tga_info.colormap_index",
      "image->colors=tga_info.colormap_index"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1626,
    "id": "CVE-2015-5221",
    "commit_id": "df5d2867e8004e51e18b89865bc4aa69229227b3",
    "added_lines": [
      "jas_tvparser_destroy(tvp"
    ],
    "removed_lines": [
      "jas_tvparser_destroy(tvp"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1627,
    "id": "CVE-2015-5219",
    "commit_id": "5f295cd05c3c136d39f5b3e500a2d781bdbb59c8",
    "added_lines": [
      "#define LOGTOD(a)\tldexp(1., (int)(a))",
      "#define ULOGTOD(a)\tldexp(1., (int)(a))"
    ],
    "removed_lines": [
      "#define LOGTOD(a)\t((a) < 0 ? 1. / (1L << -(a)) : \\",
      "1L << (int)(a))",
      "#define ULOGTOD(a)\t(1L << (int)(a))"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1628,
    "id": "CVE-2015-5195",
    "commit_id": "52e977d79a0c4ace997e5c74af429844da2f27be",
    "added_lines": [
      "static FILEGEN cryptostats",
      "static FILEGEN timingstats"
    ],
    "removed_lines": [
      "#ifdef DEBUG_TIMING",
      "static FILEGEN timingstats",
      "#endif",
      "#ifdef AUTOKEY",
      "static FILEGEN cryptostats",
      "#endif",
      "#ifdef AUTOKEY",
      "#endif",
      "#ifdef DEBUG_TIMING",
      "#endif"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1629,
    "id": "CVE-2015-5194",
    "commit_id": "553f2fa65865c31c5e3c48812cfd46176cffdd27",
    "added_lines": [
      "char\tprefix",
      "char *\ttype",
      "switch ($1[0])",
      "case '+':",
      "case '-':",
      "case '=':",
      "prefix = $1[0]",
      "type = $1 + 1",
      "break",
      "default:",
      "prefix = '='",
      "type = $1",
      "$$ = create_attr_sval(prefix, estrdup(type"
    ],
    "removed_lines": [
      "char prefix = $1[0]",
      "char *type = $1 + 1",
      "if (prefix != '+' && prefix != '-' && prefix != '=')",
      "yyerror(\"Logconfig prefix is not '+', '-' or '='\\n\"",
      "else",
      "$$ = create_attr_sval(prefix, estrdup(type"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1633,
    "id": "CVE-2015-4054",
    "commit_id": "74d6e5f7de5ec736f71204b7b422af7380c19ac5",
    "added_lines": [
      "if (!client->auth_user)",
      "disconnect_client(client, true, \"client password pkt before startup packet\"",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1637,
    "id": "CVE-2015-3215",
    "commit_id": "fbfa4d1083ea84c5429992ca3e996d7d4fbc8238",
    "added_lines": [
      "res.xxpFull = TRUE",
      "res.xxpFull = FALSE",
      "res.xxpStatus = ppresXxpIncomplete",
      "res.xxpFull = TRUE",
      "else",
      "res.xxpFull = FALSE",
      "res.xxpStatus = ppresXxpIncomplete",
      "res.value = 0",
      "if (len < 4",
      "res.ipStatus = ppresNotIP",
      "return res",
      "if (len < sizeof(IPv4Header",
      "res.ipStatus = ppresNotIP",
      "return res",
      "DPrintf(3, (\"ip_version %d, ipHeaderSize %d, protocol %d, iplen %d, L2 payload length %d\\n\",",
      "ip_version, ipHeaderSize, pIpHeader->v4.ip_protocol, fullLength, len",
      "if (res.ipStatus == ppresNotIP",
      "return res",
      "if (ipHeaderSize >= fullLength || len < fullLength",
      "DPrintf(2, (\"[%s] - truncated packet - ip_version %d, ipHeaderSize %d, protocol %d, iplen %d, L2 payload length %d\\n\",",
      "ip_version, ipHeaderSize, pIpHeader->v4.ip_protocol, fullLength, len",
      "res.ipCheckSum = ppresIPTooShort",
      "return res",
      "if (res.ipStatus == ppresNotIP || res.ipCheckSum == ppresIPTooShort",
      "return res"
    ],
    "removed_lines": [
      "res.xxpStatus = ppresXxpIncomplete",
      "res.xxpStatus = ppresXxpIncomplete",
      "DPrintf(3, (\"ip_version %d, ipHeaderSize %d, protocol %d, iplen %d\\n\",",
      "ip_version, ipHeaderSize, pIpHeader->v4.ip_protocol, fullLength",
      "if (len < ipHeaderSize) res.ipCheckSum = ppresIPTooShort",
      "if (fullLength)",
      "else",
      "DPrintf(2, (\"ip v.%d, iplen %d\\n\", ip_version, fullLength",
      "res.xxpFull = len >= fullLength ? 1 : 0"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not account for the size of the IP options"
    ]
  },
  {
    "index": 1638,
    "id": "CVE-2015-3138",
    "commit_id": "3ed82f4ed0095768529afc22b923c8f7171fff70",
    "added_lines": [
      "if (ND_TTEST2(cp, len))",
      "while (--n >= 0 && ND_TTEST(*ps))",
      "for (ie = io + ps->nid; io < ie && ND_TTEST(*io); ++io)"
    ],
    "removed_lines": [
      "if (!ND_TTEST2(cp, len))",
      "while (--n >= 0 && !ND_TTEST(*ps))",
      "for (ie = io + ps->nid; io < ie && !ND_TTEST(*io); ++io)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1639,
    "id": "CVE-2015-2313",
    "commit_id": "80149744bdafa3ad4eedc83f8ab675e27baee868",
    "added_lines": [
      "if (pointerCount > 0 * POINTERS)",
      "word* pos = ptr + POINTER_SIZE_IN_WORDS",
      "for (uint i = 0; i < count; i++)",
      "pos += dataSize",
      "for (uint j = 0; j < pointerCount / POINTERS; j++)",
      "zeroObject(segment, reinterpret_cast<WirePointer*>(pos",
      "pos += POINTER_SIZE_IN_WORDS",
      "auto actualSize = elementTag->structRef.wordSize() / ELEMENTS * ElementCount64(count",
      "KJ_REQUIRE(actualSize <= wordCount,",
      "result.wordCount += actualSize + POINTER_SIZE_IN_WORDS",
      "if (pointerCount > 0 * POINTERS)",
      "const word* pos = ptr + POINTER_SIZE_IN_WORDS",
      "for (uint i = 0; i < count / ELEMENTS; i++)",
      "pos += dataSize",
      "for (uint j = 0; j < pointerCount / POINTERS; j++)",
      "result += totalSize(segment, reinterpret_cast<const WirePointer*>(pos),",
      "nestingLimit",
      "pos += POINTER_SIZE_IN_WORDS"
    ],
    "removed_lines": [
      "word* pos = ptr + POINTER_SIZE_IN_WORDS",
      "for (uint i = 0; i < count; i++)",
      "pos += dataSize",
      "for (uint j = 0; j < pointerCount / POINTERS; j++)",
      "zeroObject(segment, reinterpret_cast<WirePointer*>(pos",
      "pos += POINTER_SIZE_IN_WORDS",
      "result.wordCount += wordCount + POINTER_SIZE_IN_WORDS",
      "KJ_REQUIRE(elementTag->structRef.wordSize() / ELEMENTS *",
      "ElementCount64(count) <= wordCount,",
      "const word* pos = ptr + POINTER_SIZE_IN_WORDS",
      "for (uint i = 0; i < count / ELEMENTS; i++)",
      "pos += dataSize",
      "for (uint j = 0; j < pointerCount / POINTERS; j++)",
      "result += totalSize(segment, reinterpret_cast<const WirePointer*>(pos),",
      "nestingLimit",
      "pos += POINTER_SIZE_IN_WORDS"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "*tight* for loop"
    ]
  },
  {
    "index": 1640,
    "id": "CVE-2015-2312",
    "commit_id": "104870608fde3c698483fdef6b97f093fc15685d",
    "added_lines": [
      "static KJ_ALWAYS_INLINE(bool amplifiedRead(SegmentReader* segment, WordCount virtualAmount))",
      "return segment == nullptr || segment->amplifiedRead(virtualAmount",
      "if (wordsPerElement * (1 * ELEMENTS) == 0 * WORDS)",
      "KJ_REQUIRE(amplifiedRead(srcSegment, elementCount * (1 * WORDS / ELEMENTS)),",
      "\"Message contains amplified list pointer.\")",
      "goto useDefault",
      "if (elementSize == ElementSize::VOID)",
      "KJ_REQUIRE(amplifiedRead(srcSegment, elementCount * (1 * WORDS / ELEMENTS)),",
      "\"Message contains amplified list pointer.\")",
      "goto useDefault",
      "if (wordsPerElement * (1 * ELEMENTS) == 0 * WORDS)",
      "KJ_REQUIRE(amplifiedRead(segment, size * (1 * WORDS / ELEMENTS)),",
      "\"Message contains amplified list pointer.\")",
      "goto useDefault",
      "ElementCount elementCount = ref->listRef.elementCount",
      "WordCount wordCount = roundBitsUpToWords(ElementCount64(elementCount) * step",
      "KJ_REQUIRE(boundsCheck(segment, ptr, ptr + wordCount),",
      "if (elementSize == ElementSize::VOID)",
      "KJ_REQUIRE(amplifiedRead(segment, elementCount * (1 * WORDS / ELEMENTS)),",
      "\"Message contains amplified list pointer.\")",
      "goto useDefault",
      "return ListReader(segment, ptr, elementCount, step,"
    ],
    "removed_lines": [
      "KJ_REQUIRE(boundsCheck(segment, ptr, ptr +",
      "roundBitsUpToWords(ElementCount64(ref->listRef.elementCount()) * step)),",
      "return ListReader(segment, ptr, ref->listRef.elementCount(), step,"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1641,
    "id": "CVE-2015-2311",
    "commit_id": "26bcceda72372211063d62aab7e45665faa83633",
    "added_lines": [
      "useDefault:",
      "char* cptr = reinterpret_cast<char*>(ptr",
      "size_t size = ref->listRef.elementCount() / ELEMENTS",
      "KJ_REQUIRE(size > 0 && cptr[size-1] == '\\0', \"Text blob missing NUL terminator.\")",
      "goto useDefault",
      "return Text::Builder(cptr, size - 1"
    ],
    "removed_lines": [
      "return Text::Builder(reinterpret_cast<char*>(ptr), ref->listRef.elementCount() / ELEMENTS - 1"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode +Info",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS Exec Code +Info ",
    "summary": [
      "integer underflow",
      "integer underflow"
    ]
  },
  {
    "index": 1646,
    "id": "CVE-2014-9940",
    "commit_id": "60a2362f769cf549dc466134efe71c8bf9fbaaba",
    "added_lines": [
      "rdev->ena_pin = NULL",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS +Priv",
    "score": 7.6,
    "safe_features": [
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1649,
    "id": "CVE-2014-9914",
    "commit_id": "9709674e68646cee5a24e3000b3558d25412203a",
    "added_lines": [
      "struct dst_entry *dst",
      "dst = __sk_dst_get(sk",
      "if (!dst || !dst->obsolete || dst->ops->check(dst, 0))",
      "rcu_read_unlock",
      "return",
      "dst = !IS_ERR(rt) ? &rt->dst : NULL",
      "sk_dst_set(sk, dst"
    ],
    "removed_lines": [
      "if (! __sk_dst_get(sk) || __sk_dst_check(sk, 0",
      "return",
      "if (!IS_ERR(rt",
      "__sk_dst_set(sk, &rt->dst"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "use-after-free",
      "race condition"
    ]
  },
  {
    "index": 1650,
    "id": "CVE-2014-9907",
    "commit_id": "d7325bac173492b358417a0ad49fabad44447d52",
    "added_lines": [
      "max = MagickMin(min + steps, 255); \\",
      "min = MagickMax(min - steps, 0",
      "ConstructOrdering(const size_t,const DDSVector4 *,const DDSVector3,",
      "DDSVector4 *,DDSVector4 *,unsigned char *,size_t),",
      "ReadDDSInfo(Image *,DDSInfo *),",
      "ReadDXT1(Image *,DDSInfo *,ExceptionInfo *),",
      "ReadDXT3(Image *,DDSInfo *,ExceptionInfo *),",
      "ReadDXT5(Image *,DDSInfo *,ExceptionInfo *),",
      "ReadUncompressedRGB(Image *,DDSInfo *,ExceptionInfo *),",
      "ReadUncompressedRGBA(Image *,DDSInfo *,ExceptionInfo *),",
      "SkipDXTMipmaps(Image *,DDSInfo *,int,ExceptionInfo *),",
      "SkipRGBMipmaps(Image *,DDSInfo *,int,ExceptionInfo *),",
      "WriteDDSImage(const ImageInfo *,Image *),",
      "WriteMipmaps(Image *,const size_t,const size_t,const size_t,",
      "const MagickBooleanType,const MagickBooleanType,ExceptionInfo *",
      "RemapIndices(const ssize_t *,const unsigned char *,unsigned char *),",
      "WriteDDSInfo(Image *,const size_t,const size_t,const size_t),",
      "WriteFourCC(Image *,const size_t,const MagickBooleanType,",
      "const MagickBooleanType,ExceptionInfo *),",
      "WriteImageData(Image *,const size_t,const size_t,const MagickBooleanType,",
      "const MagickBooleanType,ExceptionInfo *),",
      "WriteIndices(Image *,const DDSVector3,const DDSVector3, unsigned char *),",
      "WriteSingleColorFit(Image *,const DDSVector4 *,const ssize_t *),",
      "WriteUncompressed(Image *,ExceptionInfo *",
      "value->x = MagickMin(1.0f,MagickMax(0.0f,value->x",
      "value->y = MagickMin(1.0f,MagickMax(0.0f,value->y",
      "value->z = MagickMin(1.0f,MagickMax(0.0f,value->z",
      "value->w = MagickMin(1.0f,MagickMax(0.0f,value->w",
      "value->x = MagickMin(1.0f,MagickMax(0.0f,value->x",
      "value->y = MagickMin(1.0f,MagickMax(0.0f,value->y",
      "value->z = MagickMin(1.0f,MagickMax(0.0f,value->z",
      "a = 1.0f / MagickMax(w.x,MagickMax(w.y,w.z",
      "q = QueueAuthenticPixels(image, x, y, MagickMin(4, dds_info->width - x),",
      "MagickMin(4, dds_info->height - y),exception",
      "return(SkipDXTMipmaps(image,dds_info,8,exception",
      "q = QueueAuthenticPixels(image, x, y, MagickMin(4, dds_info->width - x),",
      "MagickMin(4, dds_info->height - y),exception",
      "return(SkipDXTMipmaps(image,dds_info,16,exception",
      "q = QueueAuthenticPixels(image, x, y, MagickMin(4, dds_info->width - x),",
      "MagickMin(4, dds_info->height - y),exception",
      "return(SkipDXTMipmaps(image,dds_info,16,exception",
      "return(SkipRGBMipmaps(image,dds_info,3,exception",
      "return(SkipRGBMipmaps(image,dds_info,4,exception",
      "static MagickBooleanType SkipDXTMipmaps(Image *image,DDSInfo *dds_info,",
      "int texel_size,ExceptionInfo *exception",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse",
      "return(MagickTrue",
      "static MagickBooleanType SkipRGBMipmaps(Image *image,DDSInfo *dds_info,",
      "int pixel_size,ExceptionInfo *exception",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse",
      "return(MagickTrue",
      "(unsigned int) (MagickMax(1,(image->columns+3)/4) * 8",
      "(unsigned int) (MagickMax(1,(image->columns+3)/4) * 16"
    ],
    "removed_lines": [
      "max = Min(min + steps, 255); \\",
      "min = Max(min - steps, 0",
      "ConstructOrdering(const size_t, const DDSVector4 *, const DDSVector3,",
      "DDSVector4 *, DDSVector4 *, unsigned char *, size_t",
      "static MagickBooleanType",
      "ReadDDSInfo(Image *, DDSInfo *",
      "static MagickBooleanType",
      "ReadDXT1(Image *, DDSInfo *, ExceptionInfo *",
      "static MagickBooleanType",
      "ReadDXT3(Image *, DDSInfo *, ExceptionInfo *",
      "static MagickBooleanType",
      "ReadDXT5(Image *, DDSInfo *, ExceptionInfo *",
      "static MagickBooleanType",
      "ReadUncompressedRGB(Image *, DDSInfo *, ExceptionInfo *",
      "static MagickBooleanType",
      "ReadUncompressedRGBA(Image *, DDSInfo *, ExceptionInfo *",
      "static void",
      "RemapIndices(const ssize_t *, const unsigned char *, unsigned char *",
      "static void",
      "SkipDXTMipmaps(Image *, DDSInfo *, int",
      "static void",
      "SkipRGBMipmaps(Image *, DDSInfo *, int",
      "static",
      "MagickBooleanType WriteDDSImage(const ImageInfo *, Image *",
      "static void",
      "WriteDDSInfo(Image *, const size_t, const size_t, const size_t",
      "static void",
      "WriteFourCC(Image *, const size_t, const MagickBooleanType,",
      "const MagickBooleanType, ExceptionInfo *",
      "WriteImageData(Image *, const size_t, const size_t, const MagickBooleanType,",
      "const MagickBooleanType, ExceptionInfo *",
      "static void",
      "WriteIndices(Image *, const DDSVector3, const DDSVector3, unsigned char *",
      "static MagickBooleanType",
      "WriteMipmaps(Image *, const size_t, const size_t, const size_t,",
      "const MagickBooleanType, const MagickBooleanType, ExceptionInfo *",
      "static void",
      "WriteSingleColorFit(Image *, const DDSVector4 *, const ssize_t *",
      "static void",
      "WriteUncompressed(Image *, ExceptionInfo *",
      "static inline size_t Max(size_t one, size_t two",
      "if (one > two",
      "return one",
      "return two",
      "static inline float MaxF(float one, float two",
      "if (one > two",
      "return one",
      "return two",
      "static inline size_t Min(size_t one, size_t two",
      "if (one < two",
      "return one",
      "return two",
      "static inline float MinF(float one, float two",
      "if (one < two",
      "return one",
      "return two",
      "value->x = MinF(1.0f,MaxF(0.0f,value->x",
      "value->y = MinF(1.0f,MaxF(0.0f,value->y",
      "value->z = MinF(1.0f,MaxF(0.0f,value->z",
      "value->w = MinF(1.0f,MaxF(0.0f,value->w",
      "value->x = MinF(1.0f,MaxF(0.0f,value->x",
      "value->y = MinF(1.0f,MaxF(0.0f,value->y",
      "value->z = MinF(1.0f,MaxF(0.0f,value->z",
      "a = 1.0f / MaxF(w.x,MaxF(w.y,w.z",
      "q = QueueAuthenticPixels(image, x, y, Min(4, dds_info->width - x),",
      "Min(4, dds_info->height - y),exception",
      "SkipDXTMipmaps(image, dds_info, 8",
      "return MagickTrue",
      "q = QueueAuthenticPixels(image, x, y, Min(4, dds_info->width - x),",
      "Min(4, dds_info->height - y),exception",
      "SkipDXTMipmaps(image, dds_info, 16",
      "return MagickTrue",
      "q = QueueAuthenticPixels(image, x, y, Min(4, dds_info->width - x),",
      "Min(4, dds_info->height - y),exception",
      "SkipDXTMipmaps(image, dds_info, 16",
      "return MagickTrue",
      "SkipRGBMipmaps(image, dds_info, 3",
      "return MagickTrue",
      "SkipRGBMipmaps(image, dds_info, 4",
      "return MagickTrue",
      "static void SkipDXTMipmaps(Image *image, DDSInfo *dds_info, int texel_size",
      "static void SkipRGBMipmaps(Image *image, DDSInfo *dds_info, int pixel_size",
      "(unsigned int) (Max(1,(image->columns+3)/4) * 8",
      "(unsigned int) (Max(1,(image->columns+3)/4) * 16"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1652,
    "id": "CVE-2014-8324",
    "commit_id": "88702a3ce4c28a973bf69023cd0312f412f6193e",
    "added_lines": [
      "assert(plen <= *len && plen > 0);"
    ],
    "removed_lines": [
      "assert(plen <= *len);"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1653,
    "id": "CVE-2014-8323",
    "commit_id": "da087238963c1239fdabd47dc1b65279605aca70",
    "added_lines": [
      "if (plen < 0",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1657,
    "id": "CVE-2012-6697",
    "commit_id": "58c893e834ff20495d00770922",
    "added_lines": [
      "unsigned short lowest_pos = length",
      "if ((i & DN_COMP_BITMASK) != DN_COMP_BITMASK",
      "i -= 12",
      "if (i >= lowest_pos",
      "return std::make_pair((unsigned char *) NULL, \"Invalid decompression pointer\"",
      "lowest_pos = i"
    ],
    "removed_lines": [
      "if (!(i & DN_COMP_BITMASK",
      "i =- 12"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1660,
    "id": "CVE-2010-5329",
    "commit_id": "fc0a80798576f80ca10b3f6c9c7097f12fd1d64e",
    "added_lines": [
      "long",
      "video_usercopy(struct file *file, unsigned int cmd, unsigned long arg,",
      "v4l2_kioctl func",
      "err = func(file, cmd, parg",
      "EXPORT_SYMBOL(video_usercopy",
      "long video_ioctl2(struct file *file,",
      "unsigned int cmd, unsigned long arg",
      "return video_usercopy(file, cmd, arg, __video_do_ioctl"
    ],
    "removed_lines": [
      "long",
      "video_usercopy(struct file *file, unsigned int cmd, unsigned long arg,",
      "v4l2_kioctl func",
      "char\tsbuf[128]",
      "void    *mbuf = NULL",
      "void\t*parg = NULL",
      "long\terr  = -EINVAL",
      "int     is_ext_ctrl",
      "size_t  ctrls_size = 0",
      "void __user *user_ptr = NULL",
      "is_ext_ctrl = (cmd == VIDIOC_S_EXT_CTRLS || cmd == VIDIOC_G_EXT_CTRLS ||",
      "cmd == VIDIOC_TRY_EXT_CTRLS",
      "switch (_IOC_DIR(cmd))",
      "case _IOC_NONE:",
      "parg = NULL",
      "break",
      "case _IOC_READ:",
      "case _IOC_WRITE:",
      "case (_IOC_WRITE | _IOC_READ):",
      "if (_IOC_SIZE(cmd) <= sizeof(sbuf))",
      "parg = sbuf",
      "} else",
      "mbuf = kmalloc(_IOC_SIZE(cmd), GFP_KERNEL",
      "if (NULL == mbuf",
      "return -ENOMEM",
      "parg = mbuf",
      "err = -EFAULT",
      "if (_IOC_DIR(cmd) & _IOC_WRITE",
      "if (copy_from_user(parg, (void __user *)arg, _IOC_SIZE(cmd",
      "goto out",
      "break",
      "if (is_ext_ctrl)",
      "struct v4l2_ext_controls *p = parg",
      "a specific control that caused it. */",
      "p->error_idx = p->count",
      "user_ptr = (void __user *)p->controls",
      "if (p->count)",
      "ctrls_size = sizeof(struct v4l2_ext_control) * p->count",
      "mbuf = kmalloc(ctrls_size, GFP_KERNEL",
      "err = -ENOMEM",
      "if (NULL == mbuf",
      "goto out_ext_ctrl",
      "err = -EFAULT",
      "if (copy_from_user(mbuf, user_ptr, ctrls_size",
      "goto out_ext_ctrl",
      "p->controls = mbuf",
      "err = func(file, cmd, parg",
      "if (err == -ENOIOCTLCMD",
      "err = -EINVAL",
      "if (is_ext_ctrl)",
      "struct v4l2_ext_controls *p = parg",
      "p->controls = (void *)user_ptr",
      "if (p->count && err == 0 && copy_to_user(user_ptr, mbuf, ctrls_size",
      "err = -EFAULT",
      "goto out_ext_ctrl",
      "if (err < 0",
      "goto out",
      "out_ext_ctrl:",
      "switch (_IOC_DIR(cmd))",
      "case _IOC_READ:",
      "case (_IOC_WRITE | _IOC_READ):",
      "if (copy_to_user((void __user *)arg, parg, _IOC_SIZE(cmd",
      "err = -EFAULT",
      "break",
      "out:",
      "kfree(mbuf",
      "return err",
      "EXPORT_SYMBOL(video_usercopy",
      "long video_ioctl2(struct file *file,",
      "unsigned int cmd, unsigned long arg",
      "err = __video_do_ioctl(file, cmd, parg"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "relies on the count value of a v4l2_ext_controls data structure to determine a kmalloc size"
    ]
  },
  {
    "index": 1661,
    "id": "CVE-2010-5328",
    "commit_id": "fa2755e20ab0c7215d99c2dc7c262e98a09b01df",
    "added_lines": [
      ".thread_group\t= LIST_HEAD_INIT(tsk.thread_group),\t\t\\"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not prevent signals with a process group ID of zero from reaching the swapper process"
    ]
  },
  {
    "index": 1663,
    "id": "CVE-2006-5331",
    "commit_id": "6c4841c2b6c32a134f9f36e5e08857138cc12b10",
    "added_lines": [],
    "removed_lines": [
      "#if !defined(CONFIG_ALTIVEC",
      "#endif"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles the case where CONFIG_ALTIVEC is defined"
    ]
  },
  {
    "index": 1682,
    "id": "CVE-2018-1000115",
    "commit_id": "dbb7a8af90054bf4ef51f5814ef7ceb17d83d974",
    "added_lines": [
      "when('specifying tcp port', '-p 11212', 11212, -1",
      "when('tcp port disabled', '-p 0', -1, -1"
    ],
    "removed_lines": [
      "when('specifying tcp port', '-p 11212', 11212, 11212",
      "when('tcp port disabled', '-p 0', -1, 11211"
    ],
    "cause": [
      "Uncategorized Cluster 2"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Insufficient Control of Network Message Volume"
    ]
  },
  {
    "index": 1689,
    "id": "CVE-2018-20467",
    "commit_id": "db0add932fb850d762b02604ca3053b7d7ab6deb",
    "added_lines": [
      "if ((MagickSizeType) bmp_info.number_colors > GetBlobSize(image",
      "offset=(MagickOffsetType) bmp_info.ba_offset",
      "if (offset != 0",
      "if ((offset < TellBlob(image)) ||",
      "(SeekBlob(image,offset,SEEK_SET) != offset",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\""
    ],
    "removed_lines": [
      "if (bmp_info.number_colors > GetBlobSize(image",
      "if (bmp_info.ba_offset != 0",
      "offset=SeekBlob(image,(MagickOffsetType) bmp_info.ba_offset,SEEK_SET",
      "if (offset < 0",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\""
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1694,
    "id": "CVE-2018-20456",
    "commit_id": "9b46d38dd3c4de6048a488b655c7319f845af185",
    "added_lines": [
      "if (reg_index < 2)",
      "op->regs[reg_index] = reg",
      "op->scale[reg_index] = temp",
      "if (reg_index < 2)",
      "op->regs[reg_index] = X86R_UNDEFINED"
    ],
    "removed_lines": [
      "op->regs[reg_index] = reg",
      "op->scale[reg_index] = temp",
      "op->regs[reg_index] = X86R_UNDEFINED"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1699,
    "id": "CVE-2018-19843",
    "commit_id": "f17bfd9f1da05f30f23a4dd05e9d2363e1406948",
    "added_lines": [
      "data[l++] = SEG_REG_PREFIXES[op->operands[1].regs[0] % 6]",
      "data[l++] = (((ut32)op->operands[0].reg) << 3) | 0x5"
    ],
    "removed_lines": [
      "data[l++] = SEG_REG_PREFIXES[op->operands[1].regs[0]]",
      "data[l++] = op->operands[0].reg << 3 | 0x5"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1700,
    "id": "CVE-2018-19842",
    "commit_id": "66191f780863ea8c66ace4040d0d04a8842e8432",
    "added_lines": [
      "if (*begin > strlen (str))",
      "return TT_EOF",
      "while (begin && str[*begin] && isspace ((ut8)str[*begin]))",
      "if (isalpha ((ut8)str[*begin])) {   // word token",
      "while (end && str[*end] && isalnum ((ut8)str[*end]))",
      "if (isdigit ((ut8)str[*begin])) {   // number token"
    ],
    "removed_lines": [
      "while (begin && isspace ((ut8)str[*begin]))",
      "} else if (isalpha ((ut8)str[*begin])) {   // word token",
      "while (end && isalnum ((ut8)str[*end]))",
      "} else if (isdigit ((ut8)str[*begin])) {   // number token"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1705,
    "id": "CVE-2018-19497",
    "commit_id": "bc04aa017c0bd297de8a3b7fc40ffc6ddddbb95d",
    "added_lines": [
      "if (keylen >= nodesize - rec_off)",
      "PRIu16 \")\", rec, cur_node, keylen, (nodesize - rec_off"
    ],
    "removed_lines": [
      "if ((keylen) > nodesize)",
      "PRIu16 \")\", rec, cur_node, keylen, nodesize"
    ],
    "cause": [
      "Cryptographic Weakness"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly determine when a key length is too large"
    ]
  },
  {
    "index": 1723,
    "id": "CVE-2018-18021",
    "commit_id": "d26c25a9d19b5976b319af528886f89cf455692d",
    "added_lines": [
      "static int validate_core_offset(const struct kvm_one_reg *reg",
      "u64 off = core_reg_offset_from_id(reg->id",
      "int size",
      "switch (off)",
      "case KVM_REG_ARM_CORE_REG(regs.regs[0]) ...",
      "KVM_REG_ARM_CORE_REG(regs.regs[30]):",
      "case KVM_REG_ARM_CORE_REG(regs.sp):",
      "case KVM_REG_ARM_CORE_REG(regs.pc):",
      "case KVM_REG_ARM_CORE_REG(regs.pstate):",
      "case KVM_REG_ARM_CORE_REG(sp_el1):",
      "case KVM_REG_ARM_CORE_REG(elr_el1):",
      "case KVM_REG_ARM_CORE_REG(spsr[0]) ...",
      "KVM_REG_ARM_CORE_REG(spsr[KVM_NR_SPSR - 1]):",
      "size = sizeof(__u64",
      "break",
      "case KVM_REG_ARM_CORE_REG(fp_regs.vregs[0]) ...",
      "KVM_REG_ARM_CORE_REG(fp_regs.vregs[31]):",
      "size = sizeof(__uint128_t",
      "break",
      "case KVM_REG_ARM_CORE_REG(fp_regs.fpsr):",
      "case KVM_REG_ARM_CORE_REG(fp_regs.fpcr):",
      "size = sizeof(__u32",
      "break",
      "default:",
      "return -EINVAL",
      "if (KVM_REG_SIZE(reg->id) == size &&",
      "IS_ALIGNED(off, size / sizeof(__u32",
      "return 0",
      "return -EINVAL",
      "if (validate_core_offset(reg",
      "return -EINVAL",
      "if (validate_core_offset(reg",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 2"
    ],
    "effect": "DoS",
    "score": 3.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "insufficient restrictions on userspace access to the core register file",
      "PSTATE.M validation does not prevent unintended execution modes"
    ]
  },
  {
    "index": 1730,
    "id": "CVE-2018-17294",
    "commit_id": "5e4089659bb49b3095fa541fa6387b4c40d7396e",
    "added_lines": [
      "for (k = passIC + 2",
      "((k < passIC + 2 + passInstructions[passIC + 1]) && (kk < input->length",
      "k++"
    ],
    "removed_lines": [
      "for (k = passIC + 2; k < passIC + 2 + passInstructions[passIC + 1]; k++"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1731,
    "id": "CVE-2018-17293",
    "commit_id": "31d670b6489e6d708c3b04b911cdf14ac43d846d",
    "added_lines": [
      "if(!emscriptenInstance",
      "else",
      "std::vector<const char*> argStrings",
      "argStrings.push_back(options.filename",
      "char** args = options.args",
      "while(*args) { argStrings.push_back(*args++);",
      "wavmAssert(emscriptenInstance",
      "Emscripten::injectCommandArgs(emscriptenInstance, argStrings, invokeArgs"
    ],
    "removed_lines": [
      "MemoryInstance* defaultMemory = Runtime::getDefaultMemory(moduleInstance",
      "if(!defaultMemory",
      "std::vector<const char*> argStrings",
      "argStrings.push_back(options.filename",
      "char** args = options.args",
      "while(*args) { argStrings.push_back(*args++);",
      "Emscripten::injectCommandArgs(emscriptenInstance, argStrings, invokeArgs"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1732,
    "id": "CVE-2018-17292",
    "commit_id": "2de6cf70c5ef31e22ed119a25ac2daeefd3d18a1",
    "added_lines": [
      "if(fileBytes.size() >= 4 && *(U32*)fileBytes.data() == 0x6d736100"
    ],
    "removed_lines": [
      "if(*(U32*)fileBytes.data() == 0x6d736100"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1739,
    "id": "CVE-2018-16842",
    "commit_id": "d530e92f59ae9bb2d47066c3c460b25d2ffeb211",
    "added_lines": [
      "len -= cut + 1"
    ],
    "removed_lines": [
      "len -= cut"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.4,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1744,
    "id": "CVE-2018-16749",
    "commit_id": "1007b98f8795ad4bea6bc5f68a32d83e982fdae4",
    "added_lines": [
      "if ((length != 0) && (color_image != (Image *) NULL"
    ],
    "removed_lines": [
      "if (length != 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1746,
    "id": "CVE-2018-16645",
    "commit_id": "ecb31dbad39ccdc65868d5d2a37f0f0521250832",
    "added_lines": [
      "if (bmp_info.number_colors > GetBlobSize(image",
      "ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "crafted image file"
    ]
  },
  {
    "index": 1747,
    "id": "CVE-2018-16644",
    "commit_id": "afa878a689870c28b6994ecf3bb8dbfb2b76d135",
    "added_lines": [
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\"",
      "if (length > GetBlobSize(image",
      "ThrowPICTException(CorruptImageError,",
      "\"InsufficientImageDataInFile\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "missing check for length"
    ]
  },
  {
    "index": 1748,
    "id": "CVE-2018-16643",
    "commit_id": "6b6bff054d569a77973f2140c0e86366e6168a6c",
    "added_lines": [
      "if (fputc(c,file) != c",
      "break"
    ],
    "removed_lines": [
      "(void) fputc(c,file"
    ],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "crafted image file"
    ]
  },
  {
    "index": 1749,
    "id": "CVE-2018-16642",
    "commit_id": "cc4ac341f29fa368da6ef01c207deaf8c61f6a2e",
    "added_lines": [
      "static MagickBooleanType InsertRow(Image *image,ssize_t bpp,unsigned char *p,",
      "ssize_t y,ExceptionInfo *exception",
      "int",
      "bit",
      "Quantum",
      "index",
      "register Quantum",
      "ssize_t",
      "x",
      "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception",
      "if (q == (Quantum *) NULL",
      "return(MagickFalse",
      "switch (bpp",
      "index=((*p) & (0x80 >> bit) ? 0x01 : 0x00",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "for (bit=0; bit < (ssize_t) (image->columns % 8); bit++",
      "index=((*p) & (0x80 >> bit) ? 0x01 : 0x00",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "for (x=0; x < ((ssize_t) image->columns-3); x+=4",
      "index=ConstrainColormapIndex(image,(*p >> 6) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 2) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "p++",
      "if ((image->columns % 4) != 0",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "if ((image->columns % 4) > 1",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "if ((image->columns % 4) > 2",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t",
      "index,q",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0x0f,exception",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "index=ConstrainColormapIndex(image,(*p) & 0x0f,exception",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0x0f,exception",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,*p,exception",
      "SetPixelIndex(image,index,q",
      "if (index < image->colors",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t) index,q",
      "p++",
      "q+=GetPixelChannels(image",
      "break",
      "case 24:",
      "for (x=0; x < (ssize_t) image->columns; x++",
      "SetPixelRed(image,ScaleCharToQuantum(*p++),q",
      "SetPixelGreen(image,ScaleCharToQuantum(*p++),q",
      "SetPixelBlue(image,ScaleCharToQuantum(*p++),q",
      "break",
      "if (!SyncAuthenticPixels(image,exception",
      "return(MagickFalse",
      "return(MagickTrue"
    ],
    "removed_lines": [
      "static void InsertRow(Image *image,ssize_t depth,unsigned char *p,ssize_t y,",
      "ExceptionInfo *exception",
      "size_t bit; ssize_t x",
      "register Quantum *q",
      "Quantum index",
      "index=0",
      "switch (depth",
      "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception",
      "if (q == (Quantum *) NULL",
      "break",
      "index=(Quantum) ((((*p) & (0x80 >> bit)) != 0) ? 0x01 : 0x00",
      "for (bit=0; bit < (image->columns % 8); bit++",
      "index=(Quantum) ((((*p) & (0x80 >> bit)) != 0) ? 0x01 : 0x00",
      "SetPixelIndex(image,index,q",
      "q+=GetPixelChannels(image",
      "(void) SyncAuthenticPixels(image,exception",
      "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception",
      "if (q == (Quantum *) NULL",
      "break",
      "for (x=0; x < ((ssize_t) image->columns-1); x+=2",
      "index=ConstrainColormapIndex(image,(*p >> 6) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 2) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p) & 0x3,exception",
      "SetPixelIndex(image,index,q",
      "q+=GetPixelChannels(image",
      "p++",
      "if ((image->columns % 4) != 0",
      "if ((image->columns % 4) >= 1",
      "if ((image->columns % 4) >= 2",
      "(void) SyncAuthenticPixels(image,exception",
      "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception",
      "if (q == (Quantum *) NULL",
      "break",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0xf,exception",
      "index=ConstrainColormapIndex(image,(*p) & 0xf,exception",
      "q+=GetPixelChannels(image",
      "index=ConstrainColormapIndex(image,(*p >> 4) & 0xf,exception",
      "q+=GetPixelChannels(image",
      "(void) SyncAuthenticPixels(image,exception",
      "q=QueueAuthenticPixels(image,0,y,image->columns,1,exception",
      "if (q == (Quantum *) NULL",
      "break",
      "index=ConstrainColormapIndex(image,*p,exception",
      "SetPixelIndex(image,index,q",
      "p++",
      "(void) SyncAuthenticPixels(image,exception",
      "break"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1755,
    "id": "CVE-2018-16425",
    "commit_id": "360e95d45ac4123255a4c796db96337f332160ad#diff-d643a0fa169471dbf2912f4866dc49c5",
    "added_lines": [
      "strncat(line, buf, sizeof line",
      "strncat(line, \" \", sizeof line",
      "line[(sizeof line)-1] = '\\0';"
    ],
    "removed_lines": [
      "strcat(line, buf",
      "strcat(line, \" \""
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1756,
    "id": "CVE-2018-16424",
    "commit_id": "360e95d45ac4123255a4c796db96337f332160ad#diff-476b3b2a03c4eef331b4b0bfece4b063",
    "added_lines": [
      "strncat(line, buf, sizeof line",
      "strncat(line, \" \", sizeof line",
      "line[(sizeof line)-1] = '\\0';"
    ],
    "removed_lines": [
      "strcat(line, buf",
      "strcat(line, \" \""
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1757,
    "id": "CVE-2018-16423",
    "commit_id": "360e95d45ac4123255a4c796db96337f332160ad#diff-db0cd89ff279ad8c7b3bb780cdf2770a",
    "added_lines": [
      "strncat(line, buf, sizeof line",
      "strncat(line, \" \", sizeof line",
      "line[(sizeof line)-1] = '\\0';"
    ],
    "removed_lines": [
      "strcat(line, buf",
      "strcat(line, \" \""
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1776,
    "id": "CVE-2018-15856",
    "commit_id": "842e4351c2c97de6051cab6ce36b4a81e709a0e1",
    "added_lines": [
      "while (peek(s) != '>' && !eol(s) && !eof(s"
    ],
    "removed_lines": [
      "while (peek(s) != '>' && !eol(s"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1792,
    "id": "CVE-2018-14734",
    "commit_id": "cb2595c1393b4a5211534e6f0a0fbad369e21ad8",
    "added_lines": [
      "mc->id = idr_alloc(&multicast_idr, NULL, 0, 0, GFP_KERNEL",
      "mutex_lock(&mut",
      "idr_replace(&multicast_idr, mc, mc->id",
      "mutex_unlock(&mut"
    ],
    "removed_lines": [
      "mc->id = idr_alloc(&multicast_idr, mc, 0, 0, GFP_KERNEL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1797,
    "id": "CVE-2018-14395",
    "commit_id": "fa19fbcf712a6a6cc5a5cfdc3254a97b9bce6582",
    "added_lines": [
      "if (track->timescale > UINT16_MAX || !track->par->channels)"
    ],
    "removed_lines": [
      "if (track->timescale > UINT16_MAX)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1798,
    "id": "CVE-2018-14394",
    "commit_id": "3a2d21bc5f97aa0161db3ae731fc2732be6108b8",
    "added_lines": [
      "if (samples_in_chunk < 1)",
      "av_log(s, AV_LOG_ERROR, \"fatal error, input packet contains no samples\\n\"",
      "return AVERROR_PATCHWELCOME"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 1816,
    "id": "CVE-2018-14017",
    "commit_id": "eb0fb72b3c5307ec8e33effb6bf947e38cfdffe8",
    "added_lines": [
      "if (offset + 8 >= sz)",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1817,
    "id": "CVE-2018-14016",
    "commit_id": "40b021ba29c8f90ccf7c879fde2580bc73a17e8e",
    "added_lines": [
      "eprintf (\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\"",
      "struct minidump_directory entry",
      "ut64 rvadir = obj->hdr->stream_directory_rva",
      "ut32 delta = i * sizeof (struct minidump_directory",
      "int r = r_buf_read_at (obj->b, rvadir + delta, (ut8*) &entry, sizeof (struct minidump_directory",
      "if (r)",
      "r_bin_mdmp_init_directory_entry (obj, &entry"
    ],
    "removed_lines": [
      "eprintf(\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\"",
      "ut8 *directory_base",
      "struct minidump_directory *entry",
      "directory_base = obj->b->buf + obj->hdr->stream_directory_rva",
      "entry = (struct minidump_directory *)(directory_base + (i * sizeof (struct minidump_directory",
      "r_bin_mdmp_init_directory_entry (obj, entry"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 1822,
    "id": "CVE-2018-13305",
    "commit_id": "d08d4a8c7387e758d439b0592782e4cfa2b4d6a4",
    "added_lines": [
      "if (!mquant || mquant > 31 || mquant < -31) {                          \\"
    ],
    "removed_lines": [
      "if (!mquant || mquant > 31) {                          \\"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access"
    ]
  },
  {
    "index": 1823,
    "id": "CVE-2018-13304",
    "commit_id": "bd27a9364ca274ca97f1df6d984e88a0700fb235",
    "added_lines": [],
    "removed_lines": [
      "av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 1824,
    "id": "CVE-2018-13303",
    "commit_id": "00e8181bd97c834fe60751b0c511d4bb97875f78",
    "added_lines": [
      "err = init_get_bits8(&gb, buf, size",
      "if (err < 0",
      "return AVERROR_INVALIDDATA"
    ],
    "removed_lines": [
      "init_get_bits8(&gb, buf, size"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1825,
    "id": "CVE-2018-13302",
    "commit_id": "ed22dc22216f74c75ee7901f82649e1ff725ba50",
    "added_lines": [
      "} else",
      "if (hdr->substreamid != 0)",
      "avpriv_request_sample(mov->fc, \"Multiple non EAC3 independent substreams\"",
      "ret = AVERROR_PATCHWELCOME",
      "goto end"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access"
    ]
  },
  {
    "index": 1826,
    "id": "CVE-2018-13301",
    "commit_id": "2aa9047486dbff12d9e040f917e5f799ed2fd78b",
    "added_lines": [
      "static int mpeg4_decode_profile_level(MpegEncContext *s, GetBitContext *gb, int *profile, int *level",
      "if (*profile == 0 && *level == 8)",
      "int profile, level",
      "mpeg4_decode_profile_level(s, gb, &profile, &level",
      "if (profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&",
      "(level > 0 && level < 9))",
      "} else if (s->studio_profile)",
      "avpriv_request_sample(s->avctx, \"Mixes studio and non studio profile\\n\"",
      "return AVERROR_PATCHWELCOME",
      "s->avctx->profile = profile",
      "s->avctx->level   = level",
      "av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO"
    ],
    "removed_lines": [
      "static int mpeg4_decode_profile_level(MpegEncContext *s, GetBitContext *gb",
      "s->avctx->profile = get_bits(gb, 4",
      "s->avctx->level   = get_bits(gb, 4",
      "if (s->avctx->profile == 0 && s->avctx->level == 8)",
      "s->avctx->level = 0",
      "mpeg4_decode_profile_level(s, gb",
      "if (s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&",
      "(s->avctx->level > 0 && s->avctx->level < 9))"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1827,
    "id": "CVE-2018-13300",
    "commit_id": "95556e27e2c1d56d9e18f5db34d6f756f3011148",
    "added_lines": [
      "avpriv_request_sample(mov->fc, \"Multiple independent substreams\""
    ],
    "removed_lines": [
      "avpriv_request_sample(track->par, \"Multiple independent substreams\""
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-array read",
      "out-of-array read"
    ]
  },
  {
    "index": 1828,
    "id": "CVE-2018-13095",
    "commit_id": "23fcb3340d033d9f081e21e6c12c2db7eaa541d3",
    "added_lines": [
      "static xfs_failaddr_t",
      "xfs_dinode_verify_fork",
      "struct xfs_dinode\t*dip,",
      "struct xfs_mount\t*mp,",
      "int\t\t\twhichfork",
      "uint32_t\t\tdi_nextents = XFS_DFORK_NEXTENTS(dip, whichfork",
      "switch (XFS_DFORK_FORMAT(dip, whichfork))",
      "case XFS_DINODE_FMT_LOCAL:",
      "if (whichfork == XFS_DATA_FORK)",
      "if (S_ISREG(be16_to_cpu(dip->di_mode",
      "return __this_address",
      "if (be64_to_cpu(dip->di_size) >",
      "XFS_DFORK_SIZE(dip, mp, whichfork",
      "return __this_address",
      "if (di_nextents",
      "return __this_address",
      "break",
      "case XFS_DINODE_FMT_EXTENTS:",
      "if (di_nextents > XFS_DFORK_MAXEXT(dip, mp, whichfork",
      "return __this_address",
      "break",
      "case XFS_DINODE_FMT_BTREE:",
      "if (whichfork == XFS_ATTR_FORK)",
      "if (di_nextents > MAXAEXTNUM",
      "return __this_address",
      "} else if (di_nextents > MAXEXTNUM)",
      "return __this_address",
      "break",
      "default:",
      "return __this_address",
      "return NULL",
      "fa = xfs_dinode_verify_fork(dip, mp, XFS_DATA_FORK",
      "if (fa",
      "return fa",
      "fa = xfs_dinode_verify_fork(dip, mp, XFS_ATTR_FORK",
      "if (fa",
      "return fa"
    ],
    "removed_lines": [
      "switch (dip->di_format)",
      "case XFS_DINODE_FMT_LOCAL:",
      "if (S_ISREG(mode",
      "return __this_address",
      "if (di_size > XFS_DFORK_DSIZE(dip, mp",
      "return __this_address",
      "if (dip->di_nextents",
      "return __this_address",
      "case XFS_DINODE_FMT_EXTENTS:",
      "case XFS_DINODE_FMT_BTREE:",
      "break",
      "default:",
      "return __this_address",
      "switch (dip->di_aformat)",
      "case XFS_DINODE_FMT_LOCAL:",
      "if (dip->di_anextents",
      "return __this_address",
      "case XFS_DINODE_FMT_EXTENTS:",
      "case XFS_DINODE_FMT_BTREE:",
      "break",
      "default:",
      "return __this_address"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "can occur for a corrupted xfs image upon encountering an inode"
    ]
  },
  {
    "index": 1832,
    "id": "CVE-2018-12904",
    "commit_id": "727ba748e110b4de50d142edca9d6a9b7e6111d8",
    "added_lines": [
      "if (vmx_get_cpl(vcpu))",
      "kvm_queue_exception(vcpu, UD_VECTOR",
      "return 1",
      "if (vmx_get_cpl(vcpu))",
      "kvm_queue_exception(vcpu, UD_VECTOR",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.4,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1834,
    "id": "CVE-2018-12714",
    "commit_id": "81f9c4e4177d31ced6f52a89bb70e93bfb77ca03",
    "added_lines": [
      "endif # -record-mcount"
    ],
    "removed_lines": [
      "endif"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 1836,
    "id": "CVE-2018-12684",
    "commit_id": "8fd069f6dedb064339f1091069ac96f3f8bdb552",
    "added_lines": [
      "if ((len > 12) && !memcmp(buf + 5, \"include\", 7))",
      "} else if ((len > 9) && !memcmp(buf + 5, \"exec\", 4))"
    ],
    "removed_lines": [
      "if (!memcmp(buf + 5, \"include\", 7))",
      "} else if (!memcmp(buf + 5, \"exec\", 4))"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1837,
    "id": "CVE-2018-12633",
    "commit_id": "bd23a7269834dc7c1f93e83535d16ebc44b75eba",
    "added_lines": [
      "if (copy_from_user(buf + sizeof(hdr), (void *)arg + sizeof(hdr),",
      "hdr.size_in - sizeof(hdr)))"
    ],
    "removed_lines": [
      "if (copy_from_user(buf, (void *)arg, hdr.size_in))"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS +Info",
    "score": 6.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "information leak",
      "race condition"
    ]
  },
  {
    "index": 1841,
    "id": "CVE-2018-12460",
    "commit_id": "b3332a182f8ba33a34542e4a0370f38b914ccf7d",
    "added_lines": [
      "if (s->codec_id == AV_CODEC_ID_MPEG4",
      "s->idsp.mpeg4_studio_profile = s->studio_profile"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1842,
    "id": "CVE-2018-12459",
    "commit_id": "2fc108f60f98cd00813418a8754a46476b404a3c",
    "added_lines": [
      "if (!s->studio_profile && s->avctx->bits_per_raw_sample != 8",
      "s->avctx->bits_per_raw_sample = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "may trigger an assertion violation"
    ]
  },
  {
    "index": 1843,
    "id": "CVE-2018-12458",
    "commit_id": "e1182fac1afba92a4975917823a5f644bee7e6e8",
    "added_lines": [
      "int64_t hours, minutes, seconds"
    ],
    "removed_lines": [
      "int hours, minutes, seconds"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "may trigger an assertion violation"
    ]
  },
  {
    "index": 1855,
    "id": "CVE-2018-11743",
    "commit_id": "b64ce17852b180dfeea81cf458660be41a78974d",
    "added_lines": [
      "case MRB_TT_ICLASS:",
      "copy_class(mrb, dest, obj",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "makes initialize_copy calls for TT_ICLASS objects"
    ]
  },
  {
    "index": 1862,
    "id": "CVE-2018-11592",
    "commit_id": "8a44b04b584b3d3ab1cb68fed410f7ecb165e50e",
    "added_lines": [
      "assert(ptr>=gfx->backendData && ptr<((char*)gfx->backendData + graphicsGetMemoryRequired(gfx"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1863,
    "id": "CVE-2018-11591",
    "commit_id": "b6d362f6a1f2de0b3e7604848116efb509196bf4",
    "added_lines": [
      "else if (jsvIsArrayBuffer(var)) jsiConsolePrintf(\"%s \", jswGetBasicObjectName(var)?jswGetBasicObjectName(var):\"unknown ArrayBuffer\"); // way to get nice name"
    ],
    "removed_lines": [
      "else if (jsvIsArrayBuffer(var)) jsiConsolePrintf(\"%s \", jswGetBasicObjectName(var)); // way to get nice name"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1867,
    "id": "CVE-2018-11384",
    "commit_id": "77c47cf873dd55b396da60baa2ca83bbd39e4add",
    "added_lines": [
      "if (!data || len < 2)"
    ],
    "removed_lines": [
      "if (!data"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1868,
    "id": "CVE-2018-11383",
    "commit_id": "9d348bcc2c4bbd3805e7eec97b594be9febbdf9a",
    "added_lines": [
      "if (!esil)"
    ],
    "removed_lines": [
      "if (!esil"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid free",
      "uninitialized variable"
    ]
  },
  {
    "index": 1869,
    "id": "CVE-2018-11382",
    "commit_id": "d04c78773f6959bcb427453f8e5b9824d5ba9eff",
    "added_lines": [
      "if (len < 4)",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1870,
    "id": "CVE-2018-11381",
    "commit_id": "3fcf41ed96ffa25b38029449520c8d0a198745f3",
    "added_lines": [
      "int len = to - from",
      "ut8 *buf = calloc (len, 1",
      "r_buf_read_at (bf->buf, from, buf, len",
      "if ((to - needle) > 5 + rc)",
      "bool is_wide32 = (needle + rc + 2 < to) && (!w[0] && !w[1] && !w[2] && w[3] && !w[4]"
    ],
    "removed_lines": [
      "ut8 *buf = calloc (to - from, 1",
      "r_buf_read_at (bf->buf, from, buf, to - from",
      "if ((to - needle) > 5)",
      "bool is_wide32 = needle + rc + 2 < to && !w[0] && !w[1] && !w[2] && w[3] && !w[4]"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC",
      "MEM_ALLOC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "MEM_ALLOC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1871,
    "id": "CVE-2018-11380",
    "commit_id": "60208765887f5f008b3b9a883f3addc8bdb9c134",
    "added_lines": [
      "if (parse_import_stub(bin, &symbols[j], i))",
      "for (j = 0, sym = -1; bin->sects[i].reserved1 + j < bin->nindirectsyms; j++)",
      "int indidx = bin->sects[i].reserved1 + j",
      "if (indidx < 0 || indidx >= bin->nindirectsyms)",
      "break",
      "if (idx == bin->indirectsyms[indidx])",
      "if (!bin->symtab || !bin->symstr || !bin->sects || !bin->indirectsyms)"
    ],
    "removed_lines": [
      "if (parse_import_stub(bin, &symbols[j], i",
      "for (j=0, sym=-1; bin->sects[i].reserved1+j < bin->nindirectsyms; j++",
      "if (idx == bin->indirectsyms[bin->sects[i].reserved1 + j])",
      "if (!bin->symtab || !bin->symstr || !bin->sects || !bin->indirectsyms"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1872,
    "id": "CVE-2018-11379",
    "commit_id": "4e1cf0d3e6f6fe2552a269def0af1cd2403e266c",
    "added_lines": [
      "if (dbg_data_len < 20)",
      "eprintf (\"Truncated NB10 entry, not enough data to parse\\n\"",
      "return 0",
      "SCV_NB10_HEADER nb10_hdr = {{0",
      "res->file_name[0] = 0",
      "if (nb10_hdr.file_name)",
      "strncpy (res->file_name, (const char*",
      "nb10_hdr.file_name, sizeof (res->file_name) - 1"
    ],
    "removed_lines": [
      "memcpy (res, dbg_data, nb10sz",
      "res->file_name = (ut8*) strdup ((const char*) dbg_data + nb10sz",
      "SCV_NB10_HEADER nb10_hdr",
      "strncpy (res->file_name, (const char*",
      "nb10_hdr.file_name, sizeof(res->file_name) - 1"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1874,
    "id": "CVE-2018-11377",
    "commit_id": "25a3703ef2e015bbe1d1f16f6b2f63bb10dd34f4",
    "added_lines": [
      "RAnalOp next_op = {0"
    ],
    "removed_lines": [
      "RAnalOp next_op"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1875,
    "id": "CVE-2018-11376",
    "commit_id": "1f37c04f2a762500222dda2459e6a04646feeedf",
    "added_lines": [
      "if (r_list_length (entries) > 1024)",
      "eprintf (\"Too many entrypoints (%d)\\n\", r_list_length (entries",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1876,
    "id": "CVE-2018-11375",
    "commit_id": "041e53cab7ca33481ae45ecd65ad596976d78e68",
    "added_lines": [
      "if (len < 4)",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1878,
    "id": "CVE-2018-11232",
    "commit_id": "f09444639099584bc4784dfcd85ada67c6f33e0f",
    "added_lines": [
      "cpu = cpumask_first(mask"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "parameter is incorrectly used as a local variable"
    ]
  },
  {
    "index": 1883,
    "id": "CVE-2018-10888",
    "commit_id": "9844d38bed10e9ff17174434b3421b227ae710f3",
    "added_lines": [
      "void test_delta_apply__read_after_limit(void",
      "unsigned char base[16] = { 0 }, delta[] = { 0x10, 0x70, 0xff",
      "void *out",
      "size_t outlen",
      "cl_git_fail(git_delta_apply(&out, &outlen, base, sizeof(base), delta, sizeof(delta"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bound read"
    ]
  },
  {
    "index": 1888,
    "id": "CVE-2018-10675",
    "commit_id": "73223e4e2e3867ebf033a5a8eb2e5df0158ccc99",
    "added_lines": [],
    "removed_lines": [
      "if (vma)",
      "up_read(&current->mm->mmap_sem",
      "vma = NULL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1893,
    "id": "CVE-2018-10360",
    "commit_id": "a642587a9c9e2dd7feacdf513c3643ce26ad3c22",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.143 2018/06/09 16:00:06 christos Exp $\"",
      "for (cp = cname; cp < nbuf + size && *cp",
      "&& isprint(*cp); cp++"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.142 2018/05/24 18:08:01 christos Exp $\"",
      "for (cp = cname; *cp && isprint(*cp); cp++"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1897,
    "id": "CVE-2018-10087",
    "commit_id": "dd83c161fbcc5d8be637ab159c0de015cbff5ba4",
    "added_lines": [
      "if (upid == INT_MIN",
      "return -ESRCH"
    ],
    "removed_lines": [],
    "cause": [
      "Compiler or Build Configuration"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unspecified architecture and compiler is used"
    ]
  },
  {
    "index": 1898,
    "id": "CVE-2018-10074",
    "commit_id": "9903e41ae1f5d50c93f268ca3304d4d7c64b9311",
    "added_lines": [
      "if (!res",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1899,
    "id": "CVE-2018-10021",
    "commit_id": "318aaf34f1179b39fa9c30fa0f3288b645beee39",
    "added_lines": [
      "struct domain_device *dev = cmd_to_domain_dev(cmd",
      "if (dev_is_sata(dev))",
      "list_move_tail(&cmd->eh_entry, &sas_ha->eh_ata_q",
      "return",
      "sas_eh_finish_cmd(cmd",
      "sas_eh_finish_cmd(cmd",
      "sas_eh_finish_cmd(cmd",
      "sas_eh_finish_cmd(cmd"
    ],
    "removed_lines": [
      "static void sas_eh_defer_cmd(struct scsi_cmnd *cmd",
      "struct domain_device *dev = cmd_to_domain_dev(cmd",
      "struct sas_ha_struct *ha = dev->port->ha",
      "struct sas_task *task = TO_SAS_TASK(cmd",
      "if (!dev_is_sata(dev))",
      "sas_eh_finish_cmd(cmd",
      "return",
      "sas_end_task(cmd, task",
      "list_move_tail(&cmd->eh_entry, &ha->eh_ata_q",
      "sas_eh_defer_cmd(cmd",
      "sas_eh_defer_cmd(cmd",
      "sas_eh_defer_cmd(cmd",
      "sas_eh_defer_cmd(cmd"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering certain failure conditions"
    ]
  },
  {
    "index": 1900,
    "id": "CVE-2018-10017",
    "commit_id": "492022c7297ede682161d9c0ec2de15526424e76",
    "added_lines": [
      "pChn = playState.Chn",
      "for(CHANNELINDEX nChn = 0; nChn < GetNumChannels(); nChn++, pChn++"
    ],
    "removed_lines": [
      "for(CHANNELINDEX nChn = 0; nChn < GetNumChannels(); nChn++"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1903,
    "id": "CVE-2018-9918",
    "commit_id": "b4d6cf6836ce025ba1811b7bbec52680c7204223",
    "added_lines": [
      "WARNING: issue-202.pdf (trailer, offset 55770): ignoring excessively deeply nested data structure",
      "WARNING: issue-202.pdf: file is damaged",
      "WARNING: issue-202.pdf (offset 54769): expected trailer dictionary",
      "WARNING: issue-202.pdf: Attempting to reconstruct cross-reference table",
      "issue-202.pdf: unable to find trailer dictionary while recovering damaged file"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "stack exhaustion"
    ]
  },
  {
    "index": 1909,
    "id": "CVE-2018-8789",
    "commit_id": "2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6",
    "added_lines": [
      "static void ntlm_print_negotiate_flags(UINT32 flags",
      "static int ntlm_read_message_header(wStream* s, NTLM_MESSAGE_HEADER* header",
      "static void ntlm_write_message_header(wStream* s, NTLM_MESSAGE_HEADER* header",
      "static void ntlm_populate_message_header(NTLM_MESSAGE_HEADER* header, UINT32 MessageType",
      "static int ntlm_read_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "static void ntlm_write_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "static int ntlm_read_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "const UINT64 offset = (UINT64)fields->BufferOffset + (UINT64)fields->Len",
      "if (offset > Stream_Length(s",
      "static void ntlm_write_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "static void ntlm_free_message_fields_buffer(NTLM_MESSAGE_FIELDS* fields",
      "static void ntlm_print_message_fields(NTLM_MESSAGE_FIELDS* fields, const char* name"
    ],
    "removed_lines": [
      "void ntlm_print_negotiate_flags(UINT32 flags",
      "int ntlm_read_message_header(wStream* s, NTLM_MESSAGE_HEADER* header",
      "void ntlm_write_message_header(wStream* s, NTLM_MESSAGE_HEADER* header",
      "void ntlm_populate_message_header(NTLM_MESSAGE_HEADER* header, UINT32 MessageType",
      "int ntlm_read_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "void ntlm_write_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "int ntlm_read_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "if ((fields->BufferOffset + fields->Len) > Stream_Length(s",
      "void ntlm_write_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields",
      "void ntlm_free_message_fields_buffer(NTLM_MESSAGE_FIELDS* fields",
      "void ntlm_print_message_fields(NTLM_MESSAGE_FIELDS* fields, const char* name"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 1916,
    "id": "CVE-2018-8099",
    "commit_id": "58a6fe94cb851f71214dbefac3f9bffee437d6fe",
    "added_lines": [
      "static int read_entry",
      "size_t *out_size,",
      "return -1",
      "return -1",
      "if (entry_size == 0",
      "return -1",
      "return -1",
      "return -1",
      "return 0",
      "size_t entry_size",
      "if ((error = read_entry(&entry, &entry_size, index, buffer, buffer_size, last)) < 0)"
    ],
    "removed_lines": [
      "static size_t read_entry",
      "return 0",
      "return 0",
      "return 0",
      "return 0",
      "return entry_size",
      "size_t entry_size = read_entry(&entry, index, buffer, buffer_size, last",
      "if (entry_size == 0)"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1918,
    "id": "CVE-2018-8087",
    "commit_id": "0ddcff49b672239dda94d70d0fcf50317a9f4b51",
    "added_lines": [
      "if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom))",
      "kfree(hwname"
    ],
    "removed_lines": [
      "if (idx >= ARRAY_SIZE(hwsim_world_regdom_custom"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1919,
    "id": "CVE-2018-8050",
    "commit_id": "435a2ca802358a3debb6d164d2c33049131df81c",
    "added_lines": [
      "if(af->image_pagesize <= 0 || af->image_pagesize > 16*1024*1024",
      "return -1"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "segmentation fault"
    ]
  },
  {
    "index": 1920,
    "id": "CVE-2018-8043",
    "commit_id": "297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5",
    "added_lines": [
      "if (!r",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1921,
    "id": "CVE-2018-7999",
    "commit_id": "db132b4731a9b4c9534144ba3a18e65b390e9ff6",
    "added_lines": [
      "add_test(vm-test-call-threading vm-test-call ${testing_SOURCE_DIR}/fonts/small.ttf 1",
      "add_test(vm-test-direct-threading vm-test-direct ${testing_SOURCE_DIR}/fonts/small.ttf 1"
    ],
    "removed_lines": [
      "add_test(vm-test-call-threading vm-test-call ${testing_SOURCE_DIR}/fonts/tiny.ttf 1",
      "add_test(vm-test-direct-threading vm-test-direct ${testing_SOURCE_DIR}/fonts/tiny.ttf 1"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1922,
    "id": "CVE-2018-7998",
    "commit_id": "20d840e6da15c1574b3ed998bc92f91d1e36c2a5",
    "added_lines": [
      "gboolean error"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 5.1,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "crafted image file",
      "race condition"
    ]
  },
  {
    "index": 1923,
    "id": "CVE-2018-7757",
    "commit_id": "4a491b1ab11ca0556d2fda1ff1301e862a2d44c4",
    "added_lines": [
      "kfree(req"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 1930,
    "id": "CVE-2018-7480",
    "commit_id": "9b54d816e00425c3a517514e0d677bb3cec49258",
    "added_lines": [
      "if (IS_ERR(blkg"
    ],
    "removed_lines": [
      "if (IS_ERR(blkg))",
      "blkg_free(new_blkg"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 1946,
    "id": "CVE-2018-6343",
    "commit_id": "0600ebe59c3e82cd012def77ca9ca1918da74a71",
    "added_lines": [
      "if (!secondAuthManager_)",
      "return",
      "if (!secondAuthManager_)",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "fails to validate that a secondary auth manager is set before dereferencing it"
    ]
  },
  {
    "index": 1962,
    "id": "CVE-2018-5344",
    "commit_id": "ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5",
    "added_lines": [
      "static void __lo_release(struct loop_device *lo",
      "static void lo_release(struct gendisk *disk, fmode_t mode",
      "mutex_lock(&loop_index_mutex",
      "__lo_release(disk->private_data",
      "mutex_unlock(&loop_index_mutex"
    ],
    "removed_lines": [
      "static void lo_release(struct gendisk *disk, fmode_t mode",
      "struct loop_device *lo = disk->private_data"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1966,
    "id": "CVE-2018-1152",
    "commit_id": "43e84cff1bb2bd8293066f6ac4eb0df61ddddbc6",
    "added_lines": [
      "value of the JDIMENSION type.  This is only a danger with BMP files, since",
      "their width and height fields are 32-bit integers. */",
      "if ((unsigned long long)biWidth *",
      "(unsigned long long)cinfo->input_components > 0xFFFFFFFFULL",
      "ERREXIT(cinfo, JERR_WIDTH_OVERFLOW"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide by zero"
    ]
  },
  {
    "index": 1972,
    "id": "CVE-2018-1065",
    "commit_id": "57ebd808a97d7c5b1e1afb937c2db22beba3c1f8",
    "added_lines": [
      "if (unlikely(stackidx >= private->stacksize))",
      "verdict = NF_DROP",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1978,
    "id": "CVE-2017-1000458",
    "commit_id": "6c0f101a62489b1c5927b4ed63b0e1d37db40282",
    "added_lines": [
      "if ( offset == 0",
      "last_char = c",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out of bounds write"
    ]
  },
  {
    "index": 1980,
    "id": "CVE-2017-1000414",
    "commit_id": "b4e458612d4294e0cfe01dbf1c0b09a07a8133a4#diff-cf9182aecc9d630e8db2e0e35f1eec65",
    "added_lines": [
      "if (!ValidateValue(m_anSofHorzSampFact_Hi[nCompIdent],1,4,_T(\"Horizontal Sampling Factor <Hi>\"),true,1)) return DECMARK_ERR",
      "if (!ValidateValue(m_anSofVertSampFact_Vi[nCompIdent],1,4,_T(\"Vertical Sampling Factor <Vi>\"),true,1)) return DECMARK_ERR"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Division by Zero"
    ]
  },
  {
    "index": 1982,
    "id": "CVE-2017-18270",
    "commit_id": "237bbd29f7a049d310d907f4b2716a7feef9abf3",
    "added_lines": [
      "KEY_ALLOC_UID_KEYRING |",
      "KEY_ALLOC_IN_QUOTA,",
      "KEY_ALLOC_UID_KEYRING |",
      "KEY_ALLOC_IN_QUOTA,"
    ],
    "removed_lines": [
      "KEY_ALLOC_IN_QUOTA,",
      "KEY_ALLOC_IN_QUOTA,"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 3.6,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "local user could create keyrings for other users"
    ]
  },
  {
    "index": 1983,
    "id": "CVE-2017-18261",
    "commit_id": "adb4f11e0a8f4e29900adb2b7af28b6bbd5c1fa4",
    "added_lines": [
      "preempt_disable_notrace();\t\t\t\t\\",
      "preempt_enable_notrace();\t\t\t\t\\"
    ],
    "removed_lines": [
      "preempt_disable();\t\t\t\t\t\\",
      "preempt_enable();\t\t\t\t\t\\"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "recursion",
      "infinite recursion"
    ]
  },
  {
    "index": 1986,
    "id": "CVE-2017-18249",
    "commit_id": "30a61ddf8117c26ac5b295e1233eaa9629a94ca3",
    "added_lines": [
      "struct free_nid *i, *e",
      "int err = -EINVAL",
      "bool ret = false",
      "if (radix_tree_preload(GFP_NOFS",
      "goto err",
      "if (build)",
      "ne = __lookup_nat_cache(nm_i, nid",
      "if (ne && (!get_nat_flag(ne, IS_CHECKPOINTED) ||",
      "nat_get_blkaddr(ne) != NULL_ADDR",
      "goto err_out",
      "e = __lookup_free_nid_list(nm_i, nid",
      "if (e)",
      "if (e->state == NID_NEW",
      "ret = true",
      "goto err_out",
      "ret = true",
      "err_out:",
      "err:",
      "if (err",
      "return ret"
    ],
    "removed_lines": [
      "struct free_nid *i",
      "int err",
      "if (build)",
      "ne = __lookup_nat_cache(nm_i, nid",
      "if (ne && (!get_nat_flag(ne, IS_CHECKPOINTED) ||",
      "nat_get_blkaddr(ne) != NULL_ADDR",
      "return false",
      "if (radix_tree_preload(GFP_NOFS))",
      "kmem_cache_free(free_nid_slab, i",
      "return true",
      "if (err)",
      "return true",
      "return true"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.4,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 1988,
    "id": "CVE-2017-18241",
    "commit_id": "d4fdf8ba0e5808ba9ad6b44337783bd9935e0982",
    "added_lines": [
      "if (!test_opt(sbi, FLUSH_MERGE",
      "return err",
      "if (!f2fs_readonly(sbi->sb))"
    ],
    "removed_lines": [
      "if (test_opt(sbi, FLUSH_MERGE) && !f2fs_readonly(sbi->sb))"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1989,
    "id": "CVE-2017-18232",
    "commit_id": "0558f33c06bb910e2879e355192227a8e8f0219d",
    "added_lines": [
      "struct list_head\tdel_list;"
    ],
    "removed_lines": [],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "mishandles a mutex within libsas"
    ]
  },
  {
    "index": 1990,
    "id": "CVE-2017-18224",
    "commit_id": "3e4c56d41eef5595035872a2ec5a483f42e8917f",
    "added_lines": [
      "static int ocfs2_lock_get_block(struct inode *inode, sector_t iblock,",
      "struct buffer_head *bh_result, int create",
      "int ret = 0",
      "struct ocfs2_inode_info *oi = OCFS2_I(inode",
      "down_read(&oi->ip_alloc_sem",
      "ret = ocfs2_get_block(inode, iblock, bh_result, create",
      "up_read(&oi->ip_alloc_sem",
      "return ret",
      "static int ocfs2_dio_wr_get_block(struct inode *inode, sector_t iblock,",
      "ret = ocfs2_lock_get_block(inode, iblock, bh_result, create",
      "get_block = ocfs2_lock_get_block",
      "get_block = ocfs2_dio_wr_get_block"
    ],
    "removed_lines": [
      "static int ocfs2_dio_get_block(struct inode *inode, sector_t iblock,",
      "down_read(&oi->ip_alloc_sem",
      "ret = ocfs2_get_block(inode, iblock, bh_result, create",
      "up_read(&oi->ip_alloc_sem",
      "get_block = ocfs2_get_block",
      "get_block = ocfs2_dio_get_block"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 1.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 1992,
    "id": "CVE-2017-18221",
    "commit_id": "70feee0e1ef331b22cc51f383d532a0d043fbdcc",
    "added_lines": [
      "int delta_munlocked = -nr",
      "} else",
      "delta_munlocked++"
    ],
    "removed_lines": [
      "int delta_munlocked",
      "delta_munlocked = -nr + pagevec_count(&pvec_putback"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1993,
    "id": "CVE-2017-18218",
    "commit_id": "27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2",
    "added_lines": [
      "netdev_tx_t hns_nic_net_xmit_hw(struct net_device *ndev,",
      "struct sk_buff *skb,",
      "struct hns_nic_ring_data *ring_data"
    ],
    "removed_lines": [
      "int hns_nic_net_xmit_hw(struct net_device *ndev,",
      "struct sk_buff *skb,",
      "struct hns_nic_ring_data *ring_data"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1994,
    "id": "CVE-2017-18216",
    "commit_id": "853bc26a7ea39e354b9f8889ae7ad1492ffa28d2",
    "added_lines": [
      "static inline void o2nm_lock_subsystem(void",
      "static inline void o2nm_unlock_subsystem(void",
      "if (node->nd_item.ci_parent",
      "return to_o2nm_cluster(node->nd_item.ci_parent->ci_parent",
      "else",
      "return NULL",
      "struct o2nm_cluster *cluster",
      "o2nm_lock_subsystem",
      "cluster = to_o2nm_cluster_from_node(node",
      "if (!cluster)",
      "o2nm_unlock_subsystem",
      "return -EINVAL",
      "o2nm_unlock_subsystem",
      "struct o2nm_cluster *cluster",
      "o2nm_lock_subsystem",
      "cluster = to_o2nm_cluster_from_node(node",
      "if (!cluster)",
      "o2nm_unlock_subsystem",
      "return -EINVAL",
      "o2nm_unlock_subsystem",
      "struct o2nm_cluster *cluster",
      "o2nm_lock_subsystem",
      "cluster = to_o2nm_cluster_from_node(node",
      "if (!cluster)",
      "ret = -EINVAL",
      "goto out",
      "cluster->cl_local_node != node->nd_num)",
      "ret = -EBUSY",
      "goto out",
      "goto out",
      "ret = count",
      "out:",
      "o2nm_unlock_subsystem",
      "return ret",
      "static inline void o2nm_lock_subsystem(void",
      "mutex_lock(&o2nm_cluster_group.cs_subsys.su_mutex",
      "static inline void o2nm_unlock_subsystem(void",
      "mutex_unlock(&o2nm_cluster_group.cs_subsys.su_mutex"
    ],
    "removed_lines": [
      "return to_o2nm_cluster(node->nd_item.ci_parent->ci_parent",
      "struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node",
      "struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node",
      "struct o2nm_cluster *cluster = to_o2nm_cluster_from_node(node",
      "cluster->cl_local_node != node->nd_num",
      "return -EBUSY",
      "return ret",
      "return count"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 1995,
    "id": "CVE-2017-18208",
    "commit_id": "6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 1996,
    "id": "CVE-2017-18204",
    "commit_id": "28f5a8a7c033cbf3e32277f4cc9c6afd74f05300",
    "added_lines": [
      "inode_dio_wait(inode"
    ],
    "removed_lines": [
      "inode_dio_wait(inode"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 1997,
    "id": "CVE-2017-18203",
    "commit_id": "b9a41d21dceadf8104812626ef85dc56ee8a60ed",
    "added_lines": [
      "spin_lock(&_minor_lock",
      "if (test_bit(DMF_FREEING, &md->flags) || dm_deleting_md(md))",
      "md = NULL",
      "goto out",
      "out:",
      "spin_unlock(&_minor_lock"
    ],
    "removed_lines": [
      "if (test_bit(DMF_FREEING, &md->flags) ||",
      "dm_deleting_md(md",
      "return NULL"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 1.9,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 1998,
    "id": "CVE-2017-18202",
    "commit_id": "687cb0884a714ff484d038e9190edc874edcf146",
    "added_lines": [
      "if (vma_is_anonymous(vma) || !(vma->vm_flags & VM_SHARED))",
      "tlb_gather_mmu(&tlb, mm, vma->vm_start, vma->vm_end",
      "tlb_finish_mmu(&tlb, vma->vm_start, vma->vm_end"
    ],
    "removed_lines": [
      "tlb_gather_mmu(&tlb, mm, 0, -1",
      "if (vma_is_anonymous(vma) || !(vma->vm_flags & VM_SHARED",
      "tlb_finish_mmu(&tlb, 0, -1"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 1999,
    "id": "CVE-2017-18200",
    "commit_id": "638164a2718f337ea224b747cf5977ef143166a4",
    "added_lines": [
      "f2fs_wait_discard_bios(sbi, true"
    ],
    "removed_lines": [
      "f2fs_wait_discard_bios(sbi"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles reference counts associated with f2fs_wait_discard_bios calls"
    ]
  },
  {
    "index": 2009,
    "id": "CVE-2017-18079",
    "commit_id": "340d394a789518018f834ff70f7534fc463d3226",
    "added_lines": [
      "spin_lock_irq(&i8042_lock",
      "spin_unlock_irq(&i8042_lock",
      "spin_lock_irq(&i8042_lock",
      "port->serio = NULL",
      "spin_unlock_irq(&i8042_lock",
      "if (likely(serio && !filtered"
    ],
    "removed_lines": [
      "mb",
      "port->serio = NULL",
      "if (likely(port->exists && !filtered"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2010,
    "id": "CVE-2017-18075",
    "commit_id": "d76c68109f37cb85b243a1cf0f40313afd2bae68",
    "added_lines": [
      "static void pcrypt_free(struct aead_instance *inst",
      "struct pcrypt_instance_ctx *ctx = aead_instance_ctx(inst",
      "crypto_drop_aead(&ctx->spawn",
      "kfree(inst",
      "inst->free = pcrypt_free"
    ],
    "removed_lines": [
      "static void pcrypt_free(struct crypto_instance *inst",
      "struct pcrypt_instance_ctx *ctx = crypto_instance_ctx(inst",
      "crypto_drop_aead(&ctx->spawn",
      "kfree(inst",
      ".free = pcrypt_free,"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "MEM_FREE"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer"
    ]
  },
  {
    "index": 2011,
    "id": "CVE-2017-18017",
    "commit_id": "2638fd0f92d4397884fd991d8f4925cb3f081901",
    "added_lines": [
      "if (len < tcp_hdrlen || tcp_hdrlen < sizeof(struct tcphdr",
      "if (tcp_hdrlen >= 15 * 4",
      "return 0"
    ],
    "removed_lines": [
      "if (len < tcp_hdrlen"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 10.0,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 2012,
    "id": "CVE-2017-16910",
    "commit_id": "5563e6ddc3f7cb93d98b491194ceebdee7288d36",
    "added_lines": [
      "if(width < TS || height < TS",
      "throw LIBRAW_EXCEPTION_IO_CORRUPT; // too small image",
      "for(int i = 0; i < 3; i++",
      "for(int j = 0; j < 3; j++",
      "for(int k = 0; k < 2; k++",
      "for(int l = 0; l < 8; l++",
      "allhex[i][j][k][l]=32700",
      "int minv=0,maxv=0,minh=0,maxh=0",
      "minv=MIN(v,minv",
      "maxv=MAX(v,maxv",
      "minh=MIN(v,minh",
      "maxh=MAX(v,maxh",
      "#ifdef LIBRAW_LIBRARY_BUILD",
      "for(int i = 0; i < 3; i++",
      "for(int j = 0; j < 3; j++",
      "for(int k = 0; k < 2; k++",
      "for(int l = 0; l < 8; l++",
      "if(allhex[i][j][k][l]>maxh+maxv*width+1 || allhex[i][j][k][l]<minh+minv*width-1",
      "throw LIBRAW_EXCEPTION_IO_CORRUPT",
      "int retrycount = 0",
      "#endif",
      "row--",
      "#ifdef LIBRAW_LIBRARY_BUILD",
      "if(retrycount++ > width*height",
      "throw LIBRAW_EXCEPTION_IO_CORRUPT",
      "#endif"
    ],
    "removed_lines": [
      "row--"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid read"
    ]
  },
  {
    "index": 2017,
    "id": "CVE-2017-15127",
    "commit_id": "5af10dfd0afc559bb4b0f7e3e8227a1578333995",
    "added_lines": [
      "out_release_nounlock:"
    ],
    "removed_lines": [
      "out_release_nounlock:"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "A superfluous implicit page unlock for VM_SHARED hugetlbfs mapping"
    ]
  },
  {
    "index": 2019,
    "id": "CVE-2017-9732",
    "commit_id": "f237f3e09ecbaf59c897f5046538a7b1a3fa40c1",
    "added_lines": [
      "gss_release_buffer(&min, &in",
      "gss_release_buffer(&min, &out",
      "goto bail",
      "goto bail",
      "goto bail",
      "goto bail",
      "goto bail",
      "goto bail",
      "bail:",
      "free(tmpbuf",
      "tmpbuf = NULL",
      "return -1"
    ],
    "removed_lines": [
      "return -1",
      "return -1",
      "return -1",
      "return -1",
      "return -1",
      "return -1"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory exhaustion"
    ]
  },
  {
    "index": 2029,
    "id": "CVE-2015-9274",
    "commit_id": "c917965b9e6fe2b21ed6c51559673288fa3af4b7",
    "added_lines": [
      "if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, this))) return TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, &u.format))) return TRACE_RETURN (c->default_return_value"
    ],
    "removed_lines": [
      "if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, this))) TRACE_RETURN (c->default_return_value",
      "if (unlikely (!c->may_dispatch (this, &u.format))) TRACE_RETURN (c->default_return_value"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid read"
    ]
  },
  {
    "index": 2033,
    "id": "CVE-2014-8130",
    "commit_id": "3c5eb8b1be544e41d2c336191bc4936300ad7543",
    "added_lines": [
      "if (s == 0",
      "return ((void *) NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 2046,
    "id": "CVE-2019-1010279",
    "commit_id": "d8634daf74c882356659addb65fb142b738a186b",
    "added_lines": [
      "if (p->proto == IPPROTO_TCP && pflow->protoctx != NULL &&",
      "(p->flags & PKT_STREAM_EST"
    ],
    "removed_lines": [
      "if (p->proto == IPPROTO_TCP && pflow->protoctx != NULL)"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS Bypass",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS Bypass ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2047,
    "id": "CVE-2019-1010251",
    "commit_id": "11f3659f64a4e42e90cb3c09fcef66894205aefe",
    "added_lines": [
      "DECODE_TUNNEL_IPV6_TEREDO,"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS Bypass",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS Bypass ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2049,
    "id": "CVE-2019-1010239",
    "commit_id": "be749d7efa7c9021da746e685bd6dec79f9dd99b",
    "added_lines": [
      "static void cjson_get_object_item_should_not_crash_with_array(void)",
      "cJSON *array = NULL",
      "cJSON *found = NULL",
      "array = cJSON_Parse(\"[1]\"",
      "found = cJSON_GetObjectItem(array, \"name\"",
      "TEST_ASSERT_NULL(found",
      "cJSON_Delete(array",
      "static void cjson_get_object_item_case_sensitive_should_not_crash_with_array(void)",
      "cJSON *array = NULL",
      "cJSON *found = NULL",
      "array = cJSON_Parse(\"[1]\"",
      "found = cJSON_GetObjectItemCaseSensitive(array, \"name\"",
      "TEST_ASSERT_NULL(found",
      "cJSON_Delete(array",
      "RUN_TEST(cjson_get_object_item_should_not_crash_with_array",
      "RUN_TEST(cjson_get_object_item_case_sensitive_should_not_crash_with_array"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Improper Check for Unusual or Exceptional Conditions"
    ]
  },
  {
    "index": 2053,
    "id": "CVE-2019-1000019",
    "commit_id": "65a23f5dbee4497064e9bb467f81138a62b0dae1",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2063,
    "id": "CVE-2019-17351",
    "commit_id": "6ef36ab967c71690ebe7e5ef997a8be4da3bc844",
    "added_lines": [
      "if (credit < 0)",
      "long n_pages",
      "n_pages = min(-credit, si_mem_available",
      "state = decrease_reservation(n_pages, GFP_BALLOON",
      "if (state == BP_DONE && n_pages != -credit &&",
      "n_pages < totalreserve_pages",
      "state = BP_EAGAIN",
      "if (si_mem_available() < nr_pages",
      "return -ENOMEM",
      "balloon_stats.max_retry_count = 4"
    ],
    "removed_lines": [
      "if (credit < 0",
      "state = decrease_reservation(-credit, GFP_BALLOON",
      "balloon_stats.max_retry_count = RETRY_UNLIMITED"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unrestricted resource consumption during the mapping of guest memory"
    ]
  },
  {
    "index": 2066,
    "id": "CVE-2019-16995",
    "commit_id": "6caabe7f197d3466d238f70915d65301f1716626",
    "added_lines": [
      "void hsr_del_node(struct list_head *self_node_db"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 2067,
    "id": "CVE-2019-16994",
    "commit_id": "07f12b26e21ab359261bf75cfcb424fdc7daeb6d",
    "added_lines": [
      "free_netdev(sitn->fb_tunnel_dev"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 2095,
    "id": "CVE-2019-15163",
    "commit_id": "437b273761adedcbd880f714bfa44afeec186a31",
    "added_lines": [
      "char *crypt_password",
      "crypt_password = crypt(password, user_password",
      "if (crypt_password == NULL",
      "pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\"",
      "return -1",
      "if (strcmp(user_password, crypt_password) != 0"
    ],
    "removed_lines": [
      "if (strcmp(user_password, (char *) crypt(password, user_password)) != 0"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2100,
    "id": "CVE-2019-15140",
    "commit_id": "f7206618d27c2e69d977abf40e3035a33e5f6be0",
    "added_lines": [
      "if(EOFBlob(image)) break",
      "while(filepos < GetBlobSize(image) && !EOFBlob(image))",
      "if(filepos > GetBlobSize(image) || filepos < 0",
      "if((MagickSizeType) (MATLAB_HDR.ObjectSize+filepos) >= GetBlobSize(image",
      "ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\""
    ],
    "removed_lines": [
      "while(!EOFBlob(image))",
      "if (filepos != (unsigned int) filepos",
      "if((MagickSizeType) (MATLAB_HDR.ObjectSize+filepos) > GetBlobSize(image"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 2105,
    "id": "CVE-2019-14981",
    "commit_id": "b522d2d857d2f75b659936b59b0da9df1682c256",
    "added_lines": [
      "gamma=PerceptibleReciprocal(count"
    ],
    "removed_lines": [
      "gamma=1.0/count"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero vulnerability"
    ]
  },
  {
    "index": 2106,
    "id": "CVE-2019-14980",
    "commit_id": "614a257295bdcdeda347086761062ac7658b6830",
    "added_lines": [
      "blob_info->data=NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use after free"
    ]
  },
  {
    "index": 2117,
    "id": "CVE-2019-14284",
    "commit_id": "f3554aeb991214cbfafd17d55e2bfddb50282e32",
    "added_lines": [
      "if (!F_SECT_PER_TRACK",
      "return",
      "(unsigned char)((g->sect << 2) >> FD_SIZECODE(g)) == 0 ||"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "division-by-zero"
    ]
  },
  {
    "index": 2143,
    "id": "CVE-2019-13225",
    "commit_id": "c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c",
    "added_lines": [
      "len += SIZE_OP_JUMP + SIZE_OP_ATOMIC_END",
      "int cond_len, then_len, else_len, jump_len",
      "jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END + SIZE_OP_JUMP",
      "else_len = compile_length_tree(Else, reg",
      "if (else_len < 0) return else_len",
      "else",
      "else_len = 0",
      "r = add_op(reg, OP_JUMP",
      "if (r != 0) return r",
      "COP(reg)->jump.addr = SIZE_OP_ATOMIC_END + else_len + SIZE_INC_OP",
      "r = add_op(reg, OP_ATOMIC_END",
      "if (r != 0) return r",
      "if (IS_NOT_NULL(Else))"
    ],
    "removed_lines": [
      "len += SIZE_OP_JUMP",
      "int cond_len, then_len, jump_len",
      "jump_len = cond_len + then_len + SIZE_OP_ATOMIC_END",
      "if (IS_NOT_NULL(Else)) jump_len += SIZE_OP_JUMP",
      "int else_len = compile_length_tree(Else, reg",
      "r = add_op(reg, OP_JUMP",
      "if (r != 0) return r",
      "COP(reg)->jump.addr = else_len + SIZE_INC_OP"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2144,
    "id": "CVE-2019-13224",
    "commit_id": "0f7f61ed1b7b697e283e37bd2d731d0bd57adb55",
    "added_lines": [
      "#if 0",
      "#endif",
      "return ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION"
    ],
    "removed_lines": [
      "r = conv_encoding(ci->pattern_enc, ci->target_enc, pattern, pattern_end,",
      "&cpat, &cpat_end",
      "if (r != 0) return r"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free",
      "code execution"
    ]
  },
  {
    "index": 2145,
    "id": "CVE-2019-13223",
    "commit_id": "98fdfc6df88b1e34a736d5e126e6c8139c8de1a6",
    "added_lines": [
      "if (pow((float) r+1, dim) <= entries",
      "return -1",
      "if ((int) floor(pow((float) r, dim)) > entries",
      "return -1",
      "LINE_OP(output[x], inverse_db_table[y&255]",
      "LINE_OP(output[x], inverse_db_table[y&255]",
      "if (w == NULL) return 0",
      "if (current_length >= 32) return error(f, VORBIS_invalid_setup",
      "int values = lookup1_values(c->entries, c->dimensions",
      "if (values < 0) return error(f, VORBIS_invalid_setup",
      "c->lookup_values = (uint32) values",
      "for (j=0; j < g->values-1; ++j",
      "if (p[j].x == p[j+1].x",
      "return error(f, VORBIS_invalid_setup",
      "if (m->coupling_steps > f->channels) return error(f, VORBIS_invalid_setup",
      "1.17    - 2019-07-08 - fix CVE-2019-13217, -13218, -13219, -13220, -13221, -13223, -13223",
      "found with Mayhem by ForAllSecure",
      "1.16    - 2019-03-04 - fix warnings",
      "1.15    - 2019-02-07 - explicit failure if Ogg Skeleton data is found",
      "1.14    - 2018-02-11 - delete bogus dealloca usage",
      "1.13    - 2018-01-29 - fix truncation of last frame (hopefully"
    ],
    "removed_lines": [
      "assert(pow((float) r+1, dim) > entries",
      "assert((int) floor(pow((float) r, dim)) <= entries); // (int),floor() as above",
      "LINE_OP(output[x], inverse_db_table[y]",
      "LINE_OP(output[x], inverse_db_table[y]",
      "assert(0",
      "c->lookup_values = lookup1_values(c->entries, c->dimensions"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "reachable assertion"
    ]
  },
  {
    "index": 2152,
    "id": "CVE-2019-12984",
    "commit_id": "385097a3675749cbc9e97c085c0e5dfe4269ca51",
    "added_lines": [
      "if (!info->attrs[NFC_ATTR_DEVICE_INDEX] ||",
      "!info->attrs[NFC_ATTR_TARGET_INDEX]"
    ],
    "removed_lines": [
      "if (!info->attrs[NFC_ATTR_DEVICE_INDEX]"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2156,
    "id": "CVE-2019-12973",
    "commit_id": "8ee335227bbcaf1614124046aa25e53d67b11ec3",
    "added_lines": [
      "OPJ_UINT32 x, y, written",
      "x = y = written = 0U",
      "written++",
      "written++",
      "if (written != width * height)",
      "fprintf(stderr, \"warning, image's actual size does not match advertized one\\n\"",
      "return OPJ_FALSE"
    ],
    "removed_lines": [
      "OPJ_UINT32 x, y",
      "x = y = 0U"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "excessive iteration"
    ]
  },
  {
    "index": 2159,
    "id": "CVE-2019-12819",
    "commit_id": "6ff7b060535e87c2ae14dd8548512abfdda528fb",
    "added_lines": [],
    "removed_lines": [
      "put_device(&bus->dev"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 2160,
    "id": "CVE-2019-12818",
    "commit_id": "58bdd544e2933a21a51eecf17c3f5f94038261b5",
    "added_lines": [
      "u8 *gb_cur, version, version_length",
      "u8 lto_length, wks_length, miux_length",
      "u8 *version_tlv = NULL, *lto_tlv = NULL,",
      "if (!version_tlv)",
      "ret = -ENOMEM",
      "goto out",
      "if (!lto_tlv)",
      "ret = -ENOMEM",
      "goto out",
      "if (!wks_tlv)",
      "ret = -ENOMEM",
      "goto out",
      "if (!miux_tlv)",
      "ret = -ENOMEM",
      "goto out"
    ],
    "removed_lines": [
      "u8 *gb_cur, *version_tlv, version, version_length",
      "u8 *lto_tlv, lto_length",
      "u8 *wks_tlv, wks_length",
      "u8 *miux_tlv, miux_length"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2168,
    "id": "CVE-2019-12111",
    "commit_id": "cb8a02af7a5677cf608e86d57ab04241cf34e24f",
    "added_lines": [
      "if(dest != src && src != NULL)"
    ],
    "removed_lines": [
      "if(dest != src)"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2169,
    "id": "CVE-2019-12110",
    "commit_id": "f321c2066b96d18afa5158dfa2d2873a2957ef38",
    "added_lines": [
      "if (desc == NULL",
      "desc = \"\";"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2170,
    "id": "CVE-2019-12109",
    "commit_id": "13585f15c7f7dc28bbbba1661efb280d530d114c",
    "added_lines": [
      "if (!int_port || !ext_port || !protocol",
      "ClearNameValueList(&data",
      "SoapError(h, 402, \"Invalid Args\"",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2184,
    "id": "CVE-2019-11810",
    "commit_id": "bcf3b67d16a4c8ffae0aa79de5853435e683945c",
    "added_lines": [
      "return -ENOMEM"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "null pointer dereference"
    ]
  },
  {
    "index": 2185,
    "id": "CVE-2019-11599",
    "commit_id": "04f5866e41fb70690e28397487d8bd8eea7d712a",
    "added_lines": [
      "#include <linux/sched/mm.h>",
      "if (!prev || !mmget_still_valid(mm) || expand_stack(prev, addr",
      "if (!mmget_still_valid(mm",
      "return NULL"
    ],
    "removed_lines": [
      "if (!prev || expand_stack(prev, addr"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS +Info",
    "score": 6.9,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 2186,
    "id": "CVE-2019-11596",
    "commit_id": "d35334f368817a77a6bd1f33c6a5676b2c402c02",
    "added_lines": [
      "} else if (strcmp(tokens[1].value, \"mode\") == 0 && ntokens >= 4 &&",
      "} else if (strcmp(tokens[1].value, \"temp_ttl\") == 0 && ntokens >= 4 &&"
    ],
    "removed_lines": [
      "} else if (strcmp(tokens[1].value, \"mode\") == 0 && ntokens >= 3 &&",
      "} else if (strcmp(tokens[1].value, \"temp_ttl\") == 0 && ntokens >= 3 &&"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2187,
    "id": "CVE-2019-11498",
    "commit_id": "bc6cba3f552c44565f7f1e66dc1580189addb2b4",
    "added_lines": [
      "uint32_t sampleRate = 0",
      "if (!config->num_channels || !config->sample_rate)"
    ],
    "removed_lines": [
      "uint32_t sampleRate",
      "if (!config->num_channels)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "has a *Conditional jump or move depends on uninitialised value* condition"
    ]
  },
  {
    "index": 2193,
    "id": "CVE-2019-11463",
    "commit_id": "ba641f73f3d758d9032b3f0e5597a9c6e593a505",
    "added_lines": [
      "#if HAVE_LZMA_H && HAVE_LIBLZMA"
    ],
    "removed_lines": [
      "#if HAVA_LZMA_H && HAVE_LIBLZMA"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 2197,
    "id": "CVE-2019-11339",
    "commit_id": "d227ed5d598340e719eff7156b1aa0a4469e9a6a",
    "added_lines": [
      "if (idx > 63",
      "return AVERROR_INVALIDDATA",
      "if (idx > 63",
      "return AVERROR_INVALIDDATA",
      "if (idx > 63",
      "return AVERROR_INVALIDDATA"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access"
    ]
  },
  {
    "index": 2198,
    "id": "CVE-2019-11338",
    "commit_id": "54655623a82632e7624714d7b2a3e039dc5faa7e",
    "added_lines": [
      "if (s->ref && sh->first_slice_in_pic_flag)",
      "av_log(s->avctx, AV_LOG_ERROR, \"Two slices reporting being the first in the same frame.\\n\"",
      "return 1; // This slice will be skiped later, do not corrupt state",
      "if (ret == 1)",
      "ret = AVERROR_INVALIDDATA",
      "goto fail"
    ],
    "removed_lines": [
      "if (s->ref)",
      "av_log(s->avctx, AV_LOG_ERROR, \"Two slices reporting being the first in the same frame.\\n\"",
      "goto fail"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access",
      "null pointer dereference"
    ]
  },
  {
    "index": 2209,
    "id": "CVE-2019-9917",
    "commit_id": "64613bc8b6b4adf1e32231f9844d99cd512b8973",
    "added_lines": [
      "client.Write(\"PRIVMSG *controlpanel :Set ClientEncoding $me Western\"",
      "client.Write(\"JOIN #a\\342\"",
      "client.ReadUntil",
      "\":*controlpanel!znc@znc.in PRIVMSG nick :ClientEncoding = UTF-8\"",
      "ircd.ReadUntil(\"JOIN #a\\xEF\\xBF\\xBD\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "invalid encoding"
    ]
  },
  {
    "index": 2215,
    "id": "CVE-2019-8460",
    "commit_id": "ed8fdce754a5d8d14c09e989d8877707bd43906f",
    "added_lines": [
      "if (tp->snd_numholes >= TCP_SACKHOLE_LIMIT",
      "goto done",
      "if (tp->snd_numholes >= TCP_SACKHOLE_LIMIT",
      "goto done"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "can be forced to create long chains of TCP SACK holes"
    ]
  },
  {
    "index": 2224,
    "id": "CVE-2019-5892",
    "commit_id": "943d595a018e69b550db08cccba1d0778a86705a",
    "added_lines": [
      "#if ENABLE_BGP_VNC_ATTR"
    ],
    "removed_lines": [
      "#if ENABLE_BGP_VNC"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 0.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not implement RFC 7606"
    ]
  },
  {
    "index": 2230,
    "id": "CVE-2019-3565",
    "commit_id": "01686e15ec77ccb4d49a77d5bce3a01601e54d64",
    "added_lines": [
      "default:",
      "TProtocolException::throwInvalidSkipType(arg_type"
    ],
    "removed_lines": [
      "default:",
      "return 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "would not error upon receiving messages with containers of fields of unknown type"
    ]
  },
  {
    "index": 2231,
    "id": "CVE-2019-3564",
    "commit_id": "c461c1bd1a3e130b181aa9c854da3030cd4b5156",
    "added_lines": [
      "\"fmt\"",
      "default:",
      "return fmt.Errorf(\"unable to skip over unknown type id %d\", fieldType"
    ],
    "removed_lines": [
      "case STOP:",
      "return",
      "return nil"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "would not error upon receiving messages with containers of fields of unknown type"
    ]
  },
  {
    "index": 2235,
    "id": "CVE-2019-3559",
    "commit_id": "a56346ceacad28bf470017a6bda1d5518d0bd943",
    "added_lines": [
      "throw new TProtocolException",
      "TProtocolException.INVALID_DATA, \"Invalid type encountered during skipping: \" + type"
    ],
    "removed_lines": [
      "break"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "would not error upon receiving messages with containers of fields of unknown type"
    ]
  },
  {
    "index": 2236,
    "id": "CVE-2019-3558",
    "commit_id": "c5d6e07588cd03061bc54d451a7fa6e84883d62b",
    "added_lines": [
      "#include <gtest/gtest.h>",
      "#include <thrift/lib/cpp2/protocol/CompactProtocol.h>",
      "using namespace apache::thrift",
      "TEST(ProtocolSkipTest, SkipInt)",
      "IOBufQueue queue",
      "CompactProtocolWriter writer",
      "writer.setOutput(&queue",
      "writer.writeI32(123",
      "auto buf = queue.move",
      "CompactProtocolReader reader",
      "reader.setInput(buf.get",
      "reader.skip(TType::T_I32",
      "TEST(ProtocolSkipTest, SkipStop)",
      "IOBufQueue queue",
      "CompactProtocolWriter writer",
      "writer.setOutput(&queue",
      "writer.writeFieldStop",
      "auto buf = queue.move",
      "CompactProtocolReader reader",
      "reader.setInput(buf.get",
      "bool thrown = false",
      "try",
      "reader.skip(TType::T_STOP",
      "} catch (const TProtocolException& ex)",
      "EXPECT_EQ(TProtocolException::INVALID_DATA, ex.getType",
      "thrown = true",
      "EXPECT_TRUE(thrown",
      "TEST(ProtocolSkipTest, SkipStopInContainer)",
      "IOBufQueue queue",
      "CompactProtocolWriter writer",
      "writer.setOutput(&queue",
      "writer.writeListBegin(TType::T_STOP, 1u << 30",
      "auto buf = queue.move",
      "CompactProtocolReader reader",
      "reader.setInput(buf.get",
      "bool thrown = false",
      "try",
      "reader.skip(TType::T_LIST",
      "} catch (const TProtocolException& ex)",
      "EXPECT_EQ(TProtocolException::INVALID_DATA, ex.getType",
      "thrown = true",
      "EXPECT_TRUE(thrown"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "would not error upon receiving messages with containers of fields of unknown type"
    ]
  },
  {
    "index": 2238,
    "id": "CVE-2019-3554",
    "commit_id": "3b17ba10a82c71e7808760e027ac6af687e06074",
    "added_lines": [
      "auto socket = std::dynamic_pointer_cast<folly::AsyncTransportWrapper>",
      "CHECK(socket"
    ],
    "removed_lines": [
      "auto socket = std::dynamic_pointer_cast<folly::AsyncSocket>"
    ],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrectly casts a socket when accepting a TLS 1.3 connection"
    ]
  },
  {
    "index": 2242,
    "id": "CVE-2018-20961",
    "commit_id": "7fafcfdf6377b18b2a726ea554d6e593ba44349f",
    "added_lines": [
      "WARN_ON(req->buf == NULL",
      "req->buf = NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 2247,
    "id": "CVE-2018-20846",
    "commit_id": "c277159986c80142180fbe5efb256bbf3bdf3edc",
    "added_lines": [
      "static void opj_pi_emit_error(opj_pi_iterator_t * pi, const char* msg",
      "(void)pi",
      "(void)msg",
      "if (index >= pi->include_size)",
      "opj_pi_emit_error(pi, \"Invalid access to pi->include\"",
      "return OPJ_FALSE",
      "if (index >= pi->include_size)",
      "opj_pi_emit_error(pi, \"Invalid access to pi->include\"",
      "return OPJ_FALSE",
      "if (index >= pi->include_size)",
      "opj_pi_emit_error(pi, \"Invalid access to pi->include\"",
      "return OPJ_FALSE",
      "if (index >= pi->include_size)",
      "opj_pi_emit_error(pi, \"Invalid access to pi->include\"",
      "return OPJ_FALSE",
      "if (index >= pi->include_size)",
      "opj_pi_emit_error(pi, \"Invalid access to pi->include\"",
      "return OPJ_FALSE"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds access",
      "out-of-bounds"
    ]
  },
  {
    "index": 2248,
    "id": "CVE-2018-20845",
    "commit_id": "c5bd64ea146162967c29bd2af0cbb845ba3eaaaf",
    "added_lines": [
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue",
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue",
      "if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy)",
      "continue"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Division-by-zero vulnerabilities",
      "division-by-zero"
    ]
  },
  {
    "index": 2253,
    "id": "CVE-2018-20784",
    "commit_id": "c40f7d74c741a907cfaeb73a7697081881c497d0",
    "added_lines": [
      "#define for_each_leaf_cfs_rq(rq, cfs_rq) \\",
      "list_for_each_entry_rcu(cfs_rq, &rq->leaf_cfs_rq_list, leaf_cfs_rq_list",
      "#define for_each_leaf_cfs_rq(rq, cfs_rq)\t\\",
      "for (cfs_rq = &rq->cfs; cfs_rq; cfs_rq = NULL",
      "struct cfs_rq *cfs_rq",
      "for_each_leaf_cfs_rq(rq, cfs_rq)",
      "struct cfs_rq *cfs_rq",
      "for_each_leaf_cfs_rq(cpu_rq(cpu), cfs_rq"
    ],
    "removed_lines": [
      "#define for_each_leaf_cfs_rq_safe(rq, cfs_rq, pos)\t\t\t\\",
      "list_for_each_entry_safe(cfs_rq, pos, &rq->leaf_cfs_rq_list,\t\\",
      "leaf_cfs_rq_list",
      "#define for_each_leaf_cfs_rq_safe(rq, cfs_rq, pos)\t\\",
      "for (cfs_rq = &rq->cfs, pos = NULL; cfs_rq; cfs_rq = pos",
      "static inline bool cfs_rq_is_decayed(struct cfs_rq *cfs_rq",
      "if (cfs_rq->load.weight",
      "return false",
      "if (cfs_rq->avg.load_sum",
      "return false",
      "if (cfs_rq->avg.util_sum",
      "return false",
      "if (cfs_rq->avg.runnable_load_sum",
      "return false",
      "return true",
      "struct cfs_rq *cfs_rq, *pos",
      "for_each_leaf_cfs_rq_safe(rq, cfs_rq, pos)",
      "if (cfs_rq_is_decayed(cfs_rq",
      "list_del_leaf_cfs_rq(cfs_rq",
      "struct cfs_rq *cfs_rq, *pos",
      "for_each_leaf_cfs_rq_safe(cpu_rq(cpu), cfs_rq, pos"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 2274,
    "id": "CVE-2018-14498",
    "commit_id": "9c78a04df4e44ef6487eee99c4258397f4fdca55",
    "added_lines": [
      "unsigned int maxval",
      "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE",
      "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE",
      "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE",
      "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE",
      "ERREXIT(cinfo, JERR_PPM_OUTOFRANGE"
    ],
    "removed_lines": [
      "int maxval",
      "ERREXIT(cinfo, JERR_PPM_TOOLARGE",
      "ERREXIT(cinfo, JERR_PPM_TOOLARGE",
      "ERREXIT(cinfo, JERR_PPM_TOOLARGE",
      "ERREXIT(cinfo, JERR_PPM_TOOLARGE",
      "ERREXIT(cinfo, JERR_PPM_TOOLARGE"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "buffer over-read"
    ]
  },
  {
    "index": 2285,
    "id": "CVE-2018-7191",
    "commit_id": "0ad646c81b2182f7fa67ec0c8c825e0ee165696d",
    "added_lines": [
      "int dev_get_valid_name(struct net *net, struct net_device *dev,",
      "const char *name",
      "EXPORT_SYMBOL(dev_get_valid_name"
    ],
    "removed_lines": [
      "static int dev_get_valid_name(struct net *net,",
      "struct net_device *dev,",
      "const char *name"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2287,
    "id": "CVE-2017-18594",
    "commit_id": "350bbe0597d37ad67abe5fef8fba984707b4e9ad",
    "added_lines": [
      "sshu->session = NULL"
    ],
    "removed_lines": [
      "#include \"nse_debug.h\""
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 2290,
    "id": "CVE-2017-18360",
    "commit_id": "6aeb75e6adfaed16e58780309613a578fe1ee90b",
    "added_lines": [
      "} else",
      "baud = min(baud, 461550"
    ],
    "removed_lines": [
      "} else"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "division-by-zero"
    ]
  },
  {
    "index": 2294,
    "id": "CVE-2016-10741",
    "commit_id": "04197b341f23b908193308b8d63d17ff23232598",
    "added_lines": [
      "if (direct && imap.br_startblock == DELAYSTARTBLOCK)",
      "if (!create || offset < i_size_read(VFS_I(ip)))",
      "WARN_ON_ONCE(1",
      "error = -EIO",
      "goto out_unlock",
      "WARN_ON_ONCE(mapping_mapped(VFS_I(ip)->i_mapping"
    ],
    "removed_lines": [
      "BUG_ON(direct && imap.br_startblock == DELAYSTARTBLOCK"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 4.7,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 2299,
    "id": "CVE-2013-7470",
    "commit_id": "f2e5ddcc0d12f9c4c7b254358ad245c9dddce13b",
    "added_lines": [
      "u8 tag_len",
      "tag_len = opt[opt_iter + 1]",
      "if ((tag_len == 0) || (opt[opt_iter + 1] > (opt_len - opt_iter)))",
      "opt_iter += tag_len"
    ],
    "removed_lines": [
      "if (opt[opt_iter + 1] > (opt_len - opt_iter))",
      "opt_iter += opt[opt_iter + 1]"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 2305,
    "id": "CVE-2010-1152",
    "commit_id": "75cc83685e103bc8ba380a57468c8f04413033f9",
    "added_lines": [
      "static enum test_return test_issue_102(void)",
      "char buffer[4096]",
      "memset(buffer, ' ', sizeof(buffer",
      "buffer[sizeof(buffer) - 1] = '\\0'",
      "close(sock",
      "sock = connect_server(\"127.0.0.1\", port, false",
      "send_ascii_command(buffer",
      "assert(read(sock, buffer, sizeof(buffer)) == 0",
      "close(sock",
      "sock = connect_server(\"127.0.0.1\", port, false",
      "return TEST_PASS",
      "{ \"issue_102\", test_issue_102 },"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2312,
    "id": "CVE-2012-0879",
    "commit_id": "b69f2292063d2caf37ca9aec7d63ded203701bf3",
    "added_lines": [
      "if (p->io_context",
      "exit_io_context(p"
    ],
    "removed_lines": [
      "put_io_context(p->io_context"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle the CLONE_IO feature"
    ]
  },
  {
    "index": 2313,
    "id": "CVE-2012-0207",
    "commit_id": "25c413ad0029ea86008234be28aee33456e53e5b",
    "added_lines": [
      "if (!max_delay",
      "max_delay = 1;"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero error"
    ]
  },
  {
    "index": 2316,
    "id": "CVE-2011-3188",
    "commit_id": "bc0b96b54a21246e377122d54569eef71cec535f",
    "added_lines": [
      "#include <linux/kernel.h>",
      "#include <linux/module.h>",
      "#include <linux/cryptohash.h>",
      "#define F1(x, y, z)\t(z ^ (x & (y ^ z",
      "#define F2(x, y, z)\tF1(z, x, y",
      "#define F3(x, y, z)\t(x ^ y ^ z",
      "#define F4(x, y, z)\t(y ^ (x | ~z",
      "#define MD5STEP(f, w, x, y, z, in, s) \\",
      "(w += f(x, y, z) + in, w = (w<<s | w>>(32-s)) + x",
      "void md5_transform(__u32 *hash, __u32 const *in",
      "u32 a, b, c, d",
      "a = hash[0]",
      "b = hash[1]",
      "c = hash[2]",
      "d = hash[3]",
      "MD5STEP(F1, a, b, c, d, in[0] + 0xd76aa478, 7",
      "MD5STEP(F1, d, a, b, c, in[1] + 0xe8c7b756, 12",
      "MD5STEP(F1, c, d, a, b, in[2] + 0x242070db, 17",
      "MD5STEP(F1, b, c, d, a, in[3] + 0xc1bdceee, 22",
      "MD5STEP(F1, a, b, c, d, in[4] + 0xf57c0faf, 7",
      "MD5STEP(F1, d, a, b, c, in[5] + 0x4787c62a, 12",
      "MD5STEP(F1, c, d, a, b, in[6] + 0xa8304613, 17",
      "MD5STEP(F1, b, c, d, a, in[7] + 0xfd469501, 22",
      "MD5STEP(F1, a, b, c, d, in[8] + 0x698098d8, 7",
      "MD5STEP(F1, d, a, b, c, in[9] + 0x8b44f7af, 12",
      "MD5STEP(F1, c, d, a, b, in[10] + 0xffff5bb1, 17",
      "MD5STEP(F1, b, c, d, a, in[11] + 0x895cd7be, 22",
      "MD5STEP(F1, a, b, c, d, in[12] + 0x6b901122, 7",
      "MD5STEP(F1, d, a, b, c, in[13] + 0xfd987193, 12",
      "MD5STEP(F1, c, d, a, b, in[14] + 0xa679438e, 17",
      "MD5STEP(F1, b, c, d, a, in[15] + 0x49b40821, 22",
      "MD5STEP(F2, a, b, c, d, in[1] + 0xf61e2562, 5",
      "MD5STEP(F2, d, a, b, c, in[6] + 0xc040b340, 9",
      "MD5STEP(F2, c, d, a, b, in[11] + 0x265e5a51, 14",
      "MD5STEP(F2, b, c, d, a, in[0] + 0xe9b6c7aa, 20",
      "MD5STEP(F2, a, b, c, d, in[5] + 0xd62f105d, 5",
      "MD5STEP(F2, d, a, b, c, in[10] + 0x02441453, 9",
      "MD5STEP(F2, c, d, a, b, in[15] + 0xd8a1e681, 14",
      "MD5STEP(F2, b, c, d, a, in[4] + 0xe7d3fbc8, 20",
      "MD5STEP(F2, a, b, c, d, in[9] + 0x21e1cde6, 5",
      "MD5STEP(F2, d, a, b, c, in[14] + 0xc33707d6, 9",
      "MD5STEP(F2, c, d, a, b, in[3] + 0xf4d50d87, 14",
      "MD5STEP(F2, b, c, d, a, in[8] + 0x455a14ed, 20",
      "MD5STEP(F2, a, b, c, d, in[13] + 0xa9e3e905, 5",
      "MD5STEP(F2, d, a, b, c, in[2] + 0xfcefa3f8, 9",
      "MD5STEP(F2, c, d, a, b, in[7] + 0x676f02d9, 14",
      "MD5STEP(F2, b, c, d, a, in[12] + 0x8d2a4c8a, 20",
      "MD5STEP(F3, a, b, c, d, in[5] + 0xfffa3942, 4",
      "MD5STEP(F3, d, a, b, c, in[8] + 0x8771f681, 11",
      "MD5STEP(F3, c, d, a, b, in[11] + 0x6d9d6122, 16",
      "MD5STEP(F3, b, c, d, a, in[14] + 0xfde5380c, 23",
      "MD5STEP(F3, a, b, c, d, in[1] + 0xa4beea44, 4",
      "MD5STEP(F3, d, a, b, c, in[4] + 0x4bdecfa9, 11",
      "MD5STEP(F3, c, d, a, b, in[7] + 0xf6bb4b60, 16",
      "MD5STEP(F3, b, c, d, a, in[10] + 0xbebfbc70, 23",
      "MD5STEP(F3, a, b, c, d, in[13] + 0x289b7ec6, 4",
      "MD5STEP(F3, d, a, b, c, in[0] + 0xeaa127fa, 11",
      "MD5STEP(F3, c, d, a, b, in[3] + 0xd4ef3085, 16",
      "MD5STEP(F3, b, c, d, a, in[6] + 0x04881d05, 23",
      "MD5STEP(F3, a, b, c, d, in[9] + 0xd9d4d039, 4",
      "MD5STEP(F3, d, a, b, c, in[12] + 0xe6db99e5, 11",
      "MD5STEP(F3, c, d, a, b, in[15] + 0x1fa27cf8, 16",
      "MD5STEP(F3, b, c, d, a, in[2] + 0xc4ac5665, 23",
      "MD5STEP(F4, a, b, c, d, in[0] + 0xf4292244, 6",
      "MD5STEP(F4, d, a, b, c, in[7] + 0x432aff97, 10",
      "MD5STEP(F4, c, d, a, b, in[14] + 0xab9423a7, 15",
      "MD5STEP(F4, b, c, d, a, in[5] + 0xfc93a039, 21",
      "MD5STEP(F4, a, b, c, d, in[12] + 0x655b59c3, 6",
      "MD5STEP(F4, d, a, b, c, in[3] + 0x8f0ccc92, 10",
      "MD5STEP(F4, c, d, a, b, in[10] + 0xffeff47d, 15",
      "MD5STEP(F4, b, c, d, a, in[1] + 0x85845dd1, 21",
      "MD5STEP(F4, a, b, c, d, in[8] + 0x6fa87e4f, 6",
      "MD5STEP(F4, d, a, b, c, in[15] + 0xfe2ce6e0, 10",
      "MD5STEP(F4, c, d, a, b, in[6] + 0xa3014314, 15",
      "MD5STEP(F4, b, c, d, a, in[13] + 0x4e0811a1, 21",
      "MD5STEP(F4, a, b, c, d, in[4] + 0xf7537e82, 6",
      "MD5STEP(F4, d, a, b, c, in[11] + 0xbd3af235, 10",
      "MD5STEP(F4, c, d, a, b, in[2] + 0x2ad7d2bb, 15",
      "MD5STEP(F4, b, c, d, a, in[9] + 0xeb86d391, 21",
      "hash[0] += a",
      "hash[1] += b",
      "hash[2] += c",
      "hash[3] += d",
      "EXPORT_SYMBOL(md5_transform"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use a modified MD4 algorithm to generate sequence numbers and Fragment Identification values"
    ]
  },
  {
    "index": 2317,
    "id": "CVE-2013-4592",
    "commit_id": "e40f193f5bb022e927a57a4f5d5194e4f12ddb74",
    "added_lines": [
      "kvm_iommu_unmap_pages(kvm, &old",
      "if (npages)",
      "r = kvm_iommu_map_pages(kvm, &new",
      "if (r",
      "goto out_slots",
      "out_slots:",
      "kfree(slots"
    ],
    "removed_lines": [
      "if (npages)",
      "r = kvm_iommu_map_pages(kvm, &new",
      "if (r",
      "goto out_free",
      "} else",
      "kvm_iommu_unmap_pages(kvm, &old"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.0,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "memory leak"
    ]
  },
  {
    "index": 2318,
    "id": "CVE-2013-4470",
    "commit_id": "c547dbf55d5f8cf615ccc0e7265e98db27d3fb8b",
    "added_lines": [
      "struct frag_hdr fhdr",
      "} else if (skb_is_gso(skb))",
      "goto append",
      "skb->ip_summed = CHECKSUM_PARTIAL",
      "skb_shinfo(skb)->gso_size = (mtu - fragheaderlen -",
      "sizeof(struct frag_hdr)) & ~7",
      "skb_shinfo(skb)->gso_type = SKB_GSO_UDP",
      "ipv6_select_ident(&fhdr, rt",
      "skb_shinfo(skb)->ip6_frag_id = fhdr.identification",
      "append:"
    ],
    "removed_lines": [
      "struct frag_hdr fhdr",
      "skb->ip_summed = CHECKSUM_PARTIAL",
      "skb_shinfo(skb)->gso_size = (mtu - fragheaderlen -",
      "sizeof(struct frag_hdr)) & ~7",
      "skb_shinfo(skb)->gso_type = SKB_GSO_UDP",
      "ipv6_select_ident(&fhdr, rt",
      "skb_shinfo(skb)->ip6_frag_id = fhdr.identification"
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS +Priv Mem. Corr.",
    "score": 6.9,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS +Priv Mem. Corr. ",
    "summary": [
      "does not properly initialize certain data structures,"
    ]
  },
  {
    "index": 2329,
    "id": "CVE-2014-8116",
    "commit_id": "b4c01141e5367f247b84dcaf6aefbb4e741842b8",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.104 2014/10/17 15:49:00 christos Exp $\"",
      "#define MAX_PHNUM\t256",
      "#define\tMAX_SHNUM\t1024",
      "private int",
      "toomany(struct magic_set *ms, const char *name, uint16_t num",
      "if (file_printf(ms, \", too many %s header sections (%u)\", name, num",
      ") == -1",
      "return -1",
      "return 0",
      "return 0",
      "return 0",
      "uint16_t type, phnum, shnum"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: readelf.c,v 1.103 2014/05/02 02:25:10 christos Exp $\"",
      "return offset",
      "return offset",
      "uint16_t type"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2336,
    "id": "CVE-2014-4344",
    "commit_id": "524688ce87a15fc75f87efc8c039ba4c7d5c197b",
    "added_lines": [
      "if (REMAIN == 0 || REMAIN > INT_MAX"
    ],
    "removed_lines": [
      "if (REMAIN > INT_MAX"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2337,
    "id": "CVE-2014-3647",
    "commit_id": "234f3ce485d54017f15cf5e0699cff4100121601",
    "added_lines": [
      "static inline int assign_eip_far(struct x86_emulate_ctxt *ctxt, ulong dst,",
      "int cs_l",
      "if ((cs_l && is_noncanonical_address(dst)) ||",
      "(!cs_l && (dst & ~(u32)-1",
      "return emulate_gp(ctxt, 0",
      "return X86EMUL_CONTINUE",
      "static inline int assign_eip_near(struct x86_emulate_ctxt *ctxt, ulong dst",
      "return assign_eip_far(ctxt, dst, ctxt->mode == X86EMUL_MODE_PROT64",
      "static inline int jmp_rel(struct x86_emulate_ctxt *ctxt, int rel",
      "return assign_eip_near(ctxt, ctxt->_eip + rel",
      "rc = assign_eip_near(ctxt, ctxt->src.val",
      "if (rc != X86EMUL_CONTINUE",
      "break",
      "rc = assign_eip_near(ctxt, ctxt->src.val",
      "int rc",
      "unsigned long eip",
      "rc = emulate_pop(ctxt, &eip, ctxt->op_bytes",
      "if (rc != X86EMUL_CONTINUE",
      "return rc",
      "return assign_eip_near(ctxt, eip",
      "u64 msr_data, rcx, rdx",
      "rcx = reg_read(ctxt, VCPU_REGS_RCX",
      "rdx = reg_read(ctxt, VCPU_REGS_RDX",
      "if (is_noncanonical_address(rcx) ||",
      "is_noncanonical_address(rdx",
      "return emulate_gp(ctxt, 0",
      "ctxt->_eip = rdx",
      "int rc",
      "rc = jmp_rel(ctxt, rel",
      "if (rc != X86EMUL_CONTINUE",
      "return rc",
      "unsigned long eip",
      "rc = emulate_pop(ctxt, &eip, ctxt->op_bytes",
      "if (rc != X86EMUL_CONTINUE",
      "return rc",
      "rc = assign_eip_near(ctxt, eip",
      "int rc = X86EMUL_CONTINUE",
      "rc = jmp_rel(ctxt, ctxt->src.val",
      "return rc",
      "int rc = X86EMUL_CONTINUE",
      "rc = jmp_rel(ctxt, ctxt->src.val",
      "return rc",
      "rc = jmp_rel(ctxt, ctxt->src.val",
      "rc = jmp_rel(ctxt, ctxt->src.val",
      "rc = jmp_rel(ctxt, ctxt->src.val"
    ],
    "removed_lines": [
      "static inline void assign_eip_near(struct x86_emulate_ctxt *ctxt, ulong dst",
      "static inline void jmp_rel(struct x86_emulate_ctxt *ctxt, int rel",
      "assign_eip_near(ctxt, ctxt->_eip + rel",
      "ctxt->_eip = ctxt->src.val",
      "ctxt->_eip = ctxt->src.val",
      "ctxt->dst.type = OP_REG",
      "ctxt->dst.addr.reg = &ctxt->_eip",
      "ctxt->dst.bytes = ctxt->op_bytes",
      "return em_pop(ctxt",
      "u64 msr_data",
      "ctxt->_eip = reg_read(ctxt, VCPU_REGS_RDX",
      "jmp_rel(ctxt, rel",
      "ctxt->dst.type = OP_REG",
      "ctxt->dst.addr.reg = &ctxt->_eip",
      "ctxt->dst.bytes = ctxt->op_bytes",
      "rc = emulate_pop(ctxt, &ctxt->dst.val, ctxt->op_bytes",
      "jmp_rel(ctxt, ctxt->src.val",
      "return X86EMUL_CONTINUE",
      "jmp_rel(ctxt, ctxt->src.val",
      "return X86EMUL_CONTINUE",
      "jmp_rel(ctxt, ctxt->src.val",
      "jmp_rel(ctxt, ctxt->src.val",
      "jmp_rel(ctxt, ctxt->src.val"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform RIP changes"
    ]
  },
  {
    "index": 2339,
    "id": "CVE-2014-3538",
    "commit_id": "69a5a43b3b71f53b0577f41264a073f495799610",
    "added_lines": [
      "2014-05-30  12:51  Christos Zoulas <christos@zoulas.com>",
      "regex search."
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict the amount of data read during a regex search"
    ]
  },
  {
    "index": 2340,
    "id": "CVE-2014-3538",
    "commit_id": "71a8b6c0d758acb0f73e2e51421a711b5e9d6668",
    "added_lines": [
      "# $File: commands,v 1.49 2014/05/28 19:52:36 christos Exp $",
      "0\tregex/4096\t=^\\\\s{0,100}BEGIN\\\\s{0,100}[{]\tawk script text"
    ],
    "removed_lines": [
      "# $File: commands,v 1.48 2014/03/04 12:20:42 kim Exp $",
      "0       search/16384    BEGIN",
      ">0\tregex\t\t=^\\\\s{0,100}BEGIN\\\\s{0,100}[{]\tawk script text"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict the amount of data read during a regex search"
    ]
  },
  {
    "index": 2341,
    "id": "CVE-2014-3538",
    "commit_id": "74cafd7de9ec99a14f4480927580e501c8f852c3",
    "added_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.188 2014/05/14 23:15:42 christos Exp $\"",
      "#ifndef REG_STARTEND",
      "char c",
      "#endif",
      "size_t slen = ms->search.s_len",
      "if (m->str_range > 0",
      "slen = MIN(slen, m->str_range",
      "if (slen != 0",
      "slen--",
      "c = ms->search.s[slen]",
      "((char *)(intptr_t)ms->search.s)[slen] = '\\0'",
      "pmatch[0].rm_eo = slen"
    ],
    "removed_lines": [
      "FILE_RCSID(\"@(#)$File: softmagic.c,v 1.187 2014/05/13 16:42:17 christos Exp $\"",
      "size_t l = ms->search.s_len - 1",
      "char c = ms->search.s[l]",
      "((char *)(intptr_t)ms->search.s)[l] = '\\0'",
      "pmatch[0].rm_eo = ms->search.s_len"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict the amount of data read during a regex search"
    ]
  },
  {
    "index": 2342,
    "id": "CVE-2014-3538",
    "commit_id": "758e066df72fb1ac08d2eea91ddc3973d259e991",
    "added_lines": [
      ".\\\" $File: magic.man,v 1.81 2014/03/08 17:28:08 christos Exp $",
      ".Dd May 30, 2014",
      "The size of the string to search should also be limited by specifying",
      ".Dv /<length> ,",
      "to avoid performance issues scanning long files.",
      "The type specification can also be optionally followed by"
    ],
    "removed_lines": [
      ".\\\" $File: magic.man,v 1.80 2014/03/07 23:11:16 christos Exp $",
      ".Dd April 22, 2013",
      "The type specification can be optionally followed by"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly restrict the amount of data read during a regex search"
    ]
  },
  {
    "index": 2344,
    "id": "CVE-2015-7872",
    "commit_id": "f05819df10d7b09f6d1eb6f8534a8f68e5a4fe61",
    "added_lines": [
      "if (test_bit(KEY_FLAG_INSTANTIATED, &key->flags) &&",
      "!test_bit(KEY_FLAG_NEGATIVE, &key->flags) &&",
      "key->type->destroy"
    ],
    "removed_lines": [
      "if (key->type->destroy"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2349,
    "id": "CVE-2015-1805",
    "commit_id": "637b58c2887e5e57850865839cc75f59184b23d1",
    "added_lines": [
      "struct iov_iter iter",
      "iov_iter_init(&iter, iov, nr_segs, total_len, 0",
      "size_t written",
      "int error",
      "written = copy_page_to_iter(buf->page, buf->offset, chars, &iter",
      "if (unlikely(written < chars))",
      "ret = -EFAULT"
    ],
    "removed_lines": [
      "static int",
      "pipe_iov_copy_to_user(struct iovec *iov, const void *from, unsigned long len,",
      "int atomic",
      "unsigned long copy",
      "while (len > 0)",
      "while (!iov->iov_len",
      "iov++",
      "copy = min_t(unsigned long, len, iov->iov_len",
      "if (atomic)",
      "if (__copy_to_user_inatomic(iov->iov_base, from, copy",
      "return -EFAULT",
      "} else",
      "if (copy_to_user(iov->iov_base, from, copy",
      "return -EFAULT",
      "from += copy",
      "len -= copy",
      "iov->iov_base += copy",
      "iov->iov_len -= copy",
      "return 0",
      "static int iov_fault_in_pages_write(struct iovec *iov, unsigned long len",
      "while (!iov->iov_len",
      "iov++",
      "while (len > 0)",
      "unsigned long this_len",
      "this_len = min_t(unsigned long, len, iov->iov_len",
      "if (fault_in_pages_writeable(iov->iov_base, this_len",
      "break",
      "len -= this_len",
      "iov++",
      "return len",
      "void *addr",
      "int error, atomic",
      "atomic = !iov_fault_in_pages_write(iov, chars",
      "redo:",
      "if (atomic",
      "addr = kmap_atomic(buf->page",
      "else",
      "addr = kmap(buf->page",
      "error = pipe_iov_copy_to_user(iov, addr + buf->offset, chars, atomic",
      "if (atomic",
      "kunmap_atomic(addr",
      "else",
      "kunmap(buf->page",
      "if (unlikely(error))",
      "if (atomic)",
      "atomic = 0",
      "goto redo",
      "ret = error"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS +Priv",
    "score": 7.2,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS +Priv ",
    "summary": [
      "do not properly consider the side effects of failed __copy_to_user_inatomic and __copy_from_user_inatomic calls"
    ]
  },
  {
    "index": 2353,
    "id": "CVE-2014-3571",
    "commit_id": "feba02f3919495e1b960c33ba849e10e77d0785d",
    "added_lines": [
      "if (left == 0 && extend",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2357,
    "id": "CVE-2016-6905",
    "commit_id": "3c2b605d72e8b080dace1d98a6e50b46c1d12186",
    "added_lines": [
      "if (encoded_pixels != 0)",
      "if (!((buffer_caret + (encoded_pixels * pixel_block_size)) < image_block_size))",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "for (i = 0; i < encoded_pixels; i++)",
      "for (j = 0; j < pixel_block_size; j++, bitmap_caret++)",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "if (encoded_pixels != 0)",
      "if (!((buffer_caret + (encoded_pixels * pixel_block_size)) < image_block_size))",
      "gdFree( decompression_buffer",
      "gdFree( conversion_buffer",
      "return -1",
      "for (i = 0; i < encoded_pixels; i++)",
      "for( j = 0; j < pixel_block_size; j++, bitmap_caret++ )",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "buffer_caret += pixel_block_size"
    ],
    "removed_lines": [
      "for (i = 0; i < encoded_pixels; i++)",
      "for (j = 0; j < pixel_block_size; j++, bitmap_caret++)",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "for (i = 0; i < encoded_pixels; i++)",
      "for( j = 0; j < pixel_block_size; j++, bitmap_caret++ )",
      "tga->bitmap[ bitmap_caret ] = decompression_buffer[ buffer_caret + j ]",
      "buffer_caret += pixel_block_size"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2359,
    "id": "CVE-2016-6198",
    "commit_id": "54d5ca871e72f2bb172ec9323497f01cd5091ec7",
    "added_lines": [
      "static inline struct inode *vfs_select_inode(struct dentry *dentry,",
      "unsigned open_flags",
      "struct inode *inode = d_inode(dentry",
      "if (inode && unlikely(dentry->d_flags & DCACHE_OP_SELECT_INODE",
      "inode = dentry->d_op->d_select_inode(dentry, open_flags",
      "return inode"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "proceeds with post-rename operations after an OverlayFS file is renamed to a self-hardlink"
    ]
  },
  {
    "index": 2360,
    "id": "CVE-2016-6128",
    "commit_id": "1ccfe21e14c4d18336f9da8515cd17db88c3de61",
    "added_lines": [
      "include gdimagecrop/Makemodule.am"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2364,
    "id": "CVE-2016-5412",
    "commit_id": "f024ee098476a3e620232e4a78cfac505f121245",
    "added_lines": [
      "bl\tkvmppc_restore_tm",
      "END_FTR_SECTION_IFSET(CPU_FTR_TM",
      "bl\tkvmppc_save_tm",
      "END_FTR_SECTION_IFSET(CPU_FTR_TM",
      "#ifdef CONFIG_PPC_TRANSACTIONAL_MEM",
      "kvmppc_save_tm:",
      "mflr\tr0",
      "std\tr0, PPC_LR_STKOFF(r1",
      "mfmsr\tr8",
      "li\tr0, 1",
      "rldimi\tr8, r0, MSR_TM_LG, 63-MSR_TM_LG",
      "mtmsrd\tr8",
      "ld\tr5, VCPU_MSR(r9",
      "rldicl. r5, r5, 64 - MSR_TS_S_LG, 62",
      "beq\t1f",
      "std\tr1, HSTATE_HOST_R1(r13",
      "li\tr3, TM_CAUSE_KVM_RESCHED",
      "li\tr5, 0",
      "mtmsrd\tr5, 1",
      "TRECLAIM(R3",
      "SET_SCRATCH0(r13",
      "GET_PACA(r13",
      "std\tr9, PACATMSCRATCH(r13",
      "ld\tr9, HSTATE_KVM_VCPU(r13",
      "std\tr29, VCPU_GPRS_TM(29)(r9",
      "std\tr30, VCPU_GPRS_TM(30)(r9",
      "std\tr31, VCPU_GPRS_TM(31)(r9",
      "mfspr\tr31, SPRN_PPR",
      "HMT_MEDIUM",
      "mfspr\tr30, SPRN_DSCR",
      "ld\tr29, HSTATE_DSCR(r13",
      "mtspr\tSPRN_DSCR, r29",
      "reg = 0",
      ".rept\t29",
      ".if (reg != 9) && (reg != 13",
      "std\treg, VCPU_GPRS_TM(reg)(r9",
      ".endif",
      "reg = reg + 1",
      ".endr",
      "GET_SCRATCH0(r4",
      "std\tr4, VCPU_GPRS_TM(13)(r9",
      "ld\tr4, PACATMSCRATCH(r13",
      "std\tr4, VCPU_GPRS_TM(9)(r9",
      "ld\tr1, HSTATE_HOST_R1(r13",
      "ld\tr2, PACATOC(r13",
      "li\tr5, MSR_RI",
      "mtmsrd\tr5, 1",
      "std\tr31, VCPU_PPR_TM(r9",
      "std\tr30, VCPU_DSCR_TM(r9",
      "mflr\tr5",
      "mfcr\tr6",
      "mfctr\tr7",
      "mfspr\tr8, SPRN_AMR",
      "mfspr\tr10, SPRN_TAR",
      "std\tr5, VCPU_LR_TM(r9",
      "stw\tr6, VCPU_CR_TM(r9",
      "std\tr7, VCPU_CTR_TM(r9",
      "std\tr8, VCPU_AMR_TM(r9",
      "std\tr10, VCPU_TAR_TM(r9",
      "lwz\tr12, VCPU_TRAP(r9",
      "addi\tr3, r9, VCPU_FPRS_TM",
      "bl\tstore_fp_state",
      "addi\tr3, r9, VCPU_VRS_TM",
      "bl\tstore_vr_state",
      "mfspr\tr6, SPRN_VRSAVE",
      "stw\tr6, VCPU_VRSAVE_TM(r9",
      "1:",
      "mfspr\tr5, SPRN_TFHAR",
      "mfspr\tr6, SPRN_TFIAR",
      "mfspr\tr7, SPRN_TEXASR",
      "std\tr5, VCPU_TFHAR(r9",
      "std\tr6, VCPU_TFIAR(r9",
      "std\tr7, VCPU_TEXASR(r9",
      "ld\tr0, PPC_LR_STKOFF(r1",
      "mtlr\tr0",
      "blr",
      "kvmppc_restore_tm:",
      "mflr\tr0",
      "std\tr0, PPC_LR_STKOFF(r1",
      "mfmsr\tr5",
      "li\tr6, MSR_TM >> 32",
      "sldi\tr6, r6, 32",
      "or\tr5, r5, r6",
      "ori\tr5, r5, MSR_FP",
      "oris\tr5, r5, (MSR_VEC | MSR_VSX)@h",
      "mtmsrd\tr5",
      "ld\tr5, VCPU_TFHAR(r4",
      "ld\tr6, VCPU_TFIAR(r4",
      "ld\tr7, VCPU_TEXASR(r4",
      "mtspr\tSPRN_TFHAR, r5",
      "mtspr\tSPRN_TFIAR, r6",
      "mtspr\tSPRN_TEXASR, r7",
      "ld\tr5, VCPU_MSR(r4",
      "rldicl. r5, r5, 64 - MSR_TS_S_LG, 62",
      "beqlr",
      "std\tr1, HSTATE_HOST_R1(r13",
      "oris\tr7, r7, (TEXASR_FS)@h",
      "mtspr\tSPRN_TEXASR, r7",
      "mr\tr31, r4",
      "addi\tr3, r31, VCPU_FPRS_TM",
      "bl\tload_fp_state",
      "addi\tr3, r31, VCPU_VRS_TM",
      "bl\tload_vr_state",
      "mr\tr4, r31",
      "lwz\tr7, VCPU_VRSAVE_TM(r4",
      "mtspr\tSPRN_VRSAVE, r7",
      "ld\tr5, VCPU_LR_TM(r4",
      "lwz\tr6, VCPU_CR_TM(r4",
      "ld\tr7, VCPU_CTR_TM(r4",
      "ld\tr8, VCPU_AMR_TM(r4",
      "ld\tr9, VCPU_TAR_TM(r4",
      "mtlr\tr5",
      "mtcr\tr6",
      "mtctr\tr7",
      "mtspr\tSPRN_AMR, r8",
      "mtspr\tSPRN_TAR, r9",
      "ld\tr29, VCPU_DSCR_TM(r4",
      "ld\tr30, VCPU_PPR_TM(r4",
      "std\tr2, PACATMSCRATCH(r13)",
      "li\tr5, 0",
      "mtmsrd\tr5, 1",
      "reg = 0",
      ".rept\t29",
      "ld\treg, VCPU_GPRS_TM(reg)(r31",
      "reg = reg + 1",
      ".endr",
      "mtspr\tSPRN_DSCR, r29",
      "mtspr\tSPRN_PPR, r30",
      "ld\t29, VCPU_GPRS_TM(29)(r31",
      "ld\t30, VCPU_GPRS_TM(30)(r31",
      "ld\t31, VCPU_GPRS_TM(31)(r31",
      "TRECHKPT",
      "HMT_MEDIUM",
      "GET_PACA(r13",
      "ld\tr29, HSTATE_DSCR(r13",
      "mtspr\tSPRN_DSCR, r29",
      "ld\tr4, HSTATE_KVM_VCPU(r13",
      "ld\tr1, HSTATE_HOST_R1(r13",
      "ld\tr2, PACATMSCRATCH(r13",
      "li\tr5, MSR_RI",
      "mtmsrd\tr5, 1",
      "ld\tr0, PPC_LR_STKOFF(r1",
      "mtlr\tr0",
      "blr",
      "#endif"
    ],
    "removed_lines": [
      "b\tskip_tm",
      "END_FTR_SECTION_IFCLR(CPU_FTR_TM",
      "mfmsr\tr5",
      "li\tr6, MSR_TM >> 32",
      "sldi\tr6, r6, 32",
      "or\tr5, r5, r6",
      "ori\tr5, r5, MSR_FP",
      "oris\tr5, r5, (MSR_VEC | MSR_VSX)@h",
      "mtmsrd\tr5",
      "ld\tr5, VCPU_TFHAR(r4",
      "ld\tr6, VCPU_TFIAR(r4",
      "ld\tr7, VCPU_TEXASR(r4",
      "mtspr\tSPRN_TFHAR, r5",
      "mtspr\tSPRN_TFIAR, r6",
      "mtspr\tSPRN_TEXASR, r7",
      "ld\tr5, VCPU_MSR(r4",
      "rldicl. r5, r5, 64 - MSR_TS_S_LG, 62",
      "beq\tskip_tm",
      "oris\tr7, r7, (TEXASR_FS)@h",
      "mtspr\tSPRN_TEXASR, r7",
      "mr\tr31, r4",
      "addi\tr3, r31, VCPU_FPRS_TM",
      "bl\tload_fp_state",
      "addi\tr3, r31, VCPU_VRS_TM",
      "bl\tload_vr_state",
      "mr\tr4, r31",
      "lwz\tr7, VCPU_VRSAVE_TM(r4",
      "mtspr\tSPRN_VRSAVE, r7",
      "ld\tr5, VCPU_LR_TM(r4",
      "lwz\tr6, VCPU_CR_TM(r4",
      "ld\tr7, VCPU_CTR_TM(r4",
      "ld\tr8, VCPU_AMR_TM(r4",
      "ld\tr9, VCPU_TAR_TM(r4",
      "mtlr\tr5",
      "mtcr\tr6",
      "mtctr\tr7",
      "mtspr\tSPRN_AMR, r8",
      "mtspr\tSPRN_TAR, r9",
      "ld\tr29, VCPU_DSCR_TM(r4",
      "ld\tr30, VCPU_PPR_TM(r4",
      "std\tr2, PACATMSCRATCH(r13)",
      "li\tr5, 0",
      "mtmsrd\tr5, 1",
      "reg = 0",
      ".rept\t29",
      "ld\treg, VCPU_GPRS_TM(reg)(r31",
      "reg = reg + 1",
      ".endr",
      "mtspr\tSPRN_DSCR, r29",
      "mtspr\tSPRN_PPR, r30",
      "ld\t29, VCPU_GPRS_TM(29)(r31",
      "ld\t30, VCPU_GPRS_TM(30)(r31",
      "ld\t31, VCPU_GPRS_TM(31)(r31",
      "TRECHKPT",
      "HMT_MEDIUM",
      "GET_PACA(r13",
      "ld\tr29, HSTATE_DSCR(r13",
      "mtspr\tSPRN_DSCR, r29",
      "ld\tr4, HSTATE_KVM_VCPU(r13",
      "ld\tr1, HSTATE_HOST_R1(r13",
      "ld\tr2, PACATMSCRATCH(r13",
      "li\tr5, MSR_RI",
      "mtmsrd\tr5, 1",
      "skip_tm:",
      "mfmsr\tr8",
      "li\tr0, 1",
      "rldimi\tr8, r0, MSR_TM_LG, 63-MSR_TM_LG",
      "mtmsrd\tr8",
      "b\t2f",
      "END_FTR_SECTION_IFCLR(CPU_FTR_TM",
      "mfmsr\tr8",
      "li\tr0, 1",
      "rldimi\tr8, r0, MSR_TM_LG, 63-MSR_TM_LG",
      "mtmsrd\tr8",
      "ld\tr5, VCPU_MSR(r9",
      "rldicl. r5, r5, 64 - MSR_TS_S_LG, 62",
      "beq\t1f",
      "li\tr3, TM_CAUSE_KVM_RESCHED",
      "li\tr5, 0",
      "mtmsrd\tr5, 1",
      "TRECLAIM(R3",
      "SET_SCRATCH0(r13",
      "GET_PACA(r13",
      "std\tr9, PACATMSCRATCH(r13",
      "ld\tr9, HSTATE_KVM_VCPU(r13",
      "std\tr29, VCPU_GPRS_TM(29)(r9",
      "std\tr30, VCPU_GPRS_TM(30)(r9",
      "std\tr31, VCPU_GPRS_TM(31)(r9",
      "mfspr\tr31, SPRN_PPR",
      "HMT_MEDIUM",
      "mfspr\tr30, SPRN_DSCR",
      "ld\tr29, HSTATE_DSCR(r13",
      "mtspr\tSPRN_DSCR, r29",
      "reg = 0",
      ".rept\t29",
      ".if (reg != 9) && (reg != 13",
      "std\treg, VCPU_GPRS_TM(reg)(r9",
      ".endif",
      "reg = reg + 1",
      ".endr",
      "GET_SCRATCH0(r4",
      "std\tr4, VCPU_GPRS_TM(13)(r9",
      "ld\tr4, PACATMSCRATCH(r13",
      "std\tr4, VCPU_GPRS_TM(9)(r9",
      "ld\tr1, HSTATE_HOST_R1(r13",
      "ld\tr2, PACATOC(r13",
      "li\tr5, MSR_RI",
      "mtmsrd\tr5, 1",
      "std\tr31, VCPU_PPR_TM(r9",
      "std\tr30, VCPU_DSCR_TM(r9",
      "mflr\tr5",
      "mfcr\tr6",
      "mfctr\tr7",
      "mfspr\tr8, SPRN_AMR",
      "mfspr\tr10, SPRN_TAR",
      "std\tr5, VCPU_LR_TM(r9",
      "stw\tr6, VCPU_CR_TM(r9",
      "std\tr7, VCPU_CTR_TM(r9",
      "std\tr8, VCPU_AMR_TM(r9",
      "std\tr10, VCPU_TAR_TM(r9",
      "lwz\tr12, VCPU_TRAP(r9",
      "addi\tr3, r9, VCPU_FPRS_TM",
      "bl\tstore_fp_state",
      "addi\tr3, r9, VCPU_VRS_TM",
      "bl\tstore_vr_state",
      "mfspr\tr6, SPRN_VRSAVE",
      "stw\tr6, VCPU_VRSAVE_TM(r9",
      "1:",
      "mfspr\tr5, SPRN_TFHAR",
      "mfspr\tr6, SPRN_TFIAR",
      "mfspr\tr7, SPRN_TEXASR",
      "std\tr5, VCPU_TFHAR(r9",
      "std\tr6, VCPU_TFIAR(r9",
      "std\tr7, VCPU_TEXASR(r9",
      "2:"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.6,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 2365,
    "id": "CVE-2016-5357",
    "commit_id": "11edc83b98a61e890d7bb01855389d40e984ea82",
    "added_lines": [
      "int\t\tpkt_len",
      "int\t\toffset = 0",
      "if (sscanf(line, \"%9d.%9d: %15[a-z0-9/:.-](%1[io]) len=%9d:%12s->%12s/\",",
      "if (pkt_len < 0)",
      "return FALSE"
    ],
    "removed_lines": [
      "guint\t\tpkt_len",
      "guint\t\toffset = 0",
      "if (sscanf(line, \"%9d.%9d: %15[a-z0-9/:.-](%1[io]) len=%9u:%12s->%12s/\","
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles sscanf unsigned-integer processing"
    ]
  },
  {
    "index": 2367,
    "id": "CVE-2016-5355",
    "commit_id": "5efb45231671baa2db2011d8f67f9d6e72bc455b",
    "added_lines": [
      "guint\tpkt_len",
      "int\tpktnum, hr, min, sec, csec",
      "num_items_scanned = sscanf(line+64, \"LEN=%9u\", &pkt_len",
      "if (pkt_len > WTAP_MAX_PACKET_SIZE)",
      "pkt_len, WTAP_MAX_PACKET_SIZE",
      "return FALSE",
      "ws_buffer_assure_space(buf, pkt_len"
    ],
    "removed_lines": [
      "#define TOSHIBA_MAX_PACKET_LEN\t16384",
      "int\tpkt_len, pktnum, hr, min, sec, csec",
      "num_items_scanned = sscanf(line+64, \"LEN=%9d\", &pkt_len",
      "ws_buffer_assure_space(buf, TOSHIBA_MAX_PACKET_LEN"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles sscanf unsigned-integer processing"
    ]
  },
  {
    "index": 2370,
    "id": "CVE-2016-3951",
    "commit_id": "1666984c8625b3db19a9abc298931d35ab7bc64b",
    "added_lines": [
      "cancel_work_sync(&dev->kevent",
      "del_timer_sync(&dev->delay"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 2371,
    "id": "CVE-2016-3698",
    "commit_id": "2af9a55b38b55abbf05fd116ec097d4029115839",
    "added_lines": [
      "bool (*addrto_validate)(struct in6_addr *addr",
      "static bool ndp_msg_addrto_validate_link_local(struct in6_addr *addr",
      "return IN6_IS_ADDR_LINKLOCAL (addr",
      ".addrto_validate = ndp_msg_addrto_validate_link_local,",
      ".addrto_validate = ndp_msg_addrto_validate_link_local,",
      "if (ndp_msg_type_info(msg_type)->addrto_validate",
      "return ndp_msg_type_info(msg_type)->addrto_validate(&msg->addrto",
      "else",
      "return true"
    ],
    "removed_lines": [
      "return true"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly validate the origin of Neighbor Discovery Protocol (NDP) messages"
    ]
  },
  {
    "index": 2375,
    "id": "CVE-2015-8952",
    "commit_id": "be0726d33cb8f411945884664924bed3cb8c70ee",
    "added_lines": [
      "struct mb2_cache",
      "extern struct mb2_cache *ext2_xattr_create_cache(void",
      "extern void ext2_xattr_destroy_cache(struct mb2_cache *cache",
      "static inline void ext2_xattr_destroy_cache(struct mb2_cache *cache"
    ],
    "removed_lines": [
      "extern void ext2_xattr_put_super(struct super_block *",
      "extern int init_ext2_xattr(void",
      "extern void exit_ext2_xattr(void",
      "static inline void",
      "ext2_xattr_put_super(struct super_block *sb",
      "static inline int",
      "init_ext2_xattr(void",
      "return 0",
      "static inline void",
      "exit_ext2_xattr(void"
    ],
    "cause": [
      "Parsing or Interpretation Errors",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles xattr block caching",
      "soft lockup"
    ]
  },
  {
    "index": 2376,
    "id": "CVE-2015-8952",
    "commit_id": "82939d7999dfc1f1998c4b1c12e2f19edbdff272",
    "added_lines": [
      "extern struct mb2_cache *ext4_xattr_create_cache(void",
      "extern void ext4_xattr_destroy_cache(struct mb2_cache *"
    ],
    "removed_lines": [
      "extern void ext4_xattr_put_super(struct super_block *",
      "extern struct mb_cache *ext4_xattr_create_cache(char *name",
      "extern void ext4_xattr_destroy_cache(struct mb_cache *"
    ],
    "cause": [
      "Parsing or Interpretation Errors",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "mishandles xattr block caching",
      "soft lockup"
    ]
  },
  {
    "index": 2379,
    "id": "CVE-2013-7456",
    "commit_id": "7a1aac3343af85b4af4df5f8844946eaa27394ab?w=1",
    "added_lines": [
      "--TEST--",
      "Bug #72227: imagescale out-of-bounds read",
      "--SKIPIF--",
      "<?php",
      "if (!extension_loaded('gd')) die(\"skip gd extension not available\\n\"",
      "?>",
      "--FILE--",
      "<?php",
      "$img = imagecreatetruecolor ( 100, 100",
      "imagescale($img, 13, 1, IMG_BICUBIC",
      "?>",
      "DONE",
      "--EXPECT--",
      "DONE"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2381,
    "id": "CVE-2017-1000252",
    "commit_id": "3a8b0677fc6180a467e26cc32ce6b0c09a32f9bb",
    "added_lines": [
      "int idx, ret = 0",
      "if (guest_irq >= irq_rt->nr_rt_entries ||",
      "hlist_empty(&irq_rt->map[guest_irq]))",
      "pr_warn_once(\"no route for guest_irq %u/%u (broken user space?)\\n\",",
      "guest_irq, irq_rt->nr_rt_entries",
      "goto out"
    ],
    "removed_lines": [
      "int idx, ret = -EINVAL",
      "BUG_ON(guest_irq >= irq_rt->nr_rt_entries"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 2.1,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 2386,
    "id": "CVE-2017-16525",
    "commit_id": "bd998c2e0df0469707503023d50d46cf0b10c787",
    "added_lines": [
      "if (serial->port[0] && serial->port[0] == usbcons_info.port)"
    ],
    "removed_lines": [
      "if (serial->port[0] == usbcons_info.port)"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 2412,
    "id": "CVE-2017-11523",
    "commit_id": "83e0f8ffd7eeb7661b0ff83257da23d24ca7f078",
    "added_lines": [
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "infinite loop"
    ]
  },
  {
    "index": 2414,
    "id": "CVE-2017-11449",
    "commit_id": "529ff26b68febb2ac03062c58452ea0b4c6edbc1",
    "added_lines": [],
    "removed_lines": [
      "entry->seekable_stream=MagickTrue"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not enable seekable streams and thus cannot validate blob sizes"
    ]
  },
  {
    "index": 2415,
    "id": "CVE-2017-11142",
    "commit_id": "a15bffd105ac28fd0dd9b596632dbf035238fda3",
    "added_lines": [
      "size_t already_scanned",
      "char *start, *ksep, *vsep, *val",
      "start = var->ptr + var->already_scanned",
      "vsep = memchr(start, '&', var->end - start",
      "var->already_scanned = var->end - var->ptr",
      "var->already_scanned = 0"
    ],
    "removed_lines": [
      "char *ksep, *vsep, *val",
      "vsep = memchr(var->ptr, '&', var->end - var->ptr"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "by injecting long form variables"
    ]
  },
  {
    "index": 2419,
    "id": "CVE-2017-9608",
    "commit_id": "611b35627488a8d0763e75c25ee0875c5b7987dd",
    "added_lines": [
      "int remaining",
      "remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (remaining <= 0)",
      "remaining = ff_dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (remaining <= 0",
      "continue",
      "dctx->remaining = remaining"
    ],
    "removed_lines": [
      "dctx->remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (dctx->remaining <= 0)",
      "dctx->remaining = ff_dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (dctx->remaining <= 0",
      "return dctx->remaining"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2420,
    "id": "CVE-2017-9608",
    "commit_id": "0a709e2a10b8288a0cc383547924ecfe285cef89",
    "added_lines": [
      "int remaining",
      "remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (remaining <= 0)",
      "remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (remaining <= 0",
      "continue",
      "dctx->remaining = remaining"
    ],
    "removed_lines": [
      "dctx->remaining = avpriv_dnxhd_get_frame_size(cid",
      "if (dctx->remaining <= 0)",
      "dctx->remaining = dnxhd_get_hr_frame_size(cid, dctx->w, dctx->h",
      "if (dctx->remaining <= 0",
      "return dctx->remaining"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2421,
    "id": "CVE-2017-9250",
    "commit_id": "e58f2880df608652aff7fd35c45b242467ec0e79",
    "added_lines": [
      "'\\",
      "'"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2427,
    "id": "CVE-2017-7277",
    "commit_id": "4ef1b2869447411ad3ef91ad7d4891a83c1a509a",
    "added_lines": [
      "SKB_EXT_ERR(skb)->opt_stats"
    ],
    "removed_lines": [
      "(sk->sk_tsflags & SOF_TIMESTAMPING_OPT_STATS"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 6.6,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2428,
    "id": "CVE-2017-7185",
    "commit_id": "b8402ed0733e3f244588b61ad5fedd093e3cf9cc",
    "added_lines": [
      "if (pd->mp_stream.boundary == NULL)",
      "pd->mp_stream.state = MPS_FINALIZE",
      "DBG((\"Invalid request: boundary not initilaized\"",
      "return 0"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 2429,
    "id": "CVE-2017-7184",
    "commit_id": "677e806da4d916052585301785d847c3b3e6186a",
    "added_lines": [
      "if (up->replay_window > up->bmp_len * sizeof(__u32) * 8",
      "return -EINVAL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.2,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds access",
      "out-of-bounds",
      "leveraging the CAP_NET_ADMIN capability"
    ]
  },
  {
    "index": 2443,
    "id": "CVE-2016-10129",
    "commit_id": "84d30d569ada986f3eef527cbdb932643c2dd037",
    "added_lines": [],
    "removed_lines": [
      "if (pkt == NULL",
      "continue",
      "if (pkt == NULL",
      "continue"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2446,
    "id": "CVE-2016-7530",
    "commit_id": "63346f34f9d19179599b5b256e5e8d3dda46435c",
    "added_lines": [
      "( appended.signature() != \"f3590c183018757da798613a23505ab9600b35935988eee12f096cb6219f2bc3\" ) &&"
    ],
    "removed_lines": [
      "( appended.signature() != \"0909f7ffa7c6ea410fb2ebfdbcb19d61b19c4bd271851ce3bd51662519dc2b58\" ) &&"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "divide-by-zero error",
      "out-of-bounds write"
    ]
  },
  {
    "index": 2447,
    "id": "CVE-2016-7530",
    "commit_id": "b5ed738f8060266bf4ae521f7e3ed145aa4498a3",
    "added_lines": [
      "if ((image->columns != 0) && (quantum != (extent/image->columns"
    ],
    "removed_lines": [
      "if (quantum != (extent/image->columns"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "divide-by-zero error",
      "out-of-bounds write"
    ]
  },
  {
    "index": 2448,
    "id": "CVE-2016-7526",
    "commit_id": "d9b2209a69ee90d8df81fb124eb66f593eb9f599",
    "added_lines": [
      "for (x=0; x < ((ssize_t) image->columns-3); x+=4",
      "p++",
      "if ((image->columns % 4) > 1",
      "if ((image->columns % 4) > 2",
      "image->columns=image->rows=1",
      "BImgBuff=(unsigned char *) RelinquishMagickMemory(BImgBuff"
    ],
    "removed_lines": [
      "for (x=0; x < ((ssize_t) image->columns-1); x+=4",
      "p++",
      "if ((image->columns % 4) >= 1",
      "if ((image->columns % 4) >= 2",
      "image->columns=image->rows=0",
      "BImgBuff=(unsigned char *) RelinquishMagickMemory(BImgBuff"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 2449,
    "id": "CVE-2016-7514",
    "commit_id": "198fffab4daf8aea88badd9c629350e5b26ec32f",
    "added_lines": [
      "if ((image->depth == 1) && (image->storage_class != PseudoClass",
      "ThrowReaderException(CorruptImageError, \"ImproperImageHeader\""
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2450,
    "id": "CVE-2016-7514",
    "commit_id": "280215b9936d145dd5ee91403738ccce1333cab1",
    "added_lines": [
      "static inline void SetPSDPixel(Image *image,const size_t channels,",
      "const ssize_t type,const size_t packet_size,const Quantum pixel,Quantum *q,",
      "ExceptionInfo *exception",
      "if (image->storage_class == PseudoClass",
      "if (packet_size == 1",
      "SetPixelIndex(image,ScaleQuantumToChar(pixel),q",
      "else",
      "SetPixelIndex(image,ScaleQuantumToShort(pixel),q",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t",
      "ConstrainColormapIndex(image,GetPixelIndex(image,q),exception),q",
      "return",
      "switch (type",
      "case -1:",
      "SetPixelAlpha(image, pixel,q",
      "break",
      "case -2:",
      "case 0:",
      "SetPixelRed(image,pixel,q",
      "if (channels == 1 || type == -2",
      "SetPixelGray(image,pixel,q",
      "break",
      "case 1:",
      "if (image->storage_class == PseudoClass",
      "SetPixelAlpha(image,pixel,q",
      "else",
      "SetPixelGreen(image,pixel,q",
      "break",
      "case 2:",
      "if (image->storage_class == PseudoClass",
      "SetPixelAlpha(image,pixel,q",
      "else",
      "SetPixelBlue(image,pixel,q",
      "break",
      "case 3:",
      "if (image->colorspace == CMYKColorspace",
      "SetPixelBlack(image,pixel,q",
      "else",
      "if (image->alpha_trait != UndefinedPixelTrait",
      "SetPixelAlpha(image,pixel,q",
      "break",
      "case 4:",
      "if ((IssRGBCompatibleColorspace(image->colorspace) != MagickFalse) &&",
      "(channels > 3",
      "break",
      "if (image->alpha_trait != UndefinedPixelTrait",
      "SetPixelAlpha(image,pixel,q",
      "break",
      "if (image->depth > 1",
      "SetPSDPixel(image,channels,type,packet_size,pixel,q,exception",
      "q+=GetPixelChannels(image",
      "else",
      "ssize_t",
      "bit,",
      "number_bits",
      "number_bits=image->columns-x",
      "if (number_bits > 8",
      "number_bits=8",
      "for (bit = 0; bit < number_bits; bit++",
      "SetPSDPixel(image,channels,type,packet_size,(((unsigned char) pixel",
      "& (0x01 << (7-bit))) != 0 ? 0 : 255,q,exception",
      "q+=GetPixelChannels(image",
      "x++",
      "if (x != image->columns",
      "x--",
      "continue"
    ],
    "removed_lines": [
      "switch (type",
      "case -1:",
      "SetPixelAlpha(image,pixel,q",
      "break",
      "case -2:",
      "case 0:",
      "SetPixelRed(image,pixel,q",
      "if (channels == 1 || type == -2",
      "SetPixelGray(image,pixel,q",
      "if (image->storage_class == PseudoClass",
      "if (packet_size == 1",
      "SetPixelIndex(image,ScaleQuantumToChar(pixel),q",
      "else",
      "SetPixelIndex(image,ScaleQuantumToShort(pixel),q",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t",
      "ConstrainColormapIndex(image,GetPixelIndex(image,q),exception),q",
      "if (image->depth == 1",
      "ssize_t",
      "bit,",
      "number_bits",
      "number_bits=image->columns-x",
      "if (number_bits > 8",
      "number_bits=8",
      "for (bit=0; bit < number_bits; bit++",
      "SetPixelIndex(image,(((unsigned char) pixel) &",
      "(0x01 << (7-bit))) != 0 ? 0 : 255,q",
      "SetPixelViaPixelInfo(image,image->colormap+(ssize_t",
      "ConstrainColormapIndex(image,GetPixelIndex(image,q),",
      "exception),q",
      "q+=GetPixelChannels(image",
      "x++",
      "x--",
      "continue",
      "break",
      "case 1:",
      "if (image->storage_class == PseudoClass",
      "SetPixelAlpha(image,pixel,q",
      "else",
      "SetPixelGreen(image,pixel,q",
      "break",
      "case 2:",
      "if (image->storage_class == PseudoClass",
      "SetPixelAlpha(image,pixel,q",
      "else",
      "SetPixelBlue(image,pixel,q",
      "break",
      "case 3:",
      "if (image->colorspace == CMYKColorspace",
      "SetPixelBlack(image,pixel,q",
      "else",
      "if (image->alpha_trait != UndefinedPixelTrait",
      "SetPixelAlpha(image,pixel,q",
      "break",
      "case 4:",
      "if ((IssRGBCompatibleColorspace(image->colorspace) != MagickFalse) &&",
      "(channels > 3",
      "break",
      "if (image->alpha_trait != UndefinedPixelTrait",
      "SetPixelAlpha(image,pixel,q",
      "break",
      "default:",
      "break",
      "q+=GetPixelChannels(image"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2451,
    "id": "CVE-2016-7514",
    "commit_id": "6f1879d498bcc5cce12fe0c5decb8dbc0f608e5d",
    "added_lines": [
      "compact_pixels=(unsigned char *) AcquireQuantumMemory((2*channels*",
      "next_image->columns)+1,packet_size*sizeof(*compact_pixels"
    ],
    "removed_lines": [
      "compact_pixels=(unsigned char *) AcquireQuantumMemory(2*channels*",
      "next_image->columns,packet_size*sizeof(*compact_pixels"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2452,
    "id": "CVE-2016-7101",
    "commit_id": "8f8959033e4e59418d6506b345829af1f7a71127",
    "added_lines": [
      "count=ReadBlob(image,sizeof(iris_info.name),(unsigned char *",
      "if (count != sizeof(iris_info.name",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\"",
      "if (count != sizeof(iris_info.filler",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\"",
      "if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0"
    ],
    "removed_lines": [
      "(void) ReadBlob(image,sizeof(iris_info.name),(unsigned char *",
      "(void) count",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowReaderException(CorruptImageError,\"ImproperImageHeader\"",
      "if ((image_info->ping != MagickFalse)  && (image_info->number_scenes != 0"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2453,
    "id": "CVE-2016-6906",
    "commit_id": "58b6dde319c301b0eae27d12e2a659e067d80558",
    "added_lines": [
      "static void check_file(char *basename",
      "check_file(\"heap_overflow_1.tga\"",
      "check_file(\"heap_overflow_2.tga\"",
      "return gdNumFailures",
      "static void check_file(char *basename",
      "size = read_test_file(&buffer, basename"
    ],
    "removed_lines": [
      "size = read_test_file(&buffer, \"heap_overflow.tga\"",
      "return gdNumFailures"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2454,
    "id": "CVE-2015-8959",
    "commit_id": "3ab016764c7f787829d9065440d86f5609765110",
    "added_lines": [
      "if (SeekBlob(image,offset,SEEK_CUR) < 0",
      "break"
    ],
    "removed_lines": [
      "(void) SeekBlob(image, offset, SEEK_CUR"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.1,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2455,
    "id": "CVE-2015-8958",
    "commit_id": "8ea44b48a182dd46d018f4b4f09a5e2ee9638105",
    "added_lines": [
      "height"
    ],
    "removed_lines": [
      "height,",
      "length",
      "if (bytes_per_line == 0",
      "bytes_per_line=image->columns",
      "length=image->rows*(image->columns+image->columns % 2",
      "if (((sun_info.type == RT_ENCODED) &&",
      "(length > (bytes_per_line*image->rows))) ||",
      "((sun_info.type != RT_ENCODED) && (length > sun_info.length",
      "ThrowReaderException(CorruptImageError,\"UnableToReadImageData\"",
      "length=image->rows*(bytes_per_line+bytes_per_line % 2",
      "if (((sun_info.type == RT_ENCODED) &&",
      "(length > (bytes_per_line*image->rows))) ||",
      "((sun_info.type != RT_ENCODED) && (length > sun_info.length",
      "ThrowReaderException(CorruptImageError,\"UnableToReadImageData\""
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2456,
    "id": "CVE-2015-8958",
    "commit_id": "1aa0c6dab6dcef4d9bc3571866ae1c1ddbec7d8f",
    "added_lines": [
      "height,",
      "height=sun_info.height",
      "if ((height == 0) || (sun_info.width == 0) || (sun_info.depth == 0) ||",
      "((bytes_per_line/sun_info.depth) != sun_info.width",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "bytes_per_line+=15",
      "bytes_per_line<<=1",
      "if ((bytes_per_line >> 1) != (sun_info.width*sun_info.depth+15",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "bytes_per_line>>=4",
      "sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
      "bytes_per_line*sizeof(*sun_pixels",
      "if (sun_pixels == (unsigned char *) NULL",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "(void) DecodeImage(sun_data,sun_info.length,sun_pixels,bytes_per_line*",
      "height",
      "sun_data=(unsigned char *) RelinquishMagickMemory(sun_data"
    ],
    "removed_lines": [
      "sun_pixels=sun_data",
      "bytes_per_line=0",
      "size_t",
      "height",
      "Read run-length encoded raster pixels.",
      "height=sun_info.height",
      "if ((height == 0) || (sun_info.width == 0) || (sun_info.depth == 0) ||",
      "((bytes_per_line/sun_info.depth) != sun_info.width",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "bytes_per_line+=15",
      "bytes_per_line<<=1",
      "if ((bytes_per_line >> 1) != (sun_info.width*sun_info.depth+15",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "bytes_per_line>>=4",
      "sun_pixels=(unsigned char *) AcquireQuantumMemory(height,",
      "bytes_per_line*sizeof(*sun_pixels",
      "if (sun_pixels == (unsigned char *) NULL",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "(void) DecodeImage(sun_data,sun_info.length,sun_pixels,bytes_per_line*",
      "height",
      "sun_data=(unsigned char *) RelinquishMagickMemory(sun_data"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2457,
    "id": "CVE-2015-8958",
    "commit_id": "6b4aff0f117b978502ee5bcd6e753c17aec5a961",
    "added_lines": [
      "ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\"",
      "ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\"",
      "ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\"",
      "else",
      "if (sun_info.length > (height*bytes_per_line",
      "ThrowReaderException(ResourceLimitError,\"ImproperImageHeader\"",
      "(void) CopyMagickMemory(sun_pixels,sun_data,sun_info.length"
    ],
    "removed_lines": [
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\"",
      "ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\""
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2462,
    "id": "CVE-2015-4054",
    "commit_id": "edab5be6665b9e8de66c25ba527509b229468573",
    "added_lines": [
      "if (!user)",
      "slog_error(client, \"Password packet before auth packet?\"",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2467,
    "id": "CVE-2015-3215",
    "commit_id": "723416fa4210b7464b28eab89cc76252e6193ac1",
    "added_lines": [
      "nBytesStripped, TRUE"
    ],
    "removed_lines": [
      "nBytesStripped"
    ],
    "cause": [
      "Uncategorized Cluster 9"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not account for the size of the IP options"
    ]
  },
  {
    "index": 2470,
    "id": "CVE-2014-9907",
    "commit_id": "504ada82b6fa38a30c846c1c29116af7290decb2",
    "added_lines": [
      "if (EOFBlob(image) != MagickFalse",
      "ThrowReaderException(CorruptImageError,\"UnexpectedEndOfFile\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2471,
    "id": "CVE-2014-9907",
    "commit_id": "21eae25a8db5fdcd112dbcfcd9e5c37e32d32e2f",
    "added_lines": [
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse"
    ],
    "removed_lines": [
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse",
      "if (EOFBlob(image) != MagickFalse",
      "ThrowFileException(exception,CorruptImageError,\"UnexpectedEndOfFile\",",
      "image->filename",
      "return(MagickFalse"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2472,
    "id": "CVE-2010-5328",
    "commit_id": "f20011457f41c11edb5ea5038ad0c8ea9f392023",
    "added_lines": [
      "{ .first = NULL },\t\t\t\t\t\\",
      "{ .first = NULL },\t\t\t\t\t\\",
      "{ .first = NULL },\t\t\t\t\t\\",
      ".pprev = NULL,\t\t\t\t\t\\"
    ],
    "removed_lines": [
      "{ .first = &init_task.pids[PIDTYPE_PID].node },\t\t\\",
      "{ .first = &init_task.pids[PIDTYPE_PGID].node },\t\\",
      "{ .first = &init_task.pids[PIDTYPE_SID].node },\t\t\\",
      ".pprev = &init_struct_pid.tasks[type].first,\t\\"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not prevent signals with a process group ID of zero from reaching the swapper process"
    ]
  },
  {
    "index": 2473,
    "id": "CVE-2010-5328",
    "commit_id": "f106eee10038c2ee5b6056aaf3f6d5229be6dcdd",
    "added_lines": [
      "static inline void init_idle_pids(struct pid_link *links",
      "enum pid_type type",
      "for (type = PIDTYPE_PID; type < PIDTYPE_MAX; ++type)",
      "INIT_HLIST_NODE(&links[type].node);",
      "links[type].pid = &init_struct_pid",
      "if (!IS_ERR(task))",
      "init_idle_pids(task->pids"
    ],
    "removed_lines": [
      "if (!IS_ERR(task"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not prevent signals with a process group ID of zero from reaching the swapper process"
    ]
  },
  {
    "index": 2476,
    "id": "CVE-2018-18021",
    "commit_id": "2a3f93459d689d990b3ecfbe782fec89b97d3279",
    "added_lines": [
      "u64 mode = (*(u64 *)valp) & PSR_AA32_MODE_MASK",
      "if (!system_supports_32bit_el0",
      "return -EINVAL",
      "break",
      "if (!vcpu_el1_is_32bit(vcpu",
      "return -EINVAL",
      "break",
      "if (vcpu_el1_is_32bit(vcpu",
      "return -EINVAL"
    ],
    "removed_lines": [
      "u32 mode = (*(u32 *)valp) & PSR_AA32_MODE_MASK"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 2"
    ],
    "effect": "DoS",
    "score": 3.6,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "insufficient restrictions on userspace access to the core register file",
      "PSTATE.M validation does not prevent unintended execution modes"
    ]
  },
  {
    "index": 2478,
    "id": "CVE-2018-16644",
    "commit_id": "16916c8979c32765c542e216b31cee2671b7afe7",
    "added_lines": [
      "if (length > (size_t) GetBlobSize(image",
      "ThrowDCMException(CorruptImageError,\"InsufficientImageDataInFile\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "missing check for length"
    ]
  },
  {
    "index": 2481,
    "id": "CVE-2018-11377",
    "commit_id": "b35530fa0681b27eba084de5527037ebfb397422",
    "added_lines": [
      "if (len < 2)",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 2494,
    "id": "CVE-2019-1010251",
    "commit_id": "8357ef3f8ffc7d99ef6571350724160de356158b",
    "added_lines": [
      "AppProto pm_alproto = ALPROTO_UNKNOWN",
      "if (!(ipproto == IPPROTO_UDP && alproto == ALPROTO_DCERPC",
      "goto end",
      "pm_alproto = alproto",
      "if (alproto == ALPROTO_UNKNOWN",
      "alproto = pm_alproto"
    ],
    "removed_lines": [
      "goto end"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS Bypass",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Bypass ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 2499,
    "id": "CVE-2019-14981",
    "commit_id": "a77d8d97f5a7bced0468f0b08798c83fb67427bc",
    "added_lines": [
      "gamma=PerceptibleReciprocal(count"
    ],
    "removed_lines": [
      "gamma=1.0/count"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "divide-by-zero vulnerability"
    ]
  },
  {
    "index": 2500,
    "id": "CVE-2019-14980",
    "commit_id": "c5d012a46ae22be9444326aa37969a3f75daa3ba",
    "added_lines": [
      "blob_info->data=NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use after free"
    ]
  },
  {
    "index": 2520,
    "id": "CVE-2019-12973",
    "commit_id": "cbe7384016083eac16078b359acd7a842253d503",
    "added_lines": [
      "OPJ_UINT32 x, y, written",
      "x = y = written = 0U",
      "written++",
      "written++",
      "if (written != width * height)",
      "fprintf(stderr, \"warning, image's actual size does not match advertized one\\n\"",
      "return OPJ_FALSE"
    ],
    "removed_lines": [
      "OPJ_UINT32 x, y",
      "x = y = 0U"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "excessive iteration"
    ]
  },
  {
    "index": 2522,
    "id": "CVE-2019-12109",
    "commit_id": "86030db849260dd8fb2ed975b9890aef1b62b692",
    "added_lines": [
      "if (!int_port || !rem_port || !protocol"
    ],
    "removed_lines": [
      "if (!int_port || !ext_port || !protocol"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2528,
    "id": "CVE-2019-11339",
    "commit_id": "1f686d023b95219db933394a7704ad9aa5f01cbb",
    "added_lines": [
      "s->interlaced_dct = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-array access"
    ]
  },
  {
    "index": 2537,
    "id": "CVE-2018-7191",
    "commit_id": "5c25f65fd1e42685f7ccd80e0621829c105785d9",
    "added_lines": [
      "if (err < 0"
    ],
    "removed_lines": [
      "if (err"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.9,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 2815,
    "id": "CVE-2014-7919",
    "commit_id": "#F0",
    "added_lines": [
      "+            if (count > data.dataSize()) {",
      "+                return BAD_VALUE;",
      "+            }",
      "+                if (s.read(data) == BAD_VALUE) {",
      "+                    return BAD_VALUE;",
      "+                }",
      "+            if (count > data.dataSize()) {",
      "+                return BAD_VALUE;",
      "+            }",
      "+                if (d.read(data) == BAD_VALUE) {",
      "+                    return BAD_VALUE;",
      "+                }",
      "+    const void* matrix_data = input.readInplace(sizeof(layer_state_t::matrix22_t));",
      "+    if (matrix_data) {",
      "+        matrix = *reinterpret_cast<layer_state_t::matrix22_t const *>(matrix_data);",
      "+    } else {",
      "+        return BAD_VALUE;",
      "+    }"
    ],
    "removed_lines": [
      "-                s.read(data);",
      "-                d.read(data);",
      "-    matrix = *reinterpret_cast<layer_state_t::matrix22_t const *>(",
      "-            input.readInplace(sizeof(layer_state_t::matrix22_t)));"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference"
    ]
  },
  {
    "index": 3021,
    "id": "CVE-2011-3904",
    "commit_id": "f898d7f8a69faf58b2f8b2077cfaf528050c174d",
    "added_lines": [
      "if ([self tempURL]",
      "[self setURL:[self tempURL]]"
    ],
    "removed_lines": [
      "[self setTempURL:@\"\"]",
      "[self setURL:[self tempURL]]"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3035,
    "id": "CVE-2011-3897",
    "commit_id": "c7a90019bf7054145b11d2577b851cf2779d3d79",
    "added_lines": [
      "if (!print_dialog_)",
      "print_dialog_ = create_dialog_func_(this",
      "print_dialog_->AddRefToDialog"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3041,
    "id": "CVE-2011-2876",
    "commit_id": "2f6a44ffa146a1e3408a60395531bba76c8e2154",
    "added_lines": [
      "Committer(\"Igor Trindade Oliveira\", [\"igor.oliveira@webkit.org\", \"igor.oliveira@openbossa.org\"], \"igoroliveira\"),"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3042,
    "id": "CVE-2011-2877",
    "commit_id": "d31f450c723ba46b53c1762e51188557447d85fd",
    "added_lines": [
      "void addTimeInactive(double seconds",
      "ASSERT(!isInUse",
      "m_inactivityInSeconds += seconds",
      "bool isInactive() const",
      "const double inactiveSecondsTolerance = 3",
      "return m_inactivityInSeconds > inactiveSecondsTolerance",
      "bool isInUse() const { return m_areaAllocator;",
      "double m_inactivityInSeconds"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3044,
    "id": "CVE-2011-2879",
    "commit_id": "f698ce8f7637d75d1816277d5938df8cdb4224d7",
    "added_lines": [
      "class MemoryObjectInfo"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "does not properly consider"
    ]
  },
  {
    "index": 3045,
    "id": "CVE-2011-2880",
    "commit_id": "4c19b042ea31bd393d2265656f94339d1c3d82ff",
    "added_lines": [],
    "removed_lines": [
      "delete callback"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3046,
    "id": "CVE-2011-2880",
    "commit_id": "dd30287c430063a5ebb4ec5a1dbdac82a9404aab",
    "added_lines": [
      "_data->_contextRef = adoptWK(WKContextCreateWithInjectedBundlePath(adoptWK(WKStringCreateWithCFString((CFStringRef)[bundleURL path])).get"
    ],
    "removed_lines": [
      "_data->_contextRef = adoptWK(WKContextCreateWithInjectedBundlePath(adoptWK(WKStringCreateWithCFString((CFStringRef)[bundleURL absoluteString])).get"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3047,
    "id": "CVE-2011-2880",
    "commit_id": "244c78b3f737f2cacab2d212801b0524cbcc3a7b",
    "added_lines": [
      "void Reset"
    ],
    "removed_lines": [
      "void StopAutoRetry"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3050,
    "id": "CVE-2011-2835",
    "commit_id": "ebaf26ce325e21df4619ab95cc0399bc88f30d05",
    "added_lines": [
      "IN_PROC_BROWSER_TEST_F(SSLUITest, DISABLED_TestCNInvalidStickiness)"
    ],
    "removed_lines": [
      "#if defined(OS_WIN",
      "#define MAYBE_TestCNInvalidStickiness FLAKY_TestCNInvalidStickiness",
      "#else",
      "#define MAYBE_TestCNInvalidStickiness TestCNInvalidStickiness",
      "#endif",
      "IN_PROC_BROWSER_TEST_F(SSLUITest, MAYBE_TestCNInvalidStickiness)"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3054,
    "id": "CVE-2011-2830",
    "commit_id": "08b630e66e042af3fe80015509b3238c2679ea40",
    "added_lines": [
      "virtual bool multiple() const"
    ],
    "removed_lines": [
      "virtual bool multiple"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3057,
    "id": "CVE-2011-2841",
    "commit_id": "ac9315fc340d984c52a253eb9658544182323d51",
    "added_lines": [
      "2011-02-15  Oliver Hunt  <oliver@apple.com>",
      "Fix EFL build for",
      "https://bugs.webkit.org/show_bug.cgi?id=54415"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform garbage collection"
    ]
  },
  {
    "index": 3061,
    "id": "CVE-2011-2846",
    "commit_id": "f2b010372b588e349972760985d4d6619d2b950d",
    "added_lines": [
      "RemoveManagedDefaultSearchPreferences",
      "ResetModel(true",
      "TemplateURL* t_url = AddKeywordWithDate(\"key1\", false, \"http://foo1\",",
      "\"http://sugg1\", \"http://icon1\", \"UTF-8;UTF-16\", \"name1\", true, Time",
      "model()->SetDefaultSearchProvider(t_url",
      "EXPECT_EQ(t_url, model()->GetDefaultSearchProvider",
      "ResetModel(false",
      "SetManagedDefaultSearchPreferences(false, \"\", \"\", \"\", \"\", \"\", \"\"",
      "VerifyLoad",
      "EXPECT_TRUE(model()->is_default_search_managed",
      "EXPECT_TRUE(model()->GetDefaultSearchProvider() == NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3062,
    "id": "CVE-2011-2847",
    "commit_id": "c32c2265e9bc2408461fc387891c1423f820dcc1",
    "added_lines": [
      "fun:Serialize",
      "fun:UserScriptMaster::ScriptReloader::RunLoad"
    ],
    "removed_lines": [
      "fun:Serialize*",
      "fun:UserScriptMaster::ScriptReloader::RunScan*"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3064,
    "id": "CVE-2011-2849",
    "commit_id": "5dc90e57abcc7f0489e7ae09a3e687e9c6f4fad5",
    "added_lines": [
      "ScopedRunnableMethodFactory<WebSocketJob> method_factory_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "null pointer dereference",
      "unspecified vectors"
    ]
  },
  {
    "index": 3068,
    "id": "CVE-2011-2852",
    "commit_id": "e2ecf8b6e9daa6d4082f2b4f4c1454dbd70605cc",
    "added_lines": [
      ".status-bar-select-container",
      "display: inline-block",
      "background-image: url(Images/disclosureTriangleSmallDown.png",
      "background-repeat: no-repeat",
      "background-position-x: right",
      "background-position-y: 6px",
      "padding-right: 10px",
      "border-right: 5px solid transparent",
      "-webkit-appearance: none",
      "border: 0",
      "border-radius: 0",
      "padding: 0 15px 0 5px",
      "margin-right: -15px",
      "position: relative",
      "top: -1px",
      ".console-context"
    ],
    "removed_lines": [
      "#console-context"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "off-by-one",
      "unknown vectors",
      "off-by-one error"
    ]
  },
  {
    "index": 3069,
    "id": "CVE-2011-2853",
    "commit_id": "d82e91c46938520466e9d7c695e0bc638fc70970",
    "added_lines": [
      "#include \"views/views_delegate.h\"",
      "if (views::Widget::IsPureViews() &&",
      "views::ViewsDelegate::views_delegate->GetDefaultParentView"
    ],
    "removed_lines": [
      "if (views::Widget::IsPureViews"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3070,
    "id": "CVE-2011-2854",
    "commit_id": "108a923ac784e62ca84b45cb6241f77a942e233a",
    "added_lines": [
      "#include \"base/mac/mac_util.h\"",
      "if (base::mac::IsOSLeopardOrEarlier())",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3071,
    "id": "CVE-2011-2854",
    "commit_id": "061ddbae1ee31476b57ea44a953970ab2fe8aca1",
    "added_lines": [],
    "removed_lines": [
      "void setDecoder(TextResourceDecoder*"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3072,
    "id": "CVE-2011-2855",
    "commit_id": "b432c14786a4b50a1bf9b77a30af2a36cde59428",
    "added_lines": [
      "\"webkit_revision\": \"92959\","
    ],
    "removed_lines": [
      "\"webkit_revision\": \"92903\","
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3074,
    "id": "CVE-2011-2857",
    "commit_id": "b48b22e1a7bae061687a44e13c0dacb02721fc6f",
    "added_lines": [
      "#include \"HistogramSupport.h\"",
      "const CSSPropertyID propertyID = hashTableEntry ? static_cast<CSSPropertyID>(hashTableEntry->id) : CSSPropertyInvalid",
      "static const int CSSPropertyHistogramSize = 600",
      "COMPILE_ASSERT(CSSPropertyHistogramSize > numCSSProperties, number_of_css_properties_exceed_CSSPropertyHistogramSize",
      "if (hasPrefix(buffer, length, \"-webkit-\") && propertyID != CSSPropertyInvalid",
      "HistogramSupport::histogramEnumeration(\"CSS.PrefixUsage\", max(1, propertyID - firstCSSProperty), CSSPropertyHistogramSize",
      "return propertyID"
    ],
    "removed_lines": [
      "return hashTableEntry ? static_cast<CSSPropertyID>(hashTableEntry->id) : CSSPropertyInvalid"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3075,
    "id": "CVE-2011-2834",
    "commit_id": "3a766e0115e9799db766a88554b9ab12ee5bf2a4",
    "added_lines": [
      "ctxt->error = XPATH_UNDEF_PREFIX_ERROR",
      "ctxt->error = XPATH_UNDEF_PREFIX_ERROR"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 3077,
    "id": "CVE-2011-2860",
    "commit_id": "6c390601f9ee3436bb32f84772977570265982ea",
    "added_lines": [
      "checkReplaceChild(newChild.get(), oldChild, ec",
      "if (ec",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3082,
    "id": "CVE-2011-2875",
    "commit_id": "ab5e55ff333def909d025ac45da9ffa0d88a63f2",
    "added_lines": [
      "class SuccessCallbackTask : public MethodTask<MockWebRTCPeerConnectionHandler>",
      "public:",
      "SuccessCallbackTask(MockWebRTCPeerConnectionHandler*, const WebKit::WebRTCSessionDescriptionRequest&, const WebKit::WebRTCSessionDescriptionDescriptor&",
      "virtual void runIfValid() OVERRIDE",
      "private:",
      "WebKit::WebRTCSessionDescriptionRequest m_request",
      "WebKit::WebRTCSessionDescriptionDescriptor m_result",
      "class FailureCallbackTask : public MethodTask<MockWebRTCPeerConnectionHandler>",
      "public:",
      "FailureCallbackTask(MockWebRTCPeerConnectionHandler*, const WebKit::WebRTCSessionDescriptionRequest&",
      "virtual void runIfValid() OVERRIDE",
      "private:",
      "WebKit::WebRTCSessionDescriptionRequest m_request"
    ],
    "removed_lines": [
      "virtual void setLocalDescription(const WebKit::WebRTCVoidRequest&, const WebKit::WebRTCSessionDescriptionDescriptor&) OVERRIDE",
      "virtual void setRemoteDescription(const WebKit::WebRTCVoidRequest&, const WebKit::WebRTCSessionDescriptionDescriptor&) OVERRIDE",
      "virtual WebKit::WebRTCSessionDescriptionDescriptor localDescription() OVERRIDE",
      "virtual WebKit::WebRTCSessionDescriptionDescriptor remoteDescription() OVERRIDE",
      "WebKit::WebRTCSessionDescriptionDescriptor m_localDescription",
      "WebKit::WebRTCSessionDescriptionDescriptor m_remoteDescription"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3084,
    "id": "CVE-2011-2823",
    "commit_id": "90d40c781c36fd460cbcf4b3ee92b77df36a8c0d",
    "added_lines": [
      "environment['DYLD_LIBRARY_PATH'] = self._port._build_path"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3085,
    "id": "CVE-2011-2824",
    "commit_id": "46f53ffa4b19cbe61552ffd7b7486168453e6eb0",
    "added_lines": [],
    "removed_lines": [
      "# 84872",
      "SUBSTRING: webcore::element::getattribute___webcore::floatwidthofsubstringusingsvgfont___webcore::svgtextrunrenderingcontext::floatwidthusingsvgfont___webcore::font::width"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3086,
    "id": "CVE-2011-2825",
    "commit_id": "9a7a1f3ff43d10f7b8f5071fdd0d903691bd72ec",
    "added_lines": [
      "# http://code.google.com/p/drmemory/issues/detail?id=454",
      "UNINITIALIZED READ",
      "...",
      "WINMM.dll!waveOutGetNumDevs",
      "LEAK",
      "...",
      "WINMM.dll!waveOutGetNumDevs",
      "# http://code.google.com/p/drmemory/issues/detail?id=455",
      "UNADDRESSABLE ACCESS",
      "system call NtQueryValueKey",
      "...",
      "KERNEL32.dll!GetProfileIntA",
      "...",
      "RICHED20.dll!CreateTextServices"
    ],
    "removed_lines": [
      "RPCRT4.dll!NdrOleFree"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3087,
    "id": "CVE-2011-2821",
    "commit_id": "c9911bc93097a5df5518f5b88e1d5ed5ef275a4d",
    "added_lines": [
      "while (tmp != contextObj)",
      "tmp = valuePop(ctxt"
    ],
    "removed_lines": [
      "if (tmp != contextObj",
      "valuePop(ctxt"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 3090,
    "id": "CVE-2011-2827",
    "commit_id": "c1c078b77aab01ffaf888cc850bcbc47eb7629e5",
    "added_lines": [
      "# Read the autofill_profile_names table.",
      "cursor.execute(\"SELECT * from autofill_profile_names;\"",
      "print (\"Failed to read the autofill_profile_names table from \\\"%s\\\"\" %",
      "database",
      "profiles =",
      "for profile in cursor:",
      "guid = profile[0]",
      "profiles[guid] = zip(types, profile",
      "# Read the autofill_profile_emails table.",
      "try:",
      "cursor.execute(\"SELECT * from autofill_profile_emails;\"",
      "except sqlite3.OperationalError:",
      "print (\"Failed to read the autofill_profile_emails table from \\\"%s\\\"\" %",
      "database",
      "raise",
      "types = [ColumnNameToFieldType(item[0]) for item in cursor.description]",
      "for profile in cursor:",
      "guid = profile[0]",
      "profiles[guid].extend(zip(types, profile",
      "# Read the autofill_profiles table.",
      "try:",
      "cursor.execute(\"SELECT * from autofill_profiles;\"",
      "except sqlite3.OperationalError:",
      "print \"Failed to read the autofill_profiles table from \\\"%s\\\"\" % database",
      "raise",
      "types = [ColumnNameToFieldType(item[0]) for item in cursor.description]",
      "for profile in cursor:",
      "guid = profile[0]",
      "profiles[guid].extend(zip(types, profile",
      "# Read the autofill_profile_phones table.",
      "try:",
      "cursor.execute(\"SELECT * from autofill_profile_phones;\"",
      "except sqlite3.OperationalError:",
      "print (\"Failed to read the autofill_profile_phones table from \\\"%s\\\"\" %",
      "database",
      "raise",
      "for profile in cursor:",
      "guid = profile[0]",
      "if int(profile[1]) == 0:",
      "profiles[guid].append((\"PHONE_HOME_WHOLE_NUMBER\", profile[2]",
      "else:",
      "profiles[guid].append((\"PHONE_FAX_WHOLE_NUMBER\", profile[2]",
      "print SerializeProfiles(profiles.values"
    ],
    "removed_lines": [
      "cursor.execute(\"SELECT * from autofill_profiles;\"",
      "print \"Failed to read the autofill_profiles table from \\\"%s\\\"\" % database",
      "profiles = [zip(types, profile) for profile in cursor]",
      "print SerializeProfiles(profiles"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3093,
    "id": "CVE-2011-2839",
    "commit_id": "c63f2b7fe4fe2977f858a8e36d5f48db17eff2e7",
    "added_lines": [
      "\"tts_engine\":",
      "\"voice_name\": \"name\",",
      "\"lang\": \"en-US\",",
      "\"event_types\": [\"start\", \"end\", \"marker\"],"
    ],
    "removed_lines": [
      "\"tts\":",
      "\"voiceName\": \"name\",",
      "\"locale\": \"en-US\","
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3095,
    "id": "CVE-2011-2359",
    "commit_id": "724fffdbc7645d74c5b5a4f4bf2f6cc09dd7579b",
    "added_lines": [
      "},",
      "'link_settings':",
      "'libraries': [",
      "'-limm32.lib',",
      "'-loleacc.lib',",
      "],"
    ],
    "removed_lines": [
      "'link_settings':",
      "'libraries': [",
      "'-limm32.lib',",
      "'-loleacc.lib',",
      "],",
      "},"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3102,
    "id": "CVE-2011-2787",
    "commit_id": "9400c64565586091f67d4131850fd0836b18b511",
    "added_lines": [
      "RunGpuInfoUpdateCallbacks",
      "base::AutoLock auto_lock(gpu_info_lock_"
    ],
    "removed_lines": [
      "RunGpuInfoUpdateCallbacks"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3104,
    "id": "CVE-2011-2789",
    "commit_id": "55ef04e135edaa9abfbf3647634b11ed57dc49e9",
    "added_lines": [
      "void ResourceCreated(Resource* resource, PluginInstance* instance",
      "void ResourceDestroyed(Resource* resource"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3105,
    "id": "CVE-2011-2790",
    "commit_id": "adb3498ca0b69561d8c6b60bab641de4b0e37dbf",
    "added_lines": [
      "#include \"Path.h\"",
      "m_data->context->DrawEllipticArc(rect.x(), rect.y(), rect.width(), rect.height(), startAngle, startAngle + angleSpan",
      "notImplemented",
      "#if USE(WXGC",
      "Path path",
      "path.addRoundedRect(rect, topLeft, topRight, bottomLeft, bottomRight",
      "m_data->context->SetBrush(wxBrush(color",
      "wxGraphicsContext* gc = m_data->context->GetGraphicsContext",
      "gc->FillPath(*path.platformPath",
      "#endif",
      "notImplemented",
      "if (paintingDisabled",
      "return",
      "void GraphicsContext::clipPath(const Path& path, WindRule clipRule",
      "if (paintingDisabled",
      "return",
      "if (path.isEmpty",
      "return",
      "wxGraphicsContext* gc = m_data->context->GetGraphicsContext",
      "#if __WXMAC__",
      "CGContextRef context = (CGContextRef)gc->GetNativeContext",
      "CGPathRef nativePath = (CGPathRef)path.platformPath()->GetNativePath",
      "CGContextBeginPath(context",
      "CGContextAddPath(context, nativePath",
      "if (clipRule == RULE_EVENODD",
      "CGContextEOClip(context",
      "else",
      "CGContextClip(context",
      "#elif __WXMSW__",
      "Gdiplus::Graphics* g = (Gdiplus::Graphics*)gc->GetNativeContext",
      "Gdiplus::GraphicsPath* nativePath = (Gdiplus::GraphicsPath*)path.platformPath()->GetNativePath",
      "if (clipRule == RULE_EVENODD",
      "nativePath->SetFillMode(Gdiplus::FillModeAlternate",
      "else",
      "nativePath->SetFillMode(Gdiplus::FillModeWinding",
      "g->SetClip(nativePath",
      "#endif",
      "m_data->context->SetClippingRegion(0, 0, 0, 0",
      "else",
      "clipPath(path, RULE_NONZERO",
      "void GraphicsContext::addInnerRoundedRectClip(const IntRect& r, int thickness",
      "if (paintingDisabled",
      "return",
      "FloatRect rect(r",
      "clip(rect",
      "Path path",
      "path.addEllipse(rect",
      "rect.inflate(-thickness",
      "path.addEllipse(rect",
      "clipPath(path, RULE_EVENODD"
    ],
    "removed_lines": [
      "m_data->context->DrawEllipticArc(rect.x(), rect.y(), rect.width(), rect.height(), startAngle, angleSpan",
      "notImplemented",
      "void GraphicsContext::clipPath(const Path&, WindRule",
      "notImplemented",
      "#ifdef __WXMAC__",
      "wxGraphicsContext* gc = m_data->context->GetGraphicsContext",
      "CGContextRef context = (CGContextRef)gc->GetNativeContext",
      "if (!context",
      "return",
      "CGPathRef nativePath = (CGPathRef)path.platformPath()->GetNativePath",
      "CGContextClipToRect(context, CGRectZero",
      "else if (nativePath)",
      "CGContextBeginPath(context",
      "CGContextAddPath(context, nativePath",
      "CGContextClip(context",
      "#else",
      "notImplemented",
      "#endif",
      "void GraphicsContext::addInnerRoundedRectClip(const IntRect& rect, int thickness",
      "notImplemented"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3107,
    "id": "CVE-2011-2792",
    "commit_id": "22362c7358df89e2c0c94c4dd43ecfe90ac3da27",
    "added_lines": [
      "['OS==\"mac\" and clang==1',",
      "# TODO(thakis): Remove this once http://llvm.org/PR10031 is fixed.",
      "'mac_release_optimization%': '2',",
      "}],"
    ],
    "removed_lines": [
      "['OS==\"mac\" and clang==1',",
      "# TODO(thakis): Remove this once http://llvm.org/PR10031 is fixed.",
      "'mac_release_optimization%': '2',",
      "}],"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3108,
    "id": "CVE-2011-2793",
    "commit_id": "a6e146b4a369b31afa4c4323cc813dcbe0ef0c2b",
    "added_lines": [
      "class URLFetcherFactory",
      "scoped_ptr<URLFetcherFactory> integration_factory_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3111,
    "id": "CVE-2011-2796",
    "commit_id": "f31296f931b57bf0e7c15f6e60acc427b2824686",
    "added_lines": [
      "ver_output = self._executive.run_command(['cmd', '/c', 'ver'], decode_output=False"
    ],
    "removed_lines": [
      "ver_output = self._executive.run_command(['cmd', '/c', 'ver']"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3112,
    "id": "CVE-2011-2797",
    "commit_id": "80742f2ffeb9e90cd85cbee27acb9f924ffebd16",
    "added_lines": [
      "#include \"base/gtest_prod_util.h\"",
      "UploadRequired upload_required() const { return upload_required_;",
      "FRIEND_TEST_ALL_PREFIXES(AutofillDownloadTest, QueryAndUploadTest",
      "UploadRequired upload_required_"
    ],
    "removed_lines": [
      "UploadRequired* upload_required,"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3114,
    "id": "CVE-2011-2799",
    "commit_id": "5a2de6455f565783c73e53eae2c8b953e7d48520",
    "added_lines": [
      "enableHyperlinkAuditing, enableFullscreen, enableDNSPrefetching,",
      "enableSpellChecking",
      "\"enable-spell-checking\", &enableSpellChecking,",
      "if (enableSpellChecking)",
      "WebKit::EditorClient* client = static_cast<WebKit::EditorClient*>(core(webView)->editorClient",
      "static_cast<WebKit::TextCheckerClientEnchant*>(client->textChecker())->updateSpellCheckingLanguage(defaultSpellCheckingLanguages",
      "gboolean enableSpellChecking",
      "g_object_get(G_OBJECT(webSettings), \"enable-spell-checking\", &enableSpellChecking, NULL",
      "if (enableSpellChecking)",
      "WebKit::EditorClient* client = static_cast<WebKit::EditorClient*>(core(webView)->editorClient",
      "static_cast<WebKit::TextCheckerClientEnchant*>(client->textChecker())->updateSpellCheckingLanguage(g_value_get_string(&value"
    ],
    "removed_lines": [
      "enableHyperlinkAuditing, enableFullscreen, enableDNSPrefetching",
      "WebKit::EditorClient* client = static_cast<WebKit::EditorClient*>(core(webView)->editorClient",
      "static_cast<WebKit::TextCheckerClientEnchant*>(client->textChecker())->updateSpellCheckingLanguage(defaultSpellCheckingLanguages",
      "WebKit::EditorClient* client = static_cast<WebKit::EditorClient*>(core(webView)->editorClient",
      "static_cast<WebKit::TextCheckerClientEnchant*>(client->textChecker())->updateSpellCheckingLanguage(g_value_get_string(&value"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3116,
    "id": "CVE-2011-2802",
    "commit_id": "4ab22cfc619ee8ff17a8c50e289ec3b30731ceba",
    "added_lines": [
      "#ifndef CHROME_TEST_WEBDRIVER_WEBDRIVER_LOGGING_H_",
      "#define CHROME_TEST_WEBDRIVER_WEBDRIVER_LOGGING_H_",
      "#include <string>",
      "namespace webdriver",
      "void InitWebDriverLogging(int min_log_level",
      "bool GetLogContents(std::string* log_contents",
      "}  // namespace webdriver",
      "#endif  // CHROME_TEST_WEBDRIVER_WEBDRIVER_LOGGING_H_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform const lookups"
    ]
  },
  {
    "index": 3118,
    "id": "CVE-2011-2801",
    "commit_id": "f837b6744eb9ca9d8e4f2e93d9118bf787ca5e24",
    "added_lines": [
      "sync_child_id = sync_child_node.GetSuccessorId",
      "if (typed_url.visit_transitions_size() == 0)",
      "VLOG(1) << \"Ignoring obsolete sync node with no visit transition info.\"",
      "continue"
    ],
    "removed_lines": [
      "} else",
      "NOTREACHED() << \"Syncing typed URL with no visits: \" <<",
      "typed_url.url",
      "sync_child_id = sync_child_node.GetSuccessorId"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3119,
    "id": "CVE-2011-2818",
    "commit_id": "456405f87033ee64c6862ef814f1f6a4e52585bd",
    "added_lines": [
      "#include <gtk/gtk.h>",
      "#include \"remoting/host/chromoting_host.h\"",
      "#include \"ui/base/gtk/gtk_signal.h\"",
      "const char kDisconnectWindowTitle[] = \"Remoting\"",
      "const char kDisconnectWindowShareText[] = \"Sharing with: \"",
      "const char kDisconnectWindowButtonText[] = \"Disconnect\"",
      "DisconnectWindowLinux",
      "CHROMEGTK_CALLBACK_1(DisconnectWindowLinux, gboolean, OnWindowDelete,",
      "GdkEvent*",
      "CHROMEG_CALLBACK_0(DisconnectWindowLinux, void, OnDisconnectClicked,",
      "GtkButton*",
      "void CreateWindow",
      "remoting::ChromotingHost* host_",
      "GtkWidget* disconnect_window_",
      "GtkWidget* user_label_",
      "DisconnectWindowLinux::DisconnectWindowLinux",
      ": host_(NULL),",
      "disconnect_window_(NULL)",
      "void DisconnectWindowLinux::CreateWindow()",
      "if (disconnect_window_) return",
      "disconnect_window_ = gtk_window_new(GTK_WINDOW_TOPLEVEL",
      "GtkWindow* window = GTK_WINDOW(disconnect_window_",
      "gtk_window_set_title(window, kDisconnectWindowTitle",
      "gtk_window_set_resizable(window, FALSE",
      "gtk_window_stick(window",
      "gtk_window_set_keep_above(window, TRUE",
      "g_signal_connect(disconnect_window_, \"delete-event\",",
      "G_CALLBACK(OnWindowDeleteThunk), this",
      "GtkWidget* main_area = gtk_vbox_new(FALSE, 0",
      "gtk_container_add(GTK_CONTAINER(disconnect_window_), main_area",
      "GtkWidget* username_row = gtk_hbox_new(FALSE, 0",
      "gtk_container_add(GTK_CONTAINER(main_area), username_row",
      "GtkWidget* share_label = gtk_label_new(kDisconnectWindowShareText",
      "gtk_container_add(GTK_CONTAINER(username_row), share_label",
      "user_label_ = gtk_label_new(NULL",
      "gtk_container_add(GTK_CONTAINER(username_row), user_label_",
      "GtkWidget* disconnect_box = gtk_hbox_new(FALSE, 0",
      "gtk_container_add(GTK_CONTAINER(main_area), disconnect_box",
      "GtkWidget* disconnect_button = gtk_button_new_with_label",
      "kDisconnectWindowButtonText",
      "gtk_box_pack_start(GTK_BOX(disconnect_box), disconnect_button,",
      "TRUE, FALSE, 0",
      "g_signal_connect(disconnect_button, \"clicked\",",
      "G_CALLBACK(OnDisconnectClickedThunk), this",
      "gtk_widget_show_all(main_area",
      "host_ = host",
      "CreateWindow",
      "gtk_label_set_text(GTK_LABEL(user_label_), username.c_str",
      "gtk_window_present(GTK_WINDOW(disconnect_window_",
      "DCHECK(disconnect_window_",
      "gtk_widget_hide(disconnect_window_",
      "gboolean DisconnectWindowLinux::OnWindowDelete(GtkWidget* widget,",
      "GdkEvent* event)",
      "return TRUE",
      "void DisconnectWindowLinux::OnDisconnectClicked(GtkButton* sender)",
      "DCHECK(host_",
      "host_->Shutdown"
    ],
    "removed_lines": [
      "DisconnectWindowLinux()",
      "NOTIMPLEMENTED",
      "NOTIMPLEMENTED"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3120,
    "id": "CVE-2011-2804",
    "commit_id": "dc7b094a338c6c521f918f478e993f0f74bbea0d",
    "added_lines": [
      "'browser/chromeos/input_method/ibus_controller.cc',",
      "'browser/chromeos/input_method/ibus_controller.h',",
      "['use_ibus==1',",
      "'dependencies': [",
      "'../build/linux/system.gyp:ibus',",
      "],",
      "}],"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle nested functions in PDF documents"
    ]
  },
  {
    "index": 3124,
    "id": "CVE-2011-2346",
    "commit_id": "dabd6f450e9594a8962ef6f79447a8bfdc1c9f05",
    "added_lines": [
      "std::vector<string16> lines",
      "base::SplitString(text_, '\\n', &lines",
      "for (std::vector<string16>::const_iterator iter = lines.begin",
      "label_width = std::max(label_width, font_.GetStringWidth(*iter"
    ],
    "removed_lines": [
      "std::vector<std::wstring> lines",
      "base::SplitString(UTF16ToWideHack(text_), L'\\n', &lines",
      "for (std::vector<std::wstring>::const_iterator iter = lines.begin",
      "label_width = std::max(label_width,",
      "font_.GetStringWidth(WideToUTF16Hack(*iter"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3126,
    "id": "CVE-2011-2350",
    "commit_id": "b944f670bb7a8a919daac497a4ea0536c954c201",
    "added_lines": [
      "return throwVMError(exec, createNotEnoughArgumentsError(exec",
      "return throwVMError(exec, createNotEnoughArgumentsError(exec"
    ],
    "removed_lines": [
      "return throwVMError(exec, createTypeError(exec, \"Not enough arguments\"",
      "return throwVMError(exec, createTypeError(exec, \"Not enough arguments\""
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "RETURN",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3127,
    "id": "CVE-2011-2348",
    "commit_id": "0b64fff8da9b0681180a123fcd5cb41ff0c7008e",
    "added_lines": [
      "sub isARM",
      "return $Config{archname} =~ /^arm-/"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 8"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "incorrect bounds check",
      "bounds check",
      "unknown vectors"
    ]
  },
  {
    "index": 3128,
    "id": "CVE-2011-2351",
    "commit_id": "bf381d8a02c3d272d4dd879ac719d8993dfb5ad6",
    "added_lines": [
      "registrar_.workers[GROUP_HISTORY] = new HistoryModelWorker",
      "profile_->GetHistoryService(Profile::IMPLICIT_ACCESS"
    ],
    "removed_lines": [
      "if (CommandLine::ForCurrentProcess()->HasSwitch",
      "switches::kEnableSyncTypedUrls) || types.count(syncable::TYPED_URLS))",
      "registrar_.workers[GROUP_HISTORY] =",
      "new HistoryModelWorker",
      "profile_->GetHistoryService(Profile::IMPLICIT_ACCESS"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3129,
    "id": "CVE-2011-2349",
    "commit_id": "e755d9faf5c7d75a8ea290892cb1b5cc07c412ec",
    "added_lines": [
      "~PluginSelectionPolicy"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3138,
    "id": "CVE-2011-1799",
    "commit_id": "5fd35e5359c6345b8709695cd71fba307318e6aa",
    "added_lines": [
      "if (h.isPercent())",
      "LayoutUnit availableHeight",
      "if (isPositioned",
      "availableHeight = containingBlockLogicalHeightForPositioned(containingBlock",
      "else",
      "availableHeight = containingBlock()->availableLogicalHeight",
      "return computeContentBoxLogicalHeight(h.calcValue(availableHeight"
    ],
    "removed_lines": [
      "if (h.isPercent",
      "return computeContentBoxLogicalHeight(h.calcValue(containingBlock()->availableLogicalHeight"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3143,
    "id": "CVE-2011-1292",
    "commit_id": "5f372f899b8709dac700710b5f0f90959dcf9ecb",
    "added_lines": [
      "\"clientversion=\\\"6.1.1715.1442/en (GGLL)\\\" accepts=\\\"e\\\"><form \"",
      "\"signature=\\\"11337937696949187602\\\"><field signature=\\\"412125936\\\"/>\"",
      "\"<field signature=\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/>\"",
      "\"<field signature=\\\"747221617\\\"/><field signature=\\\"4108155786\\\"/></form>\"",
      "ASSERT_EQ(1U, encoded_signatures.size",
      "EXPECT_EQ(kSignature1, encoded_signatures[0]",
      "EXPECT_EQ(kResponse1, encoded_xml",
      "ASSERT_EQ(1U, encoded_signatures.size",
      "EXPECT_EQ(kSignature1, encoded_signatures[0]",
      "EXPECT_EQ(kResponse1, encoded_xml",
      "ASSERT_EQ(2U, encoded_signatures.size",
      "EXPECT_EQ(kSignature1, encoded_signatures[0]",
      "EXPECT_EQ(kSignature2, encoded_signatures[1]",
      "\"clientversion=\\\"6.1.1715.1442/en (GGLL)\\\" accepts=\\\"e\\\"><form \"",
      "\"signature=\\\"11337937696949187602\\\"><field signature=\\\"412125936\\\"/>\"",
      "\"<field signature=\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/>\"",
      "\"<field signature=\\\"747221617\\\"/><field signature=\\\"4108155786\\\"/></form>\"",
      "\"<form signature=\\\"8308881815906226214\\\"><field signature=\\\"412125936\\\"/>\"",
      "\"<field signature=\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/>\"",
      "\"<field signature=\\\"747221617\\\"/><field signature=\\\"4108155786\\\"/><field \"",
      "\"signature=\\\"509334676\\\"/><field signature=\\\"509334676\\\"/><field \"",
      "\"signature=\\\"509334676\\\"/><field signature=\\\"509334676\\\"/><field \"",
      "\"signature=\\\"509334676\\\"/></form></autofillquery>\"",
      "EXPECT_EQ(kResponse2, encoded_xml",
      "ASSERT_EQ(2U, encoded_signatures.size",
      "EXPECT_EQ(kSignature1, encoded_signatures[0]",
      "EXPECT_EQ(kSignature2, encoded_signatures[1]",
      "EXPECT_EQ(kResponse2, encoded_xml",
      "EXPECT_EQ(0U, encoded_signatures.size",
      "EXPECT_EQ(\"\", encoded_xml"
    ],
    "removed_lines": [
      "\"clientversion=\\\"6.1.1715.1442/en (GGLL)\\\"><form signature=\\\"\"",
      "\"11337937696949187602\\\"><field signature=\\\"412125936\\\"/><field \"",
      "\"signature=\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/><field \"",
      "\"signature=\\\"747221617\\\"/><field signature=\\\"4108155786\\\"/></form>\"",
      "ASSERT_EQ(encoded_signatures.size(), 1U",
      "EXPECT_EQ(encoded_signatures[0], kSignature1",
      "EXPECT_EQ(encoded_xml, kResponse1",
      "ASSERT_EQ(encoded_signatures.size(), 1U",
      "EXPECT_EQ(encoded_signatures[0], kSignature1",
      "EXPECT_EQ(encoded_xml, kResponse1",
      "ASSERT_EQ(encoded_signatures.size(), 2U",
      "EXPECT_EQ(encoded_signatures[0], kSignature1",
      "EXPECT_EQ(encoded_signatures[1], kSignature2",
      "\"clientversion=\\\"6.1.1715.1442/en (GGLL)\\\"><form signature=\\\"\"",
      "\"11337937696949187602\\\"><field signature=\\\"412125936\\\"/><field signature=\"",
      "\"\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/><field signature=\\\"\"",
      "\"747221617\\\"/><field signature=\\\"4108155786\\\"/></form><form signature=\\\"\"",
      "\"8308881815906226214\\\"><field signature=\\\"412125936\\\"/><field signature=\"",
      "\"\\\"1917667676\\\"/><field signature=\\\"2226358947\\\"/><field signature=\\\"\"",
      "\"747221617\\\"/><field signature=\\\"4108155786\\\"/><field signature=\\\"\"",
      "\"509334676\\\"/><field signature=\\\"509334676\\\"/><field signature=\\\"\"",
      "\"509334676\\\"/><field signature=\\\"509334676\\\"/><field signature=\\\"\"",
      "\"509334676\\\"/></form></autofillquery>\"",
      "EXPECT_EQ(encoded_xml, kResponse2",
      "ASSERT_EQ(encoded_signatures.size(), 2U",
      "EXPECT_EQ(encoded_signatures[0], kSignature1",
      "EXPECT_EQ(encoded_signatures[1], kSignature2",
      "EXPECT_EQ(encoded_xml, kResponse2",
      "EXPECT_EQ(encoded_signatures.size(), 0U",
      "EXPECT_EQ(encoded_xml, \"\""
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3144,
    "id": "CVE-2011-1293",
    "commit_id": "e06acea54d8b11e4b3735099aa3ce98bae676e76",
    "added_lines": [
      "'media': ['acolwell@chromium.org', 'ajwong+watch@chromium.org',",
      "'hclam+watch@chromium.org', 'scherkus@chromium.org',",
      "'remoting': ['ajwong+watch@chromium.org' 'dmaclach+watch@chromium.org',",
      "'garykac+watch@chromium.org', 'hclam+watch@chromium.org',",
      "'jamiewalch+watch@chromium.org',",
      "'lambroslambrou+watch@chromium.org',",
      "'sergeyu+watch@chromium.org',",
      "'simonmorris+watch@chromium.org',",
      "'wez+watch@chromium.org'],"
    ],
    "removed_lines": [
      "'media': ['acolwell@chromium.org', 'ajwong@chromium.org',",
      "'hclam@chromium.org', 'scherkus@chromium.org',",
      "'remoting': ['ajwong@chromium.org', 'sergeyu@chromium.org',",
      "'hclam@chromium.org', 'dmaclach@chromium.org',",
      "'garykac@chromium.org'],"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3145,
    "id": "CVE-2011-1294",
    "commit_id": "c13183661f98b29764e3db2fd3a2741dc1f1d086",
    "added_lines": [
      "else if (!isEditingName && this._newProperty && event.keyCode === WebInspector.KeyboardShortcut.Keys.Backspace.code)",
      "var selection = window.getSelection",
      "if (selection.isCollapsed && !selection.focusOffset)",
      "event.preventDefault",
      "return \"move-backward\"",
      "} else if (event.keyIdentifier === \"U+0009\") // Tab key."
    ],
    "removed_lines": [
      "else if (event.keyIdentifier === \"U+0009\") // Tab key."
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3146,
    "id": "CVE-2011-1295",
    "commit_id": "ea762e1469b44f01163a349914731a7d4e9c46a4",
    "added_lines": [
      "bug_73048",
      "Memcheck:Cond",
      "fun:_ZN8chromeos16PowerLibraryImplD0Ev",
      "fun:_ZN8chromeos11CrosLibrary7LibraryINS_12PowerLibraryEED1Ev",
      "fun:_ZN8chromeos11CrosLibraryD1Ev",
      "fun:_ZN4base25DefaultLazyInstanceTraitsIN8chromeos11CrosLibraryEE6DeleteEPv",
      "fun:_ZN4base12LazyInstanceIN8chromeos11CrosLibraryENS_25DefaultLazyInstanceTraitsIS2_EEE6OnExitEPv",
      "fun:_ZN4base13AtExitManager19ProcessCallbacksNowEv",
      "fun:_ZN4base13AtExitManagerD1Ev"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS XSS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS XSS ",
    "summary": [
      "unknown vectors",
      "cross-site scripting",
      "xss"
    ]
  },
  {
    "index": 3147,
    "id": "CVE-2011-1296",
    "commit_id": "c90c6ca59378d7e86d1a2f28fe96bada35df1508",
    "added_lines": [
      "#include \"chrome/browser/ui/find_bar/find_tab_helper.h\"",
      "parent_tab->find_tab_helper()->current_find_request_id",
      "find_tab_helper()->StartFinding(search_string, forward, match_case"
    ],
    "removed_lines": [
      "#include \"chrome/browser/ui/find_bar/find_manager.h\"",
      "parent_tab->GetFindManager()->current_find_request_id",
      "GetFindManager()->StartFinding(search_string, forward, match_case"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3187,
    "id": "CVE-2012-5139",
    "commit_id": "9e417dae2833230a651989bb4e56b835355dda39",
    "added_lines": [
      "TEST_F(URLRequestTest, FLAKY_DelayedCookieCallback)",
      "TEST_F(URLRequestTestFTP, FLAKY_UnsafePort)"
    ],
    "removed_lines": [
      "TEST_F(URLRequestTest, DelayedCookieCallback)",
      "TEST_F(URLRequestTestFTP, UnsafePort)"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3188,
    "id": "CVE-2012-5140",
    "commit_id": "a75c45bf1cad925548a75bf88f828443bc8ee27d",
    "added_lines": [
      "scoped_ptr<WebKit::WebURLLoader> for_destruction_only(loader_.release"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3190,
    "id": "CVE-2012-5142",
    "commit_id": "9792d3fed1e580f5e280d105f981b271fd7a607d",
    "added_lines": [
      "\"webkit_revision\": \"160782\","
    ],
    "removed_lines": [
      "\"webkit_revision\": \"160803\","
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3194,
    "id": "CVE-2012-5137",
    "commit_id": "00df34b539768627fdfce51bed2cdf05810e83c4",
    "added_lines": [
      "text run at (57,287) width 70: \"was a very \"",
      "RenderText {#text} at (126,287) size 132x19",
      "text run at (126,287) width 132: \"difficult game indeed. \"",
      "RenderText {#text} at (342,307) size 303x59",
      "text run at (342,307) width 18: \"for\"",
      "text run at (57,327) width 39: \"turns, \"",
      "text run at (57,347) width 122: \"hedgehogs; and in \"",
      "text run at (178,347) width 117: \"a very short time \""
    ],
    "removed_lines": [
      "text run at (57,287) width 69: \"was a very \"",
      "RenderText {#text} at (126,287) size 131x19",
      "text run at (126,287) width 131: \"difficult game indeed. \"",
      "RenderText {#text} at (343,307) size 303x59",
      "text run at (343,307) width 17: \"for\"",
      "text run at (57,327) width 38: \"turns, \"",
      "text run at (57,347) width 121: \"hedgehogs; and in \"",
      "text run at (178,347) width 116: \"a very short time \""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3197,
    "id": "CVE-2012-5131",
    "commit_id": "d0c31f0342cefc46a3b3d80359a9779d044d4c0d",
    "added_lines": [],
    "removed_lines": [
      "#ifndef BlobRegistryProxy_h",
      "#define BlobRegistryProxy_h",
      "#include \"core/platform/network/BlobRegistry.h\"",
      "namespace WebKit { class WebBlobRegistry;",
      "namespace WebCore",
      "class BlobRegistryProxy : public BlobRegistry",
      "public:",
      "BlobRegistryProxy",
      "virtual void registerBlobURL(const KURL&, PassOwnPtr<BlobData>",
      "virtual void registerStreamURL(const KURL&, const WTF::String&",
      "virtual void registerBlobURL(const KURL&, const KURL& srcURL",
      "virtual void addDataToStream(const KURL&, PassRefPtr<RawData>",
      "virtual void finalizeStream(const KURL&",
      "virtual void unregisterBlobURL(const KURL&",
      "private:",
      "virtual ~BlobRegistryProxy() {",
      "WebKit::WebBlobRegistry* m_webBlobRegistry",
      "} // namespace WebCore",
      "#endif // BlobRegistryProxy_h"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3198,
    "id": "CVE-2012-5133",
    "commit_id": "30afcc0242bd789a7b67e1ca8fe829640279a3cf",
    "added_lines": [
      "LayoutUnit minX = std::min(rect.x(), m_layoutOverflow.x",
      "LayoutUnit minY = std::min(rect.y(), m_layoutOverflow.y",
      "m_layoutOverflow.setWidth(maxX - minX",
      "m_layoutOverflow.setHeight(maxY - minY",
      "m_layoutOverflow.setX(maxX - m_layoutOverflow.width",
      "m_layoutOverflow.setY(maxY - m_layoutOverflow.height"
    ],
    "removed_lines": [
      "m_layoutOverflow.setX(std::min(rect.x(), m_layoutOverflow.x",
      "m_layoutOverflow.setY(std::min(rect.y(), m_layoutOverflow.y",
      "m_layoutOverflow.setWidth(maxX - m_layoutOverflow.x",
      "m_layoutOverflow.setHeight(maxY - m_layoutOverflow.y"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3199,
    "id": "CVE-2012-5130",
    "commit_id": "eec1ab47e73c5468a3738bc935f01627b6f47382",
    "added_lines": [
      "\"\\u200a\": \"#8202\", // Hairspace"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3200,
    "id": "CVE-2012-5132",
    "commit_id": "4cc2a2c82e1094c2d2044f4e55ce03ad689bcc42",
    "added_lines": [],
    "removed_lines": [
      "#include \"V8ArrayBufferView.h\""
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3202,
    "id": "CVE-2012-5135",
    "commit_id": "b755ebba29dd405d6f1e4cf70f5bc81ffd33b0f6",
    "added_lines": [
      "bool print_node_in_progress_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3203,
    "id": "CVE-2012-5136",
    "commit_id": "401d30ef93030afbf7e81e53a11b68fc36194502",
    "added_lines": [],
    "removed_lines": [
      "bool m_mayDisplaySeamlesslyWithParent"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a cast of an unspecified variable"
    ]
  },
  {
    "index": 3204,
    "id": "CVE-2012-2900",
    "commit_id": "9597042cad54926f50d58f5ada39205eb734d7be",
    "added_lines": [
      "#if defined(OS_CHROMEOS) && defined(ARCH_CPU_ARMEL"
    ],
    "removed_lines": [
      "#if defined(OS_CHROMEOS"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3206,
    "id": "CVE-2012-5109",
    "commit_id": "6bdf093650147311383b38f0ad26d6d0f091b21f",
    "added_lines": [
      "\"kind\": \"drive#appList\",",
      "\"etag\": \"\\\"Jm4BaSnCWNND-noZsHINRqj4ABC/tuqRBw0lvjUdPtc_2msA1tN4XYZ\\\"\",",
      "\"selfLink\": \"https://www.googleapis.com/drive/v2/apps\",",
      "\"items\": [",
      "\"kind\": \"drive#app\",",
      "\"id\": \"123456788192\",",
      "\"name\": \"Drive app 1\",",
      "\"objectType\": \"\",",
      "\"supportsCreate\": true,",
      "\"supportsImport\": true,",
      "\"installed\": true,",
      "\"authorized\": false,",
      "\"productUrl\": \"https://chrome.google.com/webstore/detail/abcdefghabcdefghabcdefghabcdefgh\",",
      "\"primaryMimeTypes\": [",
      "\"application/vnd.google-apps.drive-sdk.123456788192\"",
      "],",
      "\"secondaryMimeTypes\": [",
      "\"text/html\",",
      "\"text/plain\"",
      "],",
      "\"primaryFileExtensions\": [",
      "\"exe\",",
      "\"com\"",
      "],",
      "\"icons\": [",
      "\"category\": \"application\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/10.png\"",
      "},",
      "\"category\": \"application\",",
      "\"size\": 16,",
      "\"iconUrl\": \"http://www.example.com/16.png\"",
      "},",
      "\"category\": \"document\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/d10.png\"",
      "},",
      "\"category\": \"document\",",
      "\"size\": 16,",
      "\"iconUrl\": \"http://www.example.com/d16.png\"",
      "},",
      "\"category\": \"documentShared\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/ds10.png\"",
      "},",
      "\"category\": \"documentShared\",",
      "\"size\": 16,",
      "\"iconUrl\": \"http://www.example.com/ds16.png\"",
      "]",
      "},",
      "\"kind\": \"drive#app\",",
      "\"id\": \"876543210000\",",
      "\"name\": \"Drive app 2\",",
      "\"objectType\": \"\",",
      "\"supportsCreate\": false,",
      "\"supportsImport\": false,",
      "\"installed\": true,",
      "\"authorized\": false,",
      "\"productUrl\": \"https://chrome.google.com/webstore/detail/hgfedcbahgfedcbahgfedcbahgfedcba\",",
      "\"primaryMimeTypes\": [",
      "\"image/jpeg\",",
      "\"image/png\",",
      "\"application/vnd.google-apps.drive-sdk.876543210000\"",
      "],",
      "\"icons\": [",
      "\"category\": \"application\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/10.png\"",
      "},",
      "\"category\": \"document\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/d10.png\"",
      "},",
      "\"category\": \"documentShared\",",
      "\"size\": 10,",
      "\"iconUrl\": \"http://www.example.com/ds10.png\"",
      "]",
      "]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 3207,
    "id": "CVE-2012-5110",
    "commit_id": "7fa8bd35982700cb2cb6ce22d05128c019a2b587",
    "added_lines": [
      "[ImplementedAs=anonymousIndexedSetter, RaisesException] setter HTMLOptionElement (unsigned long index, [TreatNullAs=anonymousIndexedSetterRemove, TreatUndefinedAs=anonymousIndexedSetterRemove] HTMLOptionElement value"
    ],
    "removed_lines": [
      "[ImplementedAs=anonymousIndexedSetter, RaisesException] setter HTMLOptionElement (unsigned long index, HTMLOptionElement value"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3215,
    "id": "CVE-2012-2887",
    "commit_id": "673d9c0a5e7c1b56f85aec4a9d2c472504cda403",
    "added_lines": [
      "<script>",
      "internals.settings.setRegionBasedColumnsEnabled(true",
      "</script>",
      "<div style=\"-webkit-column-count:2; border:2px solid black; height:300px\">",
      "<div style=\"height:250px\"></div>",
      "<div style=\"position:relative\">",
      "<div style=\"position:absolute;height:200px;width:300px;background-color:lightgray\">",
      "This text should paginate across the columns.<br>",
      "This text should paginate across the columns.<br>",
      "This text should paginate across the columns.<br>",
      "This text should paginate across the columns.<br>",
      "This text should paginate across the columns.<br>",
      "</div>",
      "</div>",
      "<div style=\"height:250px\"></div>",
      "</div>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3216,
    "id": "CVE-2012-2888",
    "commit_id": "3b0d77670a0613f409110817455d2137576b485a",
    "added_lines": [
      "PluginDelegate::OutOfProcessProxy* out_of_process_proxy,"
    ],
    "removed_lines": [
      "scoped_ptr<PluginDelegate::OutOfProcessProxy> out_of_process_proxy,",
      "bool nacl_ipc_proxy_"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3217,
    "id": "CVE-2012-2894",
    "commit_id": "9dc6161824d61e899c282cfe9aa40a4d3031974d",
    "added_lines": [
      "virtual void RequestMediaAccessPermission",
      "content::WebContents* web_contents,",
      "const content::MediaStreamRequest* request,",
      "const content::MediaResponseCallback& callback) OVERRIDE"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3219,
    "id": "CVE-2012-2877",
    "commit_id": "94036902775aa96ea74db583135f4080a125fab9",
    "added_lines": [
      "bool completed_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3238,
    "id": "CVE-2012-2880",
    "commit_id": "fcd3a7a671ecf2d5f46ea34787d27507a914d2f5",
    "added_lines": [
      "Experiments() : sync_tab_favicons(false)",
      "return (sync_tab_favicons == rhs.sync_tab_favicons"
    ],
    "removed_lines": [
      "Experiments() : sync_tabs(false), sync_tab_favicons(false)",
      "return (sync_tabs == rhs.sync_tabs) &&",
      "(sync_tab_favicons == rhs.sync_tab_favicons",
      "bool sync_tabs"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3239,
    "id": "CVE-2012-2882",
    "commit_id": "3fe224d430d863880df0050faaa037b0eb00d3c0",
    "added_lines": [
      "TEST_F(SystemModalContainerLayoutManagerTest, ModalNonTransient)",
      "scoped_ptr<aura::Window> t1(TestWindow::OpenTestWindow(NULL, true",
      "EXPECT_TRUE(wm::IsActiveWindow(t1.get",
      "TransientWindowObserver do1",
      "t1->AddObserver(&do1",
      "EXPECT_EQ(NULL, t1->transient_parent",
      "EXPECT_EQ(GetModalContainer(), t1->parent",
      "EXPECT_TRUE(wm::IsActiveWindow(t1.get",
      "aura::test::EventGenerator e1(Shell::GetPrimaryRootWindow(),",
      "Shell::GetPrimaryRootWindow",
      "e1.ClickLeftButton",
      "EXPECT_TRUE(wm::IsActiveWindow(t1.get",
      "aura::Window* t2 = TestWindow::OpenTestWindow(t1.get(), true",
      "TransientWindowObserver do2",
      "t2->AddObserver(&do2",
      "EXPECT_TRUE(wm::IsActiveWindow(t2",
      "EXPECT_EQ(t1, t2->transient_parent",
      "EXPECT_EQ(GetModalContainer(), t2->parent",
      "aura::test::EventGenerator e2(Shell::GetPrimaryRootWindow(), t1.get",
      "e2.ClickLeftButton",
      "EXPECT_TRUE(wm::IsActiveWindow(t2",
      "t1.reset",
      "EXPECT_TRUE(do1.destroyed",
      "EXPECT_TRUE(do2.destroyed"
    ],
    "removed_lines": [
      "DCHECK(!modal || (modal && parent"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3240,
    "id": "CVE-2012-2885",
    "commit_id": "58feadc64d191d834b68b8218eea4ba12b052b96",
    "added_lines": [
      "bool delete_scheduled_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 3241,
    "id": "CVE-2012-2890",
    "commit_id": "7cf563aba8f4b3bab68e9bfe43824d952241dcf7",
    "added_lines": [],
    "removed_lines": [
      "'host/url_fetcher.cc',",
      "'host/url_fetcher.h',",
      "'host/url_fetcher_unittest.cc',"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3242,
    "id": "CVE-2012-2890",
    "commit_id": "eb4bcacd683a68534bbe2e4d8d6eeafafc7f57ba",
    "added_lines": [
      "virtual void BlockRequestsForRoute(int child_id, int route_id) = 0",
      "virtual void ResumeBlockedRequestsForRoute(int child_id, int route_id) = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3243,
    "id": "CVE-2012-2890",
    "commit_id": "a6f7726de20450074a01493e4e85409ce3f2595a",
    "added_lines": [],
    "removed_lines": [
      "frame()->document()->enforceSandboxFlags(SandboxOrigin"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3246,
    "id": "CVE-2012-2893",
    "commit_id": "2de493f4a1d48952e09230a0c32ccbd45db973b2",
    "added_lines": [
      "#include <libxml/dict.h>",
      "(target->doc->dict == ctxt->dict) &&",
      "xmlDictOwns(ctxt->dict, value))",
      "(target->doc->dict == ctxt->dict) &&",
      "xmlDictOwns(ctxt->dict, value"
    ],
    "removed_lines": [
      "(target->doc->dict == ctxt->dict))",
      "(target->doc->dict == ctxt->dict"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 3259,
    "id": "CVE-2012-2867",
    "commit_id": "b7a161633fd7ecb59093c2c56ed908416292d778",
    "added_lines": [
      "#include <wtf/text/CString.h>",
      "#include <wtf/text/WTFString.h>",
      "#include <wtf/unicode/CharacterNames.h>",
      "static gchar* replaceCharactersForResults(gchar* str",
      "WTF::String uString = WTF::String::fromUTF8(str",
      "uString.replace(objectReplacementCharacter, \"<obj>\"",
      "uString.replace(\"\\n\", \"<\\\\n>\"",
      "return g_strdup(uString.utf8().data",
      "if (!m_element || !ATK_IS_TEXT(m_element",
      "return JSStringCreateWithCharacters(0, 0",
      "GOwnPtr<gchar> text(atk_text_get_text(ATK_TEXT(m_element), 0, -1",
      "GOwnPtr<gchar> textWithReplacedCharacters(replaceCharactersForResults(text.get",
      "GOwnPtr<gchar> axValue(g_strdup_printf(\"AXValue: %s\", textWithReplacedCharacters.get",
      "return JSStringCreateWithUTF8CString(axValue.get"
    ],
    "removed_lines": [
      "return JSStringCreateWithCharacters(0, 0"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3260,
    "id": "CVE-2012-2868",
    "commit_id": "4c1cad7424351039e56a1dd05cb6f4ab82b2934c",
    "added_lines": [
      "begin",
      "require 'json'",
      "require 'highline'",
      "rescue LoadError",
      "$stderr.puts \"Error: some required gems are not installed!\"",
      "$stderr.puts",
      "$stderr.puts \"Try running:\"",
      "$stderr.puts",
      "$stderr.puts \"sudo gem install json\"",
      "$stderr.puts \"sudo gem install highline\"",
      "exit 1",
      "end"
    ],
    "removed_lines": [
      "require 'json'",
      "require 'highline'"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3262,
    "id": "CVE-2012-2870",
    "commit_id": "9939d35f9827ed0929646607cbdb071af627ac38",
    "added_lines": [
      "if (ctxt->error",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly manage memory"
    ]
  },
  {
    "index": 3263,
    "id": "CVE-2012-2870",
    "commit_id": "e741149a6b7872a2bf1f2b6cc0a56e836592fb77",
    "added_lines": [
      "xmlXPathObjectPtr obj = NULL",
      "if (obj",
      "xmlXPathFreeObject(obj"
    ],
    "removed_lines": [
      "xmlXPathObjectPtr obj",
      "xmlXPathFreeObject(obj"
    ],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly manage memory"
    ]
  },
  {
    "index": 3264,
    "id": "CVE-2012-2871",
    "commit_id": "f82a5f8769d79d316cb0119f35d04d8d2d0bfb8a",
    "added_lines": [
      "\"webkit_revision\": \"138673\","
    ],
    "removed_lines": [
      "\"webkit_revision\": \"138638\","
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly support a cast of an unspecified variable"
    ]
  },
  {
    "index": 3280,
    "id": "CVE-2012-2862",
    "commit_id": "92afc45a43336c468720a3143e7f2adfa882fa78",
    "added_lines": [
      "return UserManager::Get()->GetLoggedInUser().display_email"
    ],
    "removed_lines": [
      "return UserManager::Get()->GetLoggedInUser().email"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3281,
    "id": "CVE-2012-2862",
    "commit_id": "c4f40933f2cd7f975af63e56ea4cdcdc6c636f73",
    "added_lines": [
      "return Accelerator(code, mask",
      "const Accelerator accelerator_a(VKEY_A, EF_NONE",
      "const Accelerator accelerator_a(VKEY_A, EF_NONE",
      "const Accelerator accelerator_a(VKEY_A, EF_NONE",
      "const Accelerator accelerator_b(VKEY_B, EF_NONE",
      "const Accelerator accelerator_a(VKEY_A, EF_NONE",
      "const Accelerator accelerator_b(VKEY_B, EF_NONE",
      "const Accelerator accelerator_c(VKEY_C, EF_NONE"
    ],
    "removed_lines": [
      "return Accelerator(code, mask & (1 << 0), mask & (1 << 1), mask & (1 << 2",
      "const Accelerator accelerator_a(VKEY_A, false, false, false",
      "const Accelerator accelerator_a(VKEY_A, false, false, false",
      "const Accelerator accelerator_a(VKEY_A, false, false, false",
      "const Accelerator accelerator_b(VKEY_B, false, false, false",
      "const Accelerator accelerator_a(VKEY_A, false, false, false",
      "const Accelerator accelerator_b(VKEY_B, false, false, false",
      "const Accelerator accelerator_c(VKEY_C, false, false, false"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3284,
    "id": "CVE-2012-2842",
    "commit_id": "e3171b346e6919f4162ea128d0f7b342cf878fd4",
    "added_lines": [
      "SetMultiLine(true"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3285,
    "id": "CVE-2012-2843",
    "commit_id": "fff3191f3a76c8f92bf1f8b20e8757d788308096",
    "added_lines": [
      "# Ref tests added in r130592 that are failing on both EFL and GTK ports",
      "webkit.org/b/98613 css3/masking/clip-path-reference-userSpaceOnUse.html [ ImageOnlyFailure ]",
      "webkit.org/b/98613 css3/masking/clip-path-reference.html [ ImageOnlyFailure ]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3286,
    "id": "CVE-2012-2844",
    "commit_id": "46afbe7f7f55280947e9c06c429a68983ba9d8dd",
    "added_lines": [
      "static int window_width = 800",
      "static int window_height = 600",
      "ECORE_GETOPT_STORE_STR",
      "('s', \"window-size\", \"window size in following format (width)x(height).\"),",
      "evas_object_resize(app_data->window, window_width, window_height",
      "static void",
      "parse_window_size(const char *input_string, int *width, int *height",
      "static const unsigned max_length = 4",
      "int parsed_width",
      "int parsed_height",
      "char **arr",
      "unsigned elements",
      "arr = eina_str_split_full(input_string, \"x\", 0, &elements",
      "if (elements == 2 && (strlen(arr[0]) <= max_length) && (strlen(arr[1]) <= max_length))",
      "parsed_width = atoi(arr[0]",
      "if (width && parsed_width",
      "parsed_height = atoi(arr[1]",
      "if (height && parsed_height",
      "free(arr[0]",
      "free(arr",
      "char *window_size_string = NULL",
      "ECORE_GETOPT_VALUE_STR(window_size_string),",
      "if (window_size_string",
      "parse_window_size(window_size_string, &window_width, &window_height"
    ],
    "removed_lines": [
      "static const int DEFAULT_WIDTH = 800",
      "static const int DEFAULT_HEIGHT = 600",
      "evas_object_resize(app_data->window, DEFAULT_WIDTH, DEFAULT_HEIGHT"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "MEM_FREE",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "MEM_FREE",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly handle JavaScript code"
    ]
  },
  {
    "index": 3288,
    "id": "CVE-2012-2816",
    "commit_id": "48fae61b8a6c9b741f001d478c595b6c7c0af4d9",
    "added_lines": [
      "#include \"base/win/windows_version.h\"",
      "namespace",
      "void TestProcessAccess(sandbox::TestRunner* runner, DWORD target)",
      "const wchar_t *kCommandTemplate = L\"OpenProcessCmd %d %d\"",
      "wchar_t command[1024] = {0",
      "wsprintf(command, kCommandTemplate, target, PROCESS_CREATE_THREAD",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_DUP_HANDLE",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_SET_INFORMATION",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_VM_OPERATION",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_VM_READ",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_VM_WRITE",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, PROCESS_QUERY_INFORMATION",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, WRITE_DAC",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, WRITE_OWNER",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "wsprintf(command, kCommandTemplate, target, READ_CONTROL",
      "EXPECT_EQ(sandbox::SBOX_TEST_DENIED, runner->RunTest(command",
      "}  // namespace",
      "TEST(ValidationSuite, TestProcessDenyLockdown)",
      "TestRunner target",
      "target.SetAsynchronous(true",
      "EXPECT_EQ(SBOX_TEST_SUCCEEDED, target.RunTest(L\"SleepCmd 30000\"",
      "TestProcessAccess(&runner, target.process_id",
      "TEST(ValidationSuite, TestProcessDenyLowIntegrity)",
      "if (base::win::Version() < base::win::VERSION_VISTA",
      "return",
      "TestRunner runner",
      "TestRunner target",
      "wchar_t command[1024] = {0",
      "target.SetAsynchronous(true",
      "target.GetPolicy()->SetDelayedIntegrityLevel(INTEGRITY_LEVEL_LOW",
      "runner.GetPolicy()->SetIntegrityLevel(INTEGRITY_LEVEL_LOW",
      "runner.GetPolicy()->SetTokenLevel(USER_RESTRICTED_SAME_ACCESS,",
      "USER_INTERACTIVE",
      "EXPECT_EQ(SBOX_TEST_SUCCEEDED, target.RunTest(L\"SleepCmd 30000\"",
      "TestProcessAccess(&runner, target.process_id",
      "TEST(ValidationSuite, TestProcessDenyBelowLowIntegrity)",
      "if (base::win::Version() < base::win::VERSION_VISTA",
      "return",
      "TestRunner runner",
      "TestRunner target",
      "wchar_t command[1024] = {0",
      "target.SetAsynchronous(true",
      "target.GetPolicy()->SetIntegrityLevel(INTEGRITY_LEVEL_LOW",
      "target.GetPolicy()->SetTokenLevel(USER_RESTRICTED_SAME_ACCESS,",
      "USER_INTERACTIVE",
      "runner.GetPolicy()->SetDelayedIntegrityLevel(INTEGRITY_LEVEL_UNTRUSTED",
      "runner.GetPolicy()->SetTokenLevel(USER_RESTRICTED_SAME_ACCESS,",
      "USER_INTERACTIVE",
      "EXPECT_EQ(SBOX_TEST_SUCCEEDED, target.RunTest(L\"SleepCmd 30000\"",
      "TestProcessAccess(&runner, target.process_id"
    ],
    "removed_lines": [
      "TEST(ValidationSuite, TestProcess)",
      "wsprintf(command, L\"OpenProcessCmd %d\", ::GetCurrentProcessId",
      "EXPECT_EQ(SBOX_TEST_DENIED, runner.RunTest(command"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3289,
    "id": "CVE-2012-2816",
    "commit_id": "cd0bd79d6ebdb72183e6f0833673464cc10b3600",
    "added_lines": [
      "#include \"base/process.h\"",
      "#if defined(OS_WIN",
      "#include \"content/common/sandbox_policy.h\"",
      "#endif",
      "TransportDIB::Handle* handle_out,",
      "base::ProcessId peer_pid)",
      "#elif defined(OS_WIN",
      "sandbox::BrokerDuplicateHandle(handle_in, peer_pid, handle_out,",
      "FILE_MAP_READ | FILE_MAP_WRITE, 0",
      "CHECK(*handle_out != NULL",
      "&param.windowless_buffer0,",
      "channel_host_->peer_pid",
      "&param.windowless_buffer1,",
      "channel_host_->peer_pid",
      "&param.background_buffer,",
      "channel_host_->peer_pid"
    ],
    "removed_lines": [
      "TransportDIB::Handle* handle_out)",
      "&param.windowless_buffer0",
      "&param.windowless_buffer1",
      "&param.background_buffer"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3290,
    "id": "CVE-2012-2817",
    "commit_id": "9b9a9f33f0a26f40d083be85a539dd7963adfc9b",
    "added_lines": [
      "chrome_worker_thread_.Stop"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3291,
    "id": "CVE-2012-2818",
    "commit_id": "788e55493bded3addc2e501646893d7a26c812f1",
    "added_lines": [
      "\"/trunk/deps/third_party/gold@120645\","
    ],
    "removed_lines": [
      "\"/trunk/deps/third_party/gold@120423\","
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3292,
    "id": "CVE-2012-2819",
    "commit_id": "651bc8d5bc1564e2984f6ac604560de282f4ed77",
    "added_lines": [
      "TEST_F(OfflineLoadPageTest, DISABLED_OfflinePageProceed)",
      "TEST_F(OfflineLoadPageTest, DISABLED_OfflinePageDontProceed)"
    ],
    "removed_lines": [
      "TEST_F(OfflineLoadPageTest, OfflinePageProceed)",
      "TEST_F(OfflineLoadPageTest, OfflinePageDontProceed)"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "assertion failure"
    ]
  },
  {
    "index": 3293,
    "id": "CVE-2012-2820",
    "commit_id": "dbcfe72cb16222c9f7e7907fcc5f35b27cc25331",
    "added_lines": [],
    "removed_lines": [
      "bool GetURLRowForAutocompleteMatch(Profile* profile,",
      "const AutocompleteMatch& match,",
      "history::URLRow* url_row)",
      "DCHECK(url_row",
      "HistoryService* history_service =",
      "profile->GetHistoryService(Profile::EXPLICIT_ACCESS",
      "if (!history_service",
      "return false",
      "history::URLDatabase* url_db = history_service->InMemoryDatabase",
      "return url_db && (url_db->GetRowForURL(match.destination_url, url_row) != 0"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3295,
    "id": "CVE-2012-2823",
    "commit_id": "3511b6ec1e955578ddb6e90f0cc99f824e36026e",
    "added_lines": [],
    "removed_lines": [
      "class ThreadedCompositorTest : public GpuFeatureTest",
      "public:",
      "virtual void SetUpCommandLine(CommandLine* command_line)",
      "GpuFeatureTest::SetUpCommandLine(command_line",
      "command_line->AppendSwitch(switches::kEnableThreadedCompositing",
      "IN_PROC_BROWSER_TEST_F(ThreadedCompositorTest, ThreadedCompositor)",
      "const FilePath url(FILE_PATH_LITERAL(\"feature_compositing.html\"",
      "RunTest(url, EXPECT_GPU_SWAP_BUFFERS"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3296,
    "id": "CVE-2012-2824",
    "commit_id": "7c2785fab1685c8735288dfbbbb617d9c4f5d8b2",
    "added_lines": [
      "bool hasAlpha = image->isBitmapImage() ? image->currentFrameHasAlpha() : true"
    ],
    "removed_lines": [
      "bool hasAlpha = image->isBitmapImage() ? static_cast<BitmapImage*>(image)->frameHasAlphaAtIndex(0) : true"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3297,
    "id": "CVE-2012-2826",
    "commit_id": "e06c774f7cea5d52fda77b89d6536e3eeb039c7e",
    "added_lines": [
      "<link rel=\"stylesheet\" href=\"chrome://resources/css/chrome_shared2.css\">"
    ],
    "removed_lines": [
      "<link rel=\"stylesheet\" href=\"../shared/css/chrome_shared2.css\">"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3298,
    "id": "CVE-2012-2827",
    "commit_id": "fa590d4d1e88c74356f8d3665571aeff00b681b7",
    "added_lines": [
      "- (void)rightMouseDown:(NSEvent*)event",
      "scoped_nsobject<DownloadItemController> ref([controller_ retain]",
      "[super rightMouseDown:event]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3300,
    "id": "CVE-2012-2829",
    "commit_id": "7825931bdacb66eb2f41031e48484cd29dc02843",
    "added_lines": [],
    "removed_lines": [
      "'chrome.gyp:installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',",
      "'installer_util_strings',"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3302,
    "id": "CVE-2012-2831",
    "commit_id": "5b533aac9a9469ef6b38699fa89ab1f15cd5e1db",
    "added_lines": [
      "(Var(\"googlecode_url\") % \"ots\") + \"/trunk@87\","
    ],
    "removed_lines": [
      "(Var(\"googlecode_url\") % \"ots\") + \"/trunk@83\","
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3303,
    "id": "CVE-2012-2832",
    "commit_id": "6fbd919a944a34bc9f9a4585d6ec6b6cb538dd91",
    "added_lines": [
      "var chunk = spec.substr(chunkIndex * chunkSize, chunkSize"
    ],
    "removed_lines": [
      "var chunk = spec.substring(chunkIndex * chunkSize, chunkSize"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not initialize an unspecified pointer"
    ]
  },
  {
    "index": 3306,
    "id": "CVE-2012-2825",
    "commit_id": "bb7bfb81c158268fb242292b7e0fbd2d3b933d09",
    "added_lines": [
      "(((n) != NULL) && ((n)->type == XML_ELEMENT_NODE) &&                \\",
      "((n)->ns != NULL) && (xmlStrEqual((n)->ns->href, XSLT_NAMESPACE"
    ],
    "removed_lines": [
      "(((n) != NULL) && ((n)->ns != NULL) &&\t\t\t\t\\",
      "(xmlStrEqual((n)->ns->href, XSLT_NAMESPACE"
    ],
    "cause": [
      "Logical Flaws",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "incorrect read operation",
      "unspecified vectors"
    ]
  },
  {
    "index": 3314,
    "id": "CVE-2011-3954",
    "commit_id": "c7eb5178d897f48850fe8ba8ee7a5b4095825095",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3315,
    "id": "CVE-2011-3955",
    "commit_id": "4c69e5e58bdf8717140328e5528325af56e7211e",
    "added_lines": [],
    "removed_lines": [
      "static const char* rangeExceptionName(int exceptionCode",
      "static const char* eventExceptionName(int exceptionCode",
      "static const char* xmlHttpRequestExceptionName(int exceptionCode",
      "static const char* domExceptionName(int exceptionCode",
      "static const char* xpathExceptionName(int exceptionCode",
      "#if ENABLE(SVG",
      "static const char* svgExceptionName(int exceptionCode",
      "#endif",
      "#if ENABLE(SQL_DATABASE",
      "static const char* sqlExceptionName(int exceptionCode",
      "#endif"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3317,
    "id": "CVE-2011-3957",
    "commit_id": "dd56d3c6adf5abba717a6868dde0e13de74d0af6",
    "added_lines": [
      "['include', '^browser/ui/views/find_bar_host_aura.cc'],"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3321,
    "id": "CVE-2011-3965",
    "commit_id": "7352baf29ac44d23cd580c2edfa8faf4e140a480",
    "added_lines": [
      "if (!cert_chain_context",
      "break",
      "if (!simple_chain",
      "break"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3322,
    "id": "CVE-2011-3967",
    "commit_id": "76e6e7c63aaa8e30e4143b8db9fc7d754812e718",
    "added_lines": [
      "if (!data_length",
      "return \"\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Unspecified vulnerability"
    ]
  },
  {
    "index": 3332,
    "id": "CVE-2011-3927",
    "commit_id": "58ffd25567098d8ce9443b7c977382929d163b3d",
    "added_lines": [
      "path->setIsConvex(true",
      "But webkit can sometimes send us non-convex 4-point values, so we mark the path's",
      "convexity as unknown, so it will get computed by skia at draw time.",
      "See crbug.com 108605",
      "SkPath::Convexity convexity = SkPath::kConvex_Convexity",
      "if (numPoints == 4",
      "convexity = SkPath::kUnknown_Convexity",
      "path->setConvexity(convexity"
    ],
    "removed_lines": [
      "path->setIsConvex(true"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3335,
    "id": "CVE-2011-3921",
    "commit_id": "cd06fcea76ad449f655af55fcc1e4bb07f2cd009",
    "added_lines": [
      "return static_cast<unsigned>(lround(to > from ? static_cast<double>(from) + static_cast<double>(to - from) * progress : static_cast<double>(from) - static_cast<double>(from - to) * progress"
    ],
    "removed_lines": [
      "return static_cast<unsigned>(lround(static_cast<double>(from) + static_cast<double>(to - from) * progress"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3338,
    "id": "CVE-2011-3103",
    "commit_id": "b2dfe7c175fb21263f06eb586f1ed235482a3281",
    "added_lines": [
      "EWK_FRAME_SD_GET(ewk_view_frame_main_get(smartData->view), mainSmartData",
      "if (mainSmartData->frame == smartData->frame) // applying only for main frame is enough (will traverse through frame tree",
      "smartData->frame->loader()->detachFromParent"
    ],
    "removed_lines": [
      "smartData->frame->loader()->detachFromParent",
      "smartData->frame->loader()->cancelAndClear"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform garbage collection"
    ]
  },
  {
    "index": 3340,
    "id": "CVE-2011-3105",
    "commit_id": "d6cc2749d2f90acc2d92a526c1d2cbebbc101a19",
    "added_lines": [],
    "removed_lines": [
      "#if defined(OS_CHROMEOS",
      "static const int kChromeOSNetworkChangeReactionDelayHackMsec = 5000",
      "#endif  // OS_CHROMEOS",
      "#if defined (OS_CHROMEOS",
      "MessageLoop::current()->PostDelayedTask",
      "FROM_HERE,",
      "base::Bind(&SyncInternal::OnIPAddressChangedImpl,",
      "weak_ptr_factory_.GetWeakPtr()),",
      "kChromeOSNetworkChangeReactionDelayHackMsec",
      "#else",
      "#endif  // defined(OS_CHROMEOS"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3342,
    "id": "CVE-2011-3107",
    "commit_id": "89e4098439f73cb5c16996511cbfdb171a26e173",
    "added_lines": [
      "m_view->componentComplete"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3344,
    "id": "CVE-2011-3109",
    "commit_id": "f3030ed0e4a5832b62dc0d434c08be21203fd17b",
    "added_lines": [
      "AutocompleteMatch::HISTORY_TITLE : AutocompleteMatch::HISTORY_URL"
    ],
    "removed_lines": [
      "AutocompleteMatch::HISTORY_URL : AutocompleteMatch::HISTORY_TITLE"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a cast of an unspecified variable"
    ]
  },
  {
    "index": 3352,
    "id": "CVE-2011-3112",
    "commit_id": "8ba4467ff49b84b46ba189a9211f147c53634c58",
    "added_lines": [],
    "removed_lines": [
      "Computed style of an element whose parent's 'display' value is 'none':",
      "background-attachment: scroll",
      "background-clip: border-box",
      "background-color: rgb(0, 128, 0",
      "background-image: none",
      "background-origin: padding-box",
      "background-position: 0% 0%",
      "background-repeat: repeat",
      "background-size: auto",
      "border-bottom-color: rgb(0, 0, 0",
      "border-bottom-left-radius: 0px",
      "border-bottom-right-radius: 0px",
      "border-bottom-style: none",
      "border-bottom-width: 0px",
      "border-collapse: separate",
      "border-image-outset: 0px",
      "border-image-repeat: stretch",
      "border-image-slice: 100%",
      "border-image-source: none",
      "border-image-width: 1",
      "border-left-color: rgb(0, 0, 0",
      "border-left-style: none",
      "border-left-width: 0px",
      "border-right-color: rgb(0, 0, 0",
      "border-right-style: none",
      "border-right-width: 0px",
      "border-top-color: rgb(0, 0, 0",
      "border-top-left-radius: 0px",
      "border-top-right-radius: 0px",
      "border-top-style: solid",
      "border-top-width: 16px",
      "bottom: auto",
      "box-shadow: none",
      "box-sizing: content-box",
      "caption-side: top",
      "clear: none",
      "clip: auto",
      "color: rgb(0, 0, 0",
      "cursor: auto",
      "direction: ltr",
      "display: block",
      "empty-cells: show",
      "float: none",
      "font-size: 16px",
      "font-style: normal",
      "font-variant: normal",
      "font-weight: normal",
      "height: 100px",
      "image-rendering: auto",
      "left: auto",
      "letter-spacing: normal",
      "line-height: normal",
      "list-style-image: none",
      "list-style-position: outside",
      "list-style-type: disc",
      "margin-bottom: 0px",
      "margin-left: auto",
      "margin-right: 0px",
      "margin-top: 0px",
      "max-height: none",
      "max-width: none",
      "min-height: 0px",
      "min-width: 0px",
      "opacity: 1",
      "orphans: 2",
      "outline-color: rgb(0, 0, 0",
      "outline-style: none",
      "outline-width: 0px",
      "overflow-x: visible",
      "overflow-y: visible",
      "padding-bottom: 0px",
      "padding-left: 0px",
      "padding-right: 0px",
      "padding-top: 0px",
      "page-break-after: auto",
      "page-break-before: auto",
      "page-break-inside: auto",
      "pointer-events: auto",
      "position: static",
      "resize: none",
      "right: auto",
      "speak: normal",
      "table-layout: auto",
      "tab-size: 8",
      "text-align: start",
      "text-decoration: none",
      "text-indent: 0px",
      "text-rendering: auto",
      "text-shadow: none",
      "text-overflow: clip",
      "text-transform: none",
      "top: auto",
      "unicode-bidi: normal",
      "vertical-align: baseline",
      "visibility: visible",
      "white-space: normal",
      "widows: 2",
      "width: 50%",
      "word-break: normal",
      "word-spacing: 0px",
      "word-wrap: normal",
      "z-index: auto",
      "zoom: 1",
      "-webkit-animation-delay: 0s",
      "-webkit-animation-direction: normal",
      "-webkit-animation-duration: 0s",
      "-webkit-animation-fill-mode: none",
      "-webkit-animation-iteration-count: 1",
      "-webkit-animation-name: none",
      "-webkit-animation-play-state: running",
      "-webkit-animation-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1",
      "-webkit-appearance: none",
      "-webkit-backface-visibility: visible",
      "-webkit-background-clip: border-box",
      "-webkit-background-composite: source-over",
      "-webkit-background-origin: padding-box",
      "-webkit-background-size: auto",
      "-webkit-border-fit: border",
      "-webkit-border-horizontal-spacing: 0px",
      "-webkit-border-image: none",
      "-webkit-border-vertical-spacing: 0px",
      "-webkit-box-align: stretch",
      "-webkit-box-decoration-break: slice",
      "-webkit-box-direction: normal",
      "-webkit-box-flex: 0",
      "-webkit-box-flex-group: 1",
      "-webkit-box-lines: single",
      "-webkit-box-ordinal-group: 1",
      "-webkit-box-orient: horizontal",
      "-webkit-box-pack: start",
      "-webkit-box-reflect: none",
      "-webkit-box-shadow: none",
      "-webkit-color-correction: default",
      "-webkit-column-break-after: auto",
      "-webkit-column-break-before: auto",
      "-webkit-column-break-inside: auto",
      "-webkit-column-axis: auto",
      "-webkit-column-count: auto",
      "-webkit-column-gap: normal",
      "-webkit-column-rule-color: rgb(0, 0, 0",
      "-webkit-column-rule-style: none",
      "-webkit-column-rule-width: 0px",
      "-webkit-column-span: 1",
      "-webkit-column-width: auto",
      "-webkit-font-kerning: auto",
      "-webkit-font-smoothing: auto",
      "-webkit-font-variant-ligatures: normal",
      "-webkit-grid-column: auto",
      "-webkit-grid-row: auto",
      "-webkit-highlight: none",
      "-webkit-hyphenate-character: auto",
      "-webkit-hyphenate-limit-after: auto",
      "-webkit-hyphenate-limit-before: auto",
      "-webkit-hyphenate-limit-lines: no-limit",
      "-webkit-hyphens: manual",
      "-webkit-line-align: none",
      "-webkit-line-box-contain: block inline replaced",
      "-webkit-line-break: normal",
      "-webkit-line-clamp: none",
      "-webkit-line-grid: none",
      "-webkit-line-snap: none",
      "-webkit-locale: auto",
      "-webkit-margin-before-collapse: collapse",
      "-webkit-margin-after-collapse: collapse",
      "-webkit-marquee-direction: auto",
      "-webkit-marquee-increment: 6px",
      "-webkit-marquee-repetition: infinite",
      "-webkit-marquee-style: scroll",
      "-webkit-mask-attachment: scroll",
      "-webkit-mask-box-image: none",
      "-webkit-mask-box-image-outset: 0px",
      "-webkit-mask-box-image-repeat: stretch",
      "-webkit-mask-box-image-slice: 0 fill",
      "-webkit-mask-box-image-source: none",
      "-webkit-mask-box-image-width: auto",
      "-webkit-mask-clip: border-box",
      "-webkit-mask-composite: source-over",
      "-webkit-mask-image: none",
      "-webkit-mask-origin: border-box",
      "-webkit-mask-position: 0% 0%",
      "-webkit-mask-repeat: repeat",
      "-webkit-mask-size: auto",
      "-webkit-nbsp-mode: normal",
      "-webkit-perspective: none",
      "-webkit-perspective-origin: 50% 50%",
      "-webkit-print-color-adjust: economy",
      "-webkit-rtl-ordering: logical",
      "-webkit-text-combine: none",
      "-webkit-text-decorations-in-effect: none",
      "-webkit-text-emphasis-color: rgb(0, 0, 0",
      "-webkit-text-emphasis-position: over",
      "-webkit-text-emphasis-style: none",
      "-webkit-text-fill-color: rgb(0, 0, 0",
      "-webkit-text-orientation: vertical-right",
      "-webkit-text-security: none",
      "-webkit-text-stroke-color: rgb(0, 0, 0",
      "-webkit-text-stroke-width: 0px",
      "-webkit-transform: none",
      "-webkit-transform-origin: 50% 50%",
      "-webkit-transform-style: flat",
      "-webkit-transition-delay: 0s",
      "-webkit-transition-duration: 0s",
      "-webkit-transition-property: all",
      "-webkit-transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1",
      "-webkit-user-drag: auto",
      "-webkit-user-modify: read-only",
      "-webkit-user-select: text",
      "-webkit-writing-mode: horizontal-tb",
      "clip-path: none",
      "clip-rule: nonzero",
      "mask: none",
      "filter: none",
      "flood-color: rgb(0, 0, 0",
      "flood-opacity: 1",
      "lighting-color: rgb(255, 255, 255",
      "stop-color: rgb(0, 0, 0",
      "stop-opacity: 1",
      "color-interpolation: srgb",
      "color-interpolation-filters: linearrgb",
      "color-rendering: auto",
      "fill: #000000",
      "fill-opacity: 1",
      "fill-rule: nonzero",
      "marker-end: none",
      "marker-mid: none",
      "marker-start: none",
      "shape-rendering: auto",
      "stroke: none",
      "stroke-dasharray: none",
      "stroke-dashoffset: 0",
      "stroke-linecap: butt",
      "stroke-linejoin: miter",
      "stroke-miterlimit: 4",
      "stroke-opacity: 1",
      "stroke-width: 1",
      "alignment-baseline: auto",
      "baseline-shift: baseline",
      "dominant-baseline: auto",
      "kerning: 0",
      "text-anchor: start",
      "writing-mode: lr-tb",
      "glyph-orientation-horizontal: 0deg",
      "glyph-orientation-vertical: auto",
      "-webkit-svg-shadow: none",
      "vector-effect: none",
      "background-position-x: 0%",
      "background-position-y: 0%",
      "border-spacing: 0px 0px",
      "overflow: visible",
      "-webkit-mask-position-x: 0%",
      "-webkit-mask-position-y: 0%",
      "-webkit-text-size-adjust: auto",
      "After changing grandparent's 'color' and the parent's 'font-size' inherited properties:",
      "border-top-width: 18px",
      "color: rgb(0, 0, 255",
      "After changing the parent's 'display' property to 'block', so that the child gets a renderer:",
      "height: 100px",
      "margin-left: 350px",
      "width: 350px",
      "After changing the parent's 'display' property back to 'none':",
      "height: 100px",
      "margin-left: auto",
      "width: 50%"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3353,
    "id": "CVE-2011-3113",
    "commit_id": "f78310a2b267f9b4e8fcdc0647994527566d8e0e",
    "added_lines": [
      "BUGWK96041 LINUX : http/tests/cache/stopped-revalidation.html = MISSING PASS",
      "BUGWK96041 LINUX : http/tests/cache/subresource-expiration-1.html = MISSING PASS"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a cast of an unspecified variable"
    ]
  },
  {
    "index": 3361,
    "id": "CVE-2011-3089",
    "commit_id": "53fb9327f16cc04fa541731a1c44cae9c4d2e684",
    "added_lines": [
      "-webkit-padding-start: 52px",
      "-webkit-padding-start: 104px",
      "-webkit-padding-start: 156px",
      "left: 72px",
      "right: 72px",
      "left: 124px",
      "right: 124px",
      "left: 176px",
      "right: 176px"
    ],
    "removed_lines": [
      "-webkit-padding-start: 40px",
      "-webkit-padding-start: 80px",
      "-webkit-padding-start: 120px",
      "left: 60px",
      "right: 60px",
      "left: 100px",
      "right: 100px",
      "left: 140px",
      "right: 140px"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3362,
    "id": "CVE-2011-3090",
    "commit_id": "29b52da8a1c8de2c9c712d3d8ac6397d25425e55",
    "added_lines": [
      "font-size: 12px"
    ],
    "removed_lines": [
      "font: normal 12px 'Open Sans'"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.6,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3363,
    "id": "CVE-2011-3091",
    "commit_id": "cc7cde43832b547cdab856fe1bedc9514ca38e13",
    "added_lines": [
      "IndexedDBDispatcher* const HAS_BEEN_DELETED =",
      "reinterpret_cast<IndexedDBDispatcher*>(0x1",
      "g_idb_dispatcher_tls.Pointer()->Set(HAS_BEEN_DELETED",
      "if (g_idb_dispatcher_tls.Pointer()->Get() == HAS_BEEN_DELETED)",
      "NOTREACHED() << \"Re-instantiating TLS IndexedDBDispatcher.\"",
      "g_idb_dispatcher_tls.Pointer()->Set(NULL"
    ],
    "removed_lines": [
      "g_idb_dispatcher_tls.Pointer()->Set(NULL"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3364,
    "id": "CVE-2011-3092",
    "commit_id": "bf68fb7c20d54a14460ed886d803b5f0e69fa429",
    "added_lines": [
      "start_result = self._port._run_adb_command(['shell', 'am', 'start', '-e', 'RunInSubThread', '-n', DRT_ACTIVITY_FULL_NAME]"
    ],
    "removed_lines": [
      "start_result = self._port._run_adb_command(['shell', 'am', 'start', '-n', DRT_ACTIVITY_FULL_NAME]"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "invalid write"
    ]
  },
  {
    "index": 3365,
    "id": "CVE-2011-3093",
    "commit_id": "62796d475406887ddde0b7050f06b9c1cd3e5675",
    "added_lines": [
      "BUGWK91252 WIN : http/tests/w3c/webperf/approved/navigation-timing/html/test_performance_attributes_exist_in_object.html = PASS TEXT",
      "BUGWK91252 WIN : http/tests/w3c/webperf/approved/navigation-timing/html5/test_performance_attributes_exist_in_object.html = PASS TEXT"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3366,
    "id": "CVE-2011-3094",
    "commit_id": "b8573aa643b03a59f4e2c99c72d3511a11cfb0b6",
    "added_lines": [
      "#include \"ui/aura/gestures/gesture_configuration.h\"",
      "if (abs(distance - pinch_distance_current_) <",
      "GestureConfiguration::minimum_pinch_update_distance_in_pixels())",
      "if (!points_[0].DidScroll(event,",
      "GestureConfiguration::minimum_distance_for_pinch_scroll_in_pixels()) ||",
      "!points_[1].DidScroll(event,",
      "GestureConfiguration::minimum_distance_for_pinch_scroll_in_pixels"
    ],
    "removed_lines": [
      "namespace",
      "const float kMinimumPinchUpdateDistance = 5;  // in pixels",
      "const float kMinimumDistanceForPinchScroll = 20",
      "}  // namespace",
      "if (abs(distance - pinch_distance_current_) < kMinimumPinchUpdateDistance)",
      "if (!points_[0].DidScroll(event, kMinimumDistanceForPinchScroll) ||",
      "!points_[1].DidScroll(event, kMinimumDistanceForPinchScroll"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3367,
    "id": "CVE-2011-3095",
    "commit_id": "939327f2c4d9d9e8e6e48251c4444ffd830fbbec",
    "added_lines": [
      "bug_115647",
      "Memcheck:Leak",
      "fun:_Znw*",
      "...",
      "fun:_ZNSt3mapISsPN9talk_base7NetworkESt4lessISsESaISt4pairIKSsS2_EEEixERS6_",
      "fun:_ZN9talk_base18NetworkManagerBase16MergeNetworkListERKSt6vectorIPNS_7NetworkESaIS3_EE",
      "fun:_ZN9talk_base19BasicNetworkManager16DoUpdateNetworksEv",
      "fun:_ZN9talk_base19BasicNetworkManager9OnMessageEPNS_7MessageE",
      "fun:_ZThn64_N9talk_base19BasicNetworkManager9OnMessageEPNS_7MessageE"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "unknown vectors",
      "out-of-bounds write"
    ]
  },
  {
    "index": 3368,
    "id": "CVE-2011-3096",
    "commit_id": "9fe90fe465e046a219411b192d8b08086faae39c",
    "added_lines": [
      "namespace ui",
      "class GtkSignalRegistrar",
      "scoped_ptr<ui::GtkSignalRegistrar> signal_registrar_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3369,
    "id": "CVE-2011-3097",
    "commit_id": "027429ee5abe6e2fb5e3b2b4542f0a6fe0dbc12d",
    "added_lines": [
      "ResetContentStateReadingMetrics",
      "WriteContentStateReadingMetrics"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 3370,
    "id": "CVE-2011-3097",
    "commit_id": "7c2dc71e489b94bfb6793d47e87909654bcb1f9d",
    "added_lines": [
      "removeFileOrDirectory: function(entry, onSuccess, onError)",
      "if (entry.isDirectory",
      "entry.removeRecursively(onSuccess, onError",
      "else",
      "entry.remove(onSuccess, onError",
      "},"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 3372,
    "id": "CVE-2011-3099",
    "commit_id": "3bbc818ed1a7b63b8290bbde9ae975956748cb8a",
    "added_lines": [
      "static const unsigned defaultAttachedHeight = 300",
      "unsigned maximumAttachedHeight = platformInspectedWindowHeight() * 3 / 4",
      "platformSetAttachedWindowHeight(std::max(minimumAttachedHeight, std::min(defaultAttachedHeight, maximumAttachedHeight"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3373,
    "id": "CVE-2011-3100",
    "commit_id": "020dc9b4840ef1e702ca0a1f8575abd042b2dd27",
    "added_lines": [
      "Privacy-related settings"
    ],
    "removed_lines": [
      "Privacy-related settings."
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read",
      "unspecified vectors"
    ]
  },
  {
    "index": 3375,
    "id": "CVE-2011-3102",
    "commit_id": "4c46d7a5b0af9b7d320e709291b270ab7cf07e83",
    "added_lines": [
      "if ((NXT(1) == ')') || (NXT(1) == '(') || (NXT(1) == '^'))",
      "NEXT"
    ],
    "removed_lines": [
      "NEXT",
      "if ((CUR == ')') || (CUR == '(') || (CUR == '^'))",
      "} else",
      "} else"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "off-by-one",
      "unknown vectors",
      "out-of-bounds write",
      "off-by-one error"
    ]
  },
  {
    "index": 3376,
    "id": "CVE-2011-3050",
    "commit_id": "3da579b85a36e95c03d06b7c4ce9d618af4107bf",
    "added_lines": [
      "protected:",
      "virtual bool AcceleratorPressed(const views::Accelerator& accelerator"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3377,
    "id": "CVE-2011-3045",
    "commit_id": "4cf106cdb83dd6b35d3b26d06cc67d1d2d99041e",
    "added_lines": [
      "png_size_t copy = output_size - count",
      "if ((png_size_t) avail < copy) copy = (png_size_t) avail"
    ],
    "removed_lines": [
      "int copy = output_size - count",
      "if (avail < copy) copy = avail"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS Exec Code ",
    "summary": [
      "integer signedness error"
    ]
  },
  {
    "index": 3378,
    "id": "CVE-2011-3051",
    "commit_id": "d66c757a9a434f48069b114fb49191e4790f9038",
    "added_lines": [
      "if (!IsTextInputTypeNone"
    ],
    "removed_lines": [
      "if (client && client->GetTextInputType() != TEXT_INPUT_TYPE_NONE"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3380,
    "id": "CVE-2011-3053",
    "commit_id": "c442b3eda2f1fdd4d1d4864c34c43cbaf223acae",
    "added_lines": [
      "#include \"chrome/browser/chromeos/audio/audio_handler.h\""
    ],
    "removed_lines": [
      "#include \"chrome/browser/chromeos/audio_handler.h\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3384,
    "id": "CVE-2011-3049",
    "commit_id": "22503495dc014e883d1041f6b9d883a1a53f3e55",
    "added_lines": [
      "GURL::Replacements replacements",
      "replacements.ClearQuery",
      "replacements.ClearRef",
      "GURL url_without_query = url.ReplaceComponents(replacements",
      "extension_urls::IsWebstoreUpdateUrl(url_without_query) ||"
    ],
    "removed_lines": [
      "std::string url_without_query =",
      "url.spec().substr(0, url.spec().find_first_of('?'",
      "extension_urls::IsWebstoreUpdateUrl(GURL(url_without_query)) ||"
    ],
    "cause": [
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "disrupted system requests",
      "does not properly restrict the extension web request API"
    ]
  },
  {
    "index": 3390,
    "id": "CVE-2013-6635",
    "commit_id": "6b96dd532af164a73f2aac757bafff58211aca2c",
    "added_lines": [],
    "removed_lines": [
      "public void openUrl(String url, boolean userGesture, boolean isRendererInitiated"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3392,
    "id": "CVE-2013-6637",
    "commit_id": "96626920573e30a2cd02040b7ccec2c56f38b4db",
    "added_lines": [
      "data_deps = [ \"//mojo/services/network:network\" ]"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3395,
    "id": "CVE-2013-6621",
    "commit_id": "4039d2fcaab746b6c20017ba9bb51c3a2403a76c",
    "added_lines": [
      "GetContentClient()->SetActiveURL(frame_->document().url",
      "int id = msg.type",
      "CHECK(false) << \"Unable to deserialize \" << id << \" in RenderFrameImpl.\""
    ],
    "removed_lines": [
      "CHECK(false) << \"Unable to deserialize message in RenderFrameImpl.\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3396,
    "id": "CVE-2013-6622",
    "commit_id": "438b99bc730bc665eedfc62c4eb864c981e5c65f",
    "added_lines": [],
    "removed_lines": [
      "extern const char kDisableAppShims[]"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3398,
    "id": "CVE-2013-6624",
    "commit_id": "36773850210becda3d76f27285ecd899fafdfc72",
    "added_lines": [
      "bool hasNamedItem(const AtomicString& name",
      "bool hasExtraNamedItem(const AtomicString& name",
      "void addItemToMap(HashCountedSet<AtomicString>&, const AtomicString&",
      "void removeItemFromMap(HashCountedSet<AtomicString>&, const AtomicString&",
      "HashCountedSet<AtomicString> m_namedItemCounts",
      "HashCountedSet<AtomicString> m_extraNamedItemCounts",
      "inline bool HTMLDocument::hasNamedItem(const AtomicString& name",
      "inline bool HTMLDocument::hasExtraNamedItem(const AtomicString& name"
    ],
    "removed_lines": [
      "bool hasNamedItem(StringImpl* name",
      "bool hasExtraNamedItem(StringImpl* name",
      "void addItemToMap(HashCountedSet<StringImpl*>&, const AtomicString&",
      "void removeItemFromMap(HashCountedSet<StringImpl*>&, const AtomicString&",
      "HashCountedSet<StringImpl*> m_namedItemCounts",
      "HashCountedSet<StringImpl*> m_extraNamedItemCounts",
      "inline bool HTMLDocument::hasNamedItem(StringImpl* name",
      "ASSERT(name",
      "inline bool HTMLDocument::hasExtraNamedItem(StringImpl* name",
      "ASSERT(name"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3399,
    "id": "CVE-2013-6625",
    "commit_id": "f084d7007f67809ef116ee6b11f251bf3c9ed895",
    "added_lines": [
      "document().nodeChildrenWillBeRemoved(this"
    ],
    "removed_lines": [
      "container->document().nodeChildrenWillBeRemoved(container"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3405,
    "id": "CVE-2013-6631",
    "commit_id": "a19e4877974a6a0cfc53f92c1496a8f995fe2614",
    "added_lines": [],
    "removed_lines": [
      "#include \"base/profiler/scoped_profile.h\"  // For TRACK_RUN_IN_IPC_HANDLER."
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3406,
    "id": "CVE-2013-2925",
    "commit_id": "aa1a102f73565feeb1d121d0d6c9524bebcdd75f",
    "added_lines": [
      "void dispatchEventAndLoadEnd(const AtomicString&",
      "void handleDidFailGeneric",
      "void handleNetworkError",
      "void handleDidCancel",
      "void handleDidTimeout"
    ],
    "removed_lines": [
      "virtual void didTimeout",
      "void genericError",
      "void networkError",
      "void abortError"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3407,
    "id": "CVE-2013-2926",
    "commit_id": "e1524692d362e607e806569147096dfb8c38cb6a",
    "added_lines": [
      "if (endOfNextParagraph.isNotNull() && !endOfNextParagraph.deepEquivalent().inDocument"
    ],
    "removed_lines": [
      "if (endOfNextParagraph.isNotNull() && !endOfNextParagraph.deepEquivalent().inDocument())",
      "ASSERT_NOT_REACHED"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3408,
    "id": "CVE-2013-2927",
    "commit_id": "4d77eed905ce1d00361282e8822a2a3be61d25c0",
    "added_lines": [
      "RefPtr<HTMLFormElement> protector(this"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3409,
    "id": "CVE-2013-2906",
    "commit_id": "94bb8861ec61b4ebcce8a4489be2cf7e2a055d90",
    "added_lines": [
      "MutexTryLocker tryLocker(m_processLock",
      "if (tryLocker.locked",
      "return m_reverb ? m_reverb->latencyFrames() / static_cast<double>(sampleRate()) : 0",
      "return std::numeric_limits<double>::infinity"
    ],
    "removed_lines": [
      "return m_reverb ? m_reverb->latencyFrames() / static_cast<double>(sampleRate()) : 0"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3410,
    "id": "CVE-2013-2906",
    "commit_id": "603af455b5641671b18d7d7d166630341d71b63f",
    "added_lines": [
      "#include \"components/translate/core/browser/translate_step.h\"",
      "namespace content",
      "class WebContents"
    ],
    "removed_lines": [
      "#include \"chrome/browser/translate/translate_tab_helper.h\"",
      "static base::string16 GetLanguageDisplayableName",
      "const std::string& language_code"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3411,
    "id": "CVE-2013-2906",
    "commit_id": "c2364e0ce42878a2177c6f4cf7adb3c715b777c1",
    "added_lines": [
      "bool url_replacement_enabled = !state || state->url_replacement_enabled",
      "url_replacement_enabled",
      "controller_->GetToolbarModel()->set_origin_chip_enabled",
      "url_replacement_enabled"
    ],
    "removed_lines": [
      "!state || state->url_replacement_enabled"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3412,
    "id": "CVE-2013-2906",
    "commit_id": "c4a4dfb26615b5ef5e9dcc730ef43f70ce9202e2",
    "added_lines": [
      "WebView::willEnterModalLoop",
      "WebView::didExitModalLoop"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3413,
    "id": "CVE-2013-2906",
    "commit_id": "bcc265132e3d9b62c6c49facbf849575c615d1e3",
    "added_lines": [
      "current_lock_ = new LockInformation(request_id,",
      "render_frame_host->GetProcess()->GetID(),",
      "render_frame_host->GetRoutingID",
      "if (!provider_"
    ],
    "removed_lines": [
      "current_lock_ = new LockInformation(request_id,",
      "render_frame_host->GetProcess()->GetID(),",
      "render_frame_host->GetRoutingID",
      "if (!provider_.get"
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3416,
    "id": "CVE-2013-2909",
    "commit_id": "d79eee2ffdc979779e96b4cf5db4720d44f01835",
    "added_lines": [
      "<!-- This tests for regression of https://crbug.com/265838 where adjacent, nested isolates caused a use-after-free if the elements were later removed. -->",
      "<script>",
      "function remove(node",
      "node.parentNode.removeChild(node",
      "window.onload = function",
      "document.body.offsetTop",
      "remove(b.lastChild",
      "document.body.offsetTop",
      "remove(a.firstChild",
      "document.body.offsetTop",
      "document.body.appendChild(document.createTextNode(\"PASS did not crash\"",
      "</script>",
      "<body>",
      "<div id=\"a\">foo</div>",
      "<div></div>",
      "<div>",
      "<output>",
      "<output>bar</output>",
      "<span id=\"b\">",
      "<span><div style=\"display:inline-block\"></div><br><br><br></span>",
      "</span>",
      "</output>",
      "</div>",
      "</body>",
      "<script>",
      "if (window.testRunner",
      "testRunner.dumpAsText",
      "</script>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "MEM_FREE",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3417,
    "id": "CVE-2013-2909",
    "commit_id": "248a92c21c20c14b5983680c50e1d8b73fc79a2f",
    "added_lines": [
      "RenderInline* isolatedInline = toRenderInline(highestContainingIsolateWithinRoot(startObj, currentRoot",
      "ASSERT(isolatedInline"
    ],
    "removed_lines": [
      "RenderInline* isolatedInline = toRenderInline(containingIsolate(startObj, currentRoot"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3418,
    "id": "CVE-2013-2910",
    "commit_id": "90556c5c9d0a274cc823b713544e9b6064e205cd",
    "added_lines": [
      "CHROMEOS_EXPORT extern const char kEnableRollbackOption[]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3419,
    "id": "CVE-2013-2911",
    "commit_id": "0220f39fac21d169a834ef91de362f4169f2eef5",
    "added_lines": [
      ", m_compilationFailed(false",
      ", m_compilationFailed(false",
      "if (m_compilationFailed",
      "return 0",
      "else",
      "m_compilationFailed = true"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3420,
    "id": "CVE-2013-2912",
    "commit_id": "384daf4d199e8ee29356a2aa61e6915caf5a7100",
    "added_lines": [
      "const char kLaunchedForTest[] = \"launched-for-test\""
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3421,
    "id": "CVE-2013-2913",
    "commit_id": "5b998565255a504887c6d2e90d11001a00c9d6da",
    "added_lines": [
      "#include \"base/strings/string_number_conversions.h\"",
      ": client_(NULL), model_(NULL), node_(NULL), node2_(NULL), folder_(NULL)",
      "model_->SetNodeMetaInfo(node_, \"some_key1\", \"some_value1\"",
      "model_->SetNodeMetaInfo(node_, \"some_key2\", \"some_value2\"",
      "model_->SetNodeMetaInfo(folder_, \"some_key1\", \"some_value1\"",
      "node2_ = model_->AddURL",
      "model_->SetNodeMetaInfo(node2_, \"some_key2\", \"some_value2\"",
      "const BookmarkNode* node2_",
      "TEST_F(ExtensionBookmarksTest, GetMetaInfo)",
      "base::DictionaryValue id_to_meta_info_map",
      "GetMetaInfo(*model_->other_node(), &id_to_meta_info_map",
      "EXPECT_EQ(8u, id_to_meta_info_map.size",
      "const base::Value* value = NULL",
      "EXPECT_TRUE(id_to_meta_info_map.Get",
      "base::Int64ToString(model_->other_node()->id()), &value",
      "ASSERT_TRUE(NULL != value",
      "const base::DictionaryValue* dictionary_value = NULL",
      "EXPECT_TRUE(value->GetAsDictionary(&dictionary_value",
      "ASSERT_TRUE(NULL != dictionary_value",
      "EXPECT_EQ(0u, dictionary_value->size",
      "value = NULL",
      "EXPECT_TRUE(id_to_meta_info_map.Get",
      "base::Int64ToString(node_->id()), &value",
      "ASSERT_TRUE(NULL != value",
      "dictionary_value = NULL",
      "EXPECT_TRUE(value->GetAsDictionary(&dictionary_value",
      "ASSERT_TRUE(NULL != dictionary_value",
      "EXPECT_EQ(2u, dictionary_value->size",
      "std::string string_value",
      "EXPECT_TRUE(dictionary_value->GetString(\"some_key1\", &string_value",
      "EXPECT_EQ(\"some_value1\", string_value",
      "EXPECT_TRUE(dictionary_value->GetString(\"some_key2\", &string_value",
      "EXPECT_EQ(\"some_value2\", string_value",
      "value = NULL",
      "EXPECT_TRUE(id_to_meta_info_map.Get",
      "base::Int64ToString(folder_->id()), &value",
      "ASSERT_TRUE(NULL != value",
      "dictionary_value = NULL",
      "EXPECT_TRUE(value->GetAsDictionary(&dictionary_value",
      "ASSERT_TRUE(NULL != dictionary_value",
      "EXPECT_EQ(1u, dictionary_value->size",
      "EXPECT_TRUE(dictionary_value->GetString(\"some_key1\", &string_value",
      "EXPECT_EQ(\"some_value1\", string_value",
      "value = NULL",
      "EXPECT_TRUE(id_to_meta_info_map.Get",
      "base::Int64ToString(node2_->id()), &value",
      "ASSERT_TRUE(NULL != value",
      "dictionary_value = NULL",
      "EXPECT_TRUE(value->GetAsDictionary(&dictionary_value",
      "ASSERT_TRUE(NULL != dictionary_value",
      "EXPECT_EQ(1u, dictionary_value->size",
      "string_value.clear",
      "EXPECT_FALSE(dictionary_value->GetString(\"some_key1\", &string_value",
      "EXPECT_EQ(\"\", string_value",
      "EXPECT_TRUE(dictionary_value->GetString(\"some_key2\", &string_value",
      "EXPECT_EQ(\"some_value2\", string_value"
    ],
    "removed_lines": [
      ": client_(NULL), model_(NULL), node_(NULL), folder_(NULL)",
      "model_->AddURL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3422,
    "id": "CVE-2013-2914",
    "commit_id": "5ecc8d42ff888ff8b459df566208e7e01a3be5ba",
    "added_lines": [
      "virtual void End() OVERRIDE",
      "void ColorChooserWin::End()",
      "OnColorChooserDialogClosed"
    ],
    "removed_lines": [
      "virtual void End() OVERRIDE"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3426,
    "id": "CVE-2013-2918",
    "commit_id": "917004483901fec2682b27b6061de64244ece947",
    "added_lines": [
      "from telemetry.value import scalar",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'pixels_recorded', 'pixels', pixels_recorded",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'record_time', 'ms', record_time",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'pixels_rasterized', 'pixels', pixels_rasterized",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'rasterize_time', 'ms', rasterize_time",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'record_time_sk_null_canvas', 'ms',",
      "record_time_sk_null_canvas",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'record_time_painting_disabled', 'ms',",
      "record_time_painting_disabled",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'record_time_skrecord', 'ms',",
      "record_time_skrecord",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'pixels_rasterized_with_non_solid_color',",
      "'pixels', pixels_rasterized_with_non_solid_color",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'pixels_rasterized_as_opaque', 'pixels',",
      "pixels_rasterized_as_opaque",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'total_layers', 'count', total_layers",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'total_picture_layers', 'count',",
      "total_picture_layers",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'total_picture_layers_with_no_content', 'count',",
      "total_picture_layers_with_no_content",
      "results.AddValue(scalar.ScalarValue",
      "results.current_page, 'total_picture_layers_off_screen', 'count',",
      "total_picture_layers_off_screen"
    ],
    "removed_lines": [
      "results.Add('pixels_recorded', 'pixels', pixels_recorded",
      "results.Add('record_time', 'ms', record_time",
      "results.Add('pixels_rasterized', 'pixels', pixels_rasterized",
      "results.Add('rasterize_time', 'ms', rasterize_time",
      "results.Add('record_time_sk_null_canvas', 'ms',",
      "record_time_sk_null_canvas",
      "results.Add('record_time_painting_disabled', 'ms',",
      "record_time_painting_disabled",
      "results.Add('record_time_skrecord', 'ms', record_time_skrecord",
      "results.Add('pixels_rasterized_with_non_solid_color', 'pixels',",
      "pixels_rasterized_with_non_solid_color",
      "results.Add('pixels_rasterized_as_opaque', 'pixels',",
      "pixels_rasterized_as_opaque",
      "results.Add('total_layers', 'count', total_layers",
      "results.Add('total_picture_layers', 'count', total_picture_layers",
      "results.Add('total_picture_layers_with_no_content', 'count',",
      "total_picture_layers_with_no_content",
      "results.Add('total_picture_layers_off_screen', 'count',",
      "total_picture_layers_off_screen"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3428,
    "id": "CVE-2013-2921",
    "commit_id": "1228817ab04a14df53b5a8446085f9c03bf6e964",
    "added_lines": [
      "const gfx::Size& output_size,"
    ],
    "removed_lines": [
      "const gfx::Size& dst_size,"
    ],
    "cause": [
      "Uncategorized Cluster 7"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "double free"
    ]
  },
  {
    "index": 3429,
    "id": "CVE-2013-2922",
    "commit_id": "47cf56b8b8c6ddbbbe9d4d342fbd8ffe7b7bb87b",
    "added_lines": [
      "\"chrome-extension://hhaomjibdihmijegdhdafkllkbggdgoj\",",
      "\"chrome://extension-icon/\",",
      "\"chrome://resources/\",",
      "\"chrome://theme/\",",
      "\"fileSystem\",",
      "\"webview\""
    ],
    "removed_lines": [
      "\"fileSystem\",",
      "\"chrome://extension-icon/\",",
      "\"chrome://resources/\",",
      "\"chrome://theme/\",",
      "\"chrome-extension://hhaomjibdihmijegdhdafkllkbggdgoj\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3430,
    "id": "CVE-2013-2923",
    "commit_id": "55f9a7718acb7e0e44d61d6ea55a91179d774ce0",
    "added_lines": [
      "if (inputDevice == null) return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3431,
    "id": "CVE-2013-2924",
    "commit_id": "653ed3224389f99dec01a41614c1533c1e4dbac3",
    "added_lines": [
      "# DrM-i#1561",
      "Aes128Gcm12DecrypterTest.Decrypt",
      "Aes128Gcm12EncrypterTest.Encrypt"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3434,
    "id": "CVE-2013-2902",
    "commit_id": "87a082c5137a63dedb3fe5b1f48f75dcd1fd780c",
    "added_lines": [],
    "removed_lines": [
      "#include \"cc/trees/layer_tree_host.h\"",
      "#include \"base/memory/scoped_ptr.h\"",
      "#include \"cc/layers/layer.h\"",
      "#include \"cc/test/geometry_test_utils.h\"",
      "#include \"cc/test/layer_tree_test.h\"",
      "#include \"testing/gmock/include/gmock/gmock.h\"",
      "#include \"testing/gtest/include/gtest/gtest.h\"",
      "using gfx::Vector2d",
      "namespace cc",
      "namespace",
      "class LayerTreeHostPinchZoomTest : public LayerTreeTest",
      "class LayerTreeHostPinchZoomTestDistributeScrollOffsetToViewports",
      ": public LayerTreeHostPinchZoomTest",
      "public:",
      "virtual void SetupTree() OVERRIDE",
      "scoped_refptr<Layer> inner_viewport_clip_layer = Layer::Create",
      "scoped_refptr<Layer> page_scale_layer = Layer::Create",
      "scoped_refptr<Layer> inner_viewport_scroll_layer = Layer::Create",
      "scoped_refptr<Layer> outer_viewport_clip_layer = Layer::Create",
      "scoped_refptr<Layer> outer_viewport_scroll_layer = Layer::Create",
      "inner_viewport_scroll_layer->SetScrollClipLayerId",
      "inner_viewport_clip_layer->id",
      "inner_viewport_scroll_layer->SetUserScrollable(true, true",
      "inner_viewport_clip_layer->AddChild(page_scale_layer",
      "page_scale_layer->AddChild(inner_viewport_scroll_layer",
      "inner_viewport_scroll_layer->AddChild(outer_viewport_clip_layer",
      "outer_viewport_clip_layer->AddChild(outer_viewport_scroll_layer",
      "outer_viewport_scroll_layer->SetScrollClipLayerId",
      "outer_viewport_clip_layer->id",
      "outer_viewport_scroll_layer->SetUserScrollable(true, true",
      "layer_tree_host()->RegisterViewportLayers(page_scale_layer,",
      "inner_viewport_scroll_layer,",
      "outer_viewport_scroll_layer",
      "inner_viewport_clip_layer->SetBounds(gfx::Size(10, 10",
      "outer_viewport_clip_layer->SetAnchorPoint(gfx::PointF",
      "outer_viewport_clip_layer->SetBounds(gfx::Size(10, 10",
      "layer_tree_host()->SetRootLayer(inner_viewport_clip_layer",
      "inner_viewport_scroll_layer->SetBounds(gfx::Size(10, 10",
      "outer_viewport_scroll_layer->SetBounds(gfx::Size(20, 20",
      "layer_tree_host()->SetPageScaleFactorAndLimits(2.0f, 1.0f, 5.0f",
      "EXPECT_VECTOR_EQ(Vector2d(5, 5),",
      "inner_viewport_scroll_layer->MaxScrollOffset",
      "EXPECT_VECTOR_EQ(Vector2d(10, 10),",
      "outer_viewport_scroll_layer->MaxScrollOffset",
      "EXPECT_VECTOR_EQ(Vector2d(0, 0),",
      "inner_viewport_scroll_layer->scroll_offset",
      "EXPECT_VECTOR_EQ(Vector2d(0, 0),",
      "outer_viewport_scroll_layer->scroll_offset",
      "virtual void BeginTest() OVERRIDE",
      "Layer *inner = layer_tree_host()->inner_viewport_scroll_layer",
      "Layer *outer = layer_tree_host()->outer_viewport_scroll_layer",
      "gfx::Vector2d offset(-20, -20",
      "outer->SetScrollOffset(offset",
      "EXPECT_VECTOR_EQ(Vector2d(0, 0), inner->scroll_offset",
      "EXPECT_VECTOR_EQ(Vector2d(0, 0), outer->scroll_offset",
      "offset = gfx::Vector2d(20, 20",
      "outer->SetScrollOffset(offset",
      "EXPECT_VECTOR_EQ(Vector2d(5, 5), inner->scroll_offset",
      "EXPECT_VECTOR_EQ(Vector2d(10, 10), outer->scroll_offset",
      "EndTest",
      "virtual void AfterTest() OVERRIDE",
      "TEST_F(LayerTreeHostPinchZoomTestDistributeScrollOffsetToViewports, Test)",
      "RunTest(true, false, false",
      "}  // namespace",
      "}  // namespace cc"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3435,
    "id": "CVE-2013-2903",
    "commit_id": "92029a982fac85a4ebb614a825012a2e9ee84ef3",
    "added_lines": [
      "void Update()",
      "SetBackgroundColor(text().size() <= kMaxFolderNameChars",
      "? kContentsBackgroundColor",
      ": SK_ColorRED",
      "folder_name_view_->SetEnabled(folder_item_->folder_type() !=",
      "if (folder_name_visible_)",
      "folder_name_view_->Update",
      "folder_name_view_->Update",
      "std::string name = base::UTF16ToUTF8",
      "folder_name_view_->text().substr(0, kMaxFolderNameChars",
      "if (name != folder_item_->name",
      "delegate_->SetItemName(folder_item_, name"
    ],
    "removed_lines": [
      "folder_name_view_->SetEnabled(folder_item->folder_type() !=",
      "if (folder_name_visible_",
      "std::string name = base::UTF16ToUTF8(folder_name_view_->text",
      "delegate_->SetItemName(folder_item_, name"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3436,
    "id": "CVE-2013-2904",
    "commit_id": "ed5c0b5ff5cec5a12235b868d0f3ba7e0c0f2a24",
    "added_lines": [
      "cryptohome::kCryptohomeAsyncTpmAttestationCreateEnrollRequest",
      "cryptohome::kCryptohomeAsyncTpmAttestationEnroll"
    ],
    "removed_lines": [
      "cryptohome::kCryptohomeAsyncTpmAttestationCreateEnrollRequestNew",
      "cryptohome::kCryptohomeAsyncTpmAttestationEnrollNew"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3437,
    "id": "CVE-2013-2887",
    "commit_id": "01924fbe6c0e0f059ca46a03f9f6b2670ae3e0fa",
    "added_lines": [
      "ui::LatencyInfo last_touch_event_latency_info_"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3439,
    "id": "CVE-2013-2882",
    "commit_id": "dbbcd55a666ab8389d5d223994a95a59ad20dd13",
    "added_lines": [
      "IN_PROC_BROWSER_TEST_F(AutofillInteractiveTest,",
      "DISABLED_OnChangeAfterAutofill)"
    ],
    "removed_lines": [
      "IN_PROC_BROWSER_TEST_F(AutofillInteractiveTest, OnChangeAfterAutofill)"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3440,
    "id": "CVE-2013-2883",
    "commit_id": "afea522e2f80f56fed7e54bd3d2070da358f42f2",
    "added_lines": [
      "RefPtr<Node> protect(this"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3441,
    "id": "CVE-2013-2884",
    "commit_id": "4ac8bc08e3306f38a5ab3e551aef6ad43753579c",
    "added_lines": [
      "treeScope()->adoptIfNeeded(attrNode"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3442,
    "id": "CVE-2013-2885",
    "commit_id": "2aa406a8b4577103e7b933c75ec0e372830f20fe",
    "added_lines": [
      "#include \"base/memory/scoped_vector.h\"",
      "class PartitionItem",
      "class WebviewInfo : public Extension::ManifestData",
      "public:",
      "void AddPartitionItem(scoped_ptr<PartitionItem> item",
      "private:",
      "ScopedVector<PartitionItem> partition_items_"
    ],
    "removed_lines": [
      "struct WebviewInfo : public Extension::ManifestData",
      "static bool HasWebviewAccessibleResources(const Extension* extension",
      "std::vector<std::string> webview_privileged_partitions_",
      "URLPatternSet webview_accessible_resources_"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3443,
    "id": "CVE-2013-2885",
    "commit_id": "79cfdeb5fbe79fa2604d37fba467f371cb436bc3",
    "added_lines": [
      "bool containsFocusedShadowElement() const"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3444,
    "id": "CVE-2013-2886",
    "commit_id": "f10a164b2bd928c3cc27d4d8cdc0ca1d9d09e2c0",
    "added_lines": [
      "['linux_use_gold_binary==0 and OS!=\"android\"',",
      "# Workarounds for linker OOM.",
      "'-Wl,--reduce-memory-overheads',"
    ],
    "removed_lines": [
      "['target_arch==\"ia32\" and OS!=\"android\"',",
      "# Workaround for linker OOM."
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3451,
    "id": "CVE-2013-2871",
    "commit_id": "db97b49fdd856f33bd810db4564c6f2cc14be71a",
    "added_lines": [
      "bool raster_finished_task_pending_",
      "bool raster_required_for_activation_finished_task_pending_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3452,
    "id": "CVE-2013-2871",
    "commit_id": "bb9cfb0aba25f4b13e57bdd4a9fac80ba071e7b9",
    "added_lines": [
      "detach"
    ],
    "removed_lines": [
      "detach"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3454,
    "id": "CVE-2013-2873",
    "commit_id": "370bd9b522d2ccd4a3113d6c93d30cdf8ca502ef",
    "added_lines": [
      "scoped_refptr<Context> protect(this"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "status code",
      "use-after-free"
    ]
  },
  {
    "index": 3465,
    "id": "CVE-2013-2854",
    "commit_id": "6f62e3b41fe9ef708aa8c990dd814ae91d68f2f4",
    "added_lines": [
      "if (handle == INVALID_HANDLE_VALUE ||",
      "!::DuplicateHandle(::GetCurrentProcess(),"
    ],
    "removed_lines": [
      "if (!::DuplicateHandle(::GetCurrentProcess(),"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors"
    ]
  },
  {
    "index": 3467,
    "id": "CVE-2013-2856",
    "commit_id": "e68fafe04d29810cebe8d25554863b0cae4c1356",
    "added_lines": [
      "UMA_HISTOGRAM_SPARSE_SLOWLY(\"Net.UdpSocketRandomBindErrorCode\", -rv",
      "if (last_error == WSAEACCES || last_error == WSAEADDRNOTAVAIL"
    ],
    "removed_lines": [
      "UMA_HISTOGRAM_SPARSE_SLOWLY(\"Net.UdpSocketRandomBindErrorCode\", rv",
      "if (last_error == WSAEACCES || last_error == WSAEINVAL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3468,
    "id": "CVE-2013-2857",
    "commit_id": "7d085fbb43b21e959900b94f191588fd10546a94",
    "added_lines": [
      "m_hasPendingErrorEvent = true",
      "errorEventSender().dispatchEventSoon(this"
    ],
    "removed_lines": [
      "m_element->dispatchEvent(Event::create(eventNames().errorEvent, false, false"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3469,
    "id": "CVE-2013-2858",
    "commit_id": "828eab2216a765dea92575c290421c115b8ad028",
    "added_lines": [
      "<histogram name=\"Net.DailyContentLength_DataReductionProxyEnabled_Https\"",
      "units=\"KB\">",
      "<summary>",
      "The total content size in KB of all HTTPS response bodies in the previous",
      "calendar day while the data reduction proxy setting was enabled. The metric",
      "is reported when the first response in the current day is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentLength_DataReductionProxyEnabled_LongBypass\"",
      "units=\"KB\">",
      "<summary>",
      "The total content size in KB of all long-bypassed HTTP response bodies in",
      "the  previous calendar day while the data reduction proxy setting was",
      "enabled. The metric is reported when the first response in the current day",
      "is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentLength_DataReductionProxyEnabled_ShortBypass\"",
      "units=\"KB\">",
      "<summary>",
      "The total content size in KB of all short-bypassed HTTP response bodies in",
      "the previous calendar day while the data reduction proxy setting was",
      "enabled. The metric is reported when the first response in the current day",
      "is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentLength_DataReductionProxyEnabled_Unknown\"",
      "units=\"KB\">",
      "<summary>",
      "The total content size in KB of all HTTP response bodies for requests that",
      "were not served by the enabled data reduction proxy for unknown reasons in",
      "the previous calendar day while the data reduction proxy setting was",
      "enabled. The metric is reported when the first response in the current day",
      "is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentPercent_DataReductionProxyEnabled_Https\"",
      "units=\"Percent\">",
      "<summary>",
      "The percentage of total HTTPS response body size while the data reduction",
      "proxy is enabled to total HTTP/HTTPS response body size in the previous",
      "calendar day. The metric is reported when the first response in the current",
      "day is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentPercent_DataReductionProxyEnabled_LongBypass\"",
      "units=\"Percent\">",
      "<summary>",
      "The percentage of total long-bypassed response body size while the data",
      "reduction proxy is enabled to total HTTP/HTTPS response body size in the",
      "previous calendar day. The metric is reported when the first response in the",
      "current day is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentPercent_DataReductionProxyEnabled_ShortBypass\"",
      "units=\"Percent\">",
      "<summary>",
      "The percentage of total short-bypassed response body size while the data",
      "reduction proxy is enabled to total HTTP/HTTPS response body size in the",
      "previous calendar day. The metric is reported when the first response in the",
      "current day is received.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Net.DailyContentPercent_DataReductionProxyEnabled_Unknown\"",
      "units=\"Percent\">",
      "<summary>",
      "The percentage of total body size of responses that were not served by the",
      "data reduction proxy for unknown reason while the data reduction proxy is",
      "enabled to total HTTP/HTTPS response body size in the previous calendar day.",
      "The metric is reported when the first response in the current day is",
      "received.",
      "</summary>",
      "</histogram>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3471,
    "id": "CVE-2013-2860",
    "commit_id": "9308eb92bdd3c17a39632e5c9eecb6cc2283897b",
    "added_lines": [
      "#include <locale.h>",
      "setlocale(LC_ALL, \"fr_FR.UTF-8\""
    ],
    "removed_lines": [
      "#include \"base/test/scoped_locale.h\"",
      "base::ScopedLocale locale(\"fr_FR.UTF-8\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3472,
    "id": "CVE-2013-2861",
    "commit_id": "508b89a64ab700aa09f21fc666a5588b47360eab",
    "added_lines": [
      "void UninstallLegacyAppLauncher(InstallationLevel level"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3476,
    "id": "CVE-2013-2865",
    "commit_id": "26160ce25e305d686ca5df192378d2f5310ca0ee",
    "added_lines": [
      "child->SetBounds(root_->window()->bounds"
    ],
    "removed_lines": [
      "child->SetBounds(gfx::Rect(root_->host()->GetBounds().size"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3478,
    "id": "CVE-2013-0880",
    "commit_id": "7df06970ff05d4b412534f6deea89c9b9ac4be67",
    "added_lines": [
      "if (!dispatcher->permissions().HasPermission(ppapi::PERMISSION_DEV",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3479,
    "id": "CVE-2013-0881",
    "commit_id": "634c5943f46abe8c6280079f6d394dfee08c3c8f",
    "added_lines": [
      "DisableCompositingQueryAsserts disabler"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "incorrect read operation"
    ]
  },
  {
    "index": 3481,
    "id": "CVE-2013-0883",
    "commit_id": "0fdf268ee945968dfa81e44ec017030add608613",
    "added_lines": [
      "# ==================================================",
      "# Disabled tests that need to be investigated/fixed.",
      "# ==================================================",
      "'-perf.WebGLTest.testWebGLField',  # crbug.com/132797"
    ],
    "removed_lines": [],
    "cause": [
      "Logical Flaws",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "incorrect read operation",
      "unspecified vectors"
    ]
  },
  {
    "index": 3491,
    "id": "CVE-2013-0892",
    "commit_id": "3b2943f5d343f5da393b99fe9efe6cefc6856aa1",
    "added_lines": [
      "if (resources_list.size() != referrers_list.size",
      "return"
    ],
    "removed_lines": [
      "DCHECK(resources_list.size() == referrers_list.size"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3492,
    "id": "CVE-2013-0892",
    "commit_id": "42d87b0bec018634ec81a72d3b265f3138d75e1d",
    "added_lines": [
      "const uint32_t kMaxMenuEntries = 1000",
      "if (menu->count > kMaxMenuEntries)",
      "FreeMenu(menu",
      "return NULL"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3493,
    "id": "CVE-2013-0892",
    "commit_id": "da5e5f78f02bc0af5ddc5694090defbef7853af1",
    "added_lines": [
      "'device_orientation/DeviceOrientationInspectorAgent.cpp',",
      "'device_orientation/DeviceOrientationInspectorAgent.h',"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3494,
    "id": "CVE-2013-0892",
    "commit_id": "9568632948d1e96777d3fcc023f35283f7998c0e",
    "added_lines": [
      "\"webkit_revision\": \"165836\","
    ],
    "removed_lines": [
      "\"webkit_revision\": \"165830\","
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3495,
    "id": "CVE-2013-0892",
    "commit_id": "013213b56835d1d6d5f2981665ae2618a47a8ebf",
    "added_lines": [
      "background: transparent",
      ".network-log-grid.data-grid tr.odd",
      "background-color: #f3f3f3"
    ],
    "removed_lines": [
      "background-size: 1px 82px",
      "background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), color-stop(0.5, rgba(0, 0, 0, 0)), color-stop(0.5, rgba(0, 0, 0, 0.05)), to(rgba(0, 0, 0, 0.05",
      ".network-log-grid.data-grid.small table.data",
      "background-size: 1px 42px"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3496,
    "id": "CVE-2013-0892",
    "commit_id": "e4e65d90ea643a7f46a3cb6ae9f59795e8a47d4c",
    "added_lines": [
      "crbug.com/330617 inspector/profiler/heap-snapshot-loader.html [ Pass Failure ]"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3497,
    "id": "CVE-2013-0892",
    "commit_id": "0ab5fab4939150bd0f30ada8a4bf6eb0f69d66c1",
    "added_lines": [
      "void OnDecode(base::SharedMemoryHandle handle, int32 id, uint32 size"
    ],
    "removed_lines": [
      "void OnDecode(base::SharedMemoryHandle handle, int32 id, int32 size"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3498,
    "id": "CVE-2013-0893",
    "commit_id": "ed6f4545a2a345697e07908c887333f5bdcc97a3",
    "added_lines": [
      "if (m_isExternalScript)",
      "ScriptResource* resource = m_resource ? m_resource.get() : sourceCode.resource",
      "if (resource && !resource->mimeTypeAllowedByNosniff())",
      "contextDocument->addConsoleMessage(SecurityMessageSource, ErrorMessageLevel, \"Refused to execute script from '\" + resource->url().elidedString() + \"' because its MIME type ('\" + resource->mimeType() + \"') is not executable, and strict MIME type checking is enabled.\"",
      "return"
    ],
    "removed_lines": [
      "if (m_isExternalScript && m_resource && !m_resource->mimeTypeAllowedByNosniff())",
      "contextDocument->addConsoleMessage(SecurityMessageSource, ErrorMessageLevel, \"Refused to execute script from '\" + m_resource->url().elidedString() + \"' because its MIME type ('\" + m_resource->mimeType() + \"') is not executable, and strict MIME type checking is enabled.\"",
      "return"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3502,
    "id": "CVE-2013-0897",
    "commit_id": "d77579aada159a16969b48b247a1802564ba24ac",
    "added_lines": [
      "\"webkit_revision\": \"47277\","
    ],
    "removed_lines": [
      "\"webkit_revision\": \"47265\","
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "off-by-one",
      "off-by-one error"
    ]
  },
  {
    "index": 3503,
    "id": "CVE-2013-0898",
    "commit_id": "b6a0cf748001e05cf048bff7b62daea50f0fcfdc",
    "added_lines": [
      "(Var(\"googlecode_url\") % \"google-url\") + \"/trunk@183\","
    ],
    "removed_lines": [
      "(Var(\"googlecode_url\") % \"google-url\") + \"/trunk@182\","
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3505,
    "id": "CVE-2013-0900",
    "commit_id": "e8cf6decd19f8e0391171f25a8948d3b324ec172",
    "added_lines": [
      "\"/trunk/deps/third_party/icu46@172827\","
    ],
    "removed_lines": [
      "\"/trunk/deps/third_party/icu46@161442\","
    ],
    "cause": [
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "race condition"
    ]
  },
  {
    "index": 3506,
    "id": "CVE-2013-0916",
    "commit_id": "863f56d3c6cd49278a5e74a698f8a5371d066452",
    "added_lines": [
      "WebAnimationsElementAnimate status=stable"
    ],
    "removed_lines": [
      "WebAnimationsElementAnimate status=experimental"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3509,
    "id": "CVE-2013-0919",
    "commit_id": "d89d8abed92a7d6932ee3015a7ab77e16fc03d79",
    "added_lines": [],
    "removed_lines": [
      "case chrome::NOTIFICATION_BOOKMARK_MODEL_LOADED:"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3510,
    "id": "CVE-2013-0920",
    "commit_id": "12baa2097220e33c12b60aa5e6da6701637761bf",
    "added_lines": [
      "if (!dispatcher",
      "return;  // Extension was unloaded."
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3520,
    "id": "CVE-2013-0902",
    "commit_id": "4b230ee6f0d970dfd1166fe87c059fc1466fd79d",
    "added_lines": [
      "if (window.internals",
      "window.internals.settings.setAcceleratedCompositingForOverflowScrollEnabled(false",
      "if (width != 15 || height != 285",
      "background-color: blue",
      "background-color: green"
    ],
    "removed_lines": [
      "if (width == 15 && height == 285",
      "background-color: blue",
      "background-color: green"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3521,
    "id": "CVE-2013-0903",
    "commit_id": "3b2943f5d343f5da393b99fe9efe6cefc6856aa1",
    "added_lines": [
      "if (resources_list.size() != referrers_list.size",
      "return"
    ],
    "removed_lines": [
      "DCHECK(resources_list.size() == referrers_list.size"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3524,
    "id": "CVE-2013-0905",
    "commit_id": "5039704ae2411c4b919dd72b4cbcf6ab7bb9ecd7",
    "added_lines": [
      "{id: \"liveCount\", title: WebInspector.UIString(\"Live Count\"), width: \"72px\", sortable: true},",
      "{id: \"liveSize\", title: WebInspector.UIString(\"Live Size\"), width: \"72px\", sortable: true},"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3526,
    "id": "CVE-2013-0907",
    "commit_id": "133ed74d3e13d76903bbe511087119db49afdf9a",
    "added_lines": [
      "project._reset"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3533,
    "id": "CVE-2013-0839",
    "commit_id": "dd3b6fe574edad231c01c78e4647a74c38dc4178",
    "added_lines": [
      "GDataEntry* entry = directory_service_->FromDocumentEntry(doc"
    ],
    "removed_lines": [
      "GDataEntry* entry = GDataEntry::FromDocumentEntry",
      "NULL, doc, directory_service_"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3535,
    "id": "CVE-2013-0841",
    "commit_id": "85f2fcc7b577362dd1def5895d60ea70d6e6b8d0",
    "added_lines": [
      "if (type < 0 || type >= CONTENT_SETTINGS_NUM_TYPES",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "array index error"
    ]
  },
  {
    "index": 3538,
    "id": "CVE-2012-5145",
    "commit_id": "06ea095ddbb86641d36383ba7f943888de05e747",
    "added_lines": [],
    "removed_lines": [
      "# Copyright (c) 2009 The Chromium Authors. All rights reserved.",
      "# Use of this source code is governed by a BSD-style license that can be",
      "# found in the LICENSE file.",
      "'targets': [",
      "'target_name': 'support',",
      "'type': 'none',",
      "'dependencies': [",
      "'chrome_frame.gyp:*',",
      "],",
      "},",
      "],"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3540,
    "id": "CVE-2012-5147",
    "commit_id": "9c0b13574dc0ddeb502d7ed92ba10f7981da6736",
    "added_lines": [
      "#include \"net/quic/quic_session.h\"",
      "#include \"net/quic/test_tools/mock_clock.h\"",
      "virtual ~MockConnectionVisitor",
      "class MockHelper : public QuicConnectionHelperInterface",
      "public:",
      "MockHelper",
      "virtual ~MockHelper",
      "MOCK_METHOD1(SetConnection, void(QuicConnection* connection",
      "QuicClock* GetClock",
      "MOCK_METHOD4(WritePacketToWire, int(QuicPacketSequenceNumber number,",
      "const QuicEncryptedPacket& packet,",
      "bool resend,",
      "int* error",
      "MOCK_METHOD2(SetResendAlarm, void(QuicPacketSequenceNumber sequence_number,",
      "uint64 delay_in_us",
      "MOCK_METHOD1(SetSendAlarm, void(uint64 delay_in_us",
      "MOCK_METHOD1(SetTimeoutAlarm, void(uint64 delay_in_us",
      "MOCK_METHOD0(IsSendAlarmSet, bool",
      "MOCK_METHOD0(UnregisterSendAlarmIfRegistered, void",
      "private:",
      "MockClock clock_",
      "class MockConnection : public QuicConnection",
      "public:",
      "MockConnection(QuicGuid guid, IPEndPoint address",
      "virtual ~MockConnection",
      "MOCK_METHOD3(ProcessUdpPacket, void(const IPEndPoint& self_address,",
      "const IPEndPoint& peer_address,",
      "const QuicEncryptedPacket& packet",
      "MOCK_METHOD1(SendConnectionClose, void(QuicErrorCode error",
      "MOCK_METHOD3(SendRstStream, void(QuicStreamId id,",
      "QuicErrorCode error,",
      "QuicStreamOffset offset",
      "MOCK_METHOD0(OnCanWrite, bool",
      "class PacketSavingConnection : public MockConnection",
      "public:",
      "PacketSavingConnection(QuicGuid guid, IPEndPoint address",
      "virtual ~PacketSavingConnection",
      "virtual bool SendPacket(QuicPacketSequenceNumber number,",
      "QuicPacket* packet,",
      "bool resend,",
      "bool force) OVERRIDE",
      "std::vector<QuicPacket*> packets_",
      "class MockSession : public QuicSession",
      "public:",
      "MockSession(QuicConnection* connection, bool is_server",
      "~MockSession",
      "MOCK_METHOD4(OnPacket, bool(const IPEndPoint& seld_address,",
      "const IPEndPoint& peer_address,",
      "const QuicPacketHeader& header,",
      "const std::vector<QuicStreamFrame>& frame",
      "MOCK_METHOD2(ConnectionClose, void(QuicErrorCode error, bool from_peer",
      "MOCK_METHOD1(CreateIncomingReliableStream,",
      "ReliableQuicStream*(QuicStreamId id",
      "MOCK_METHOD0(GetCryptoStream, QuicCryptoStream*",
      "MOCK_METHOD0(CreateOutgoingReliableStream, ReliableQuicStream*",
      "MOCK_METHOD3(WriteData,",
      "void(QuicStreamId id, base::StringPiece data, bool fin",
      "MOCK_METHOD4(WriteData, int(QuicStreamId id, base::StringPiece data,",
      "QuicStreamOffset offset, bool fin",
      "MOCK_METHOD0(IsHandshakeComplete, bool"
    ],
    "removed_lines": [
      "~MockConnectionVisitor"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3543,
    "id": "CVE-2012-5150",
    "commit_id": "8ea3a5c06218fa42d25c3aa0a4ab57153e178523",
    "added_lines": [],
    "removed_lines": [
      "#include \"modules/geolocation/Geolocation.h\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3549,
    "id": "CVE-2012-5156",
    "commit_id": "b15c87071f906301bccc824ce013966ca93998c7",
    "added_lines": [
      "virtual void OnChannelConnected(int32 peer_pid) = 0"
    ],
    "removed_lines": [
      "virtual void OnChannelConnected() = 0"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3552,
    "id": "CVE-2013-0828",
    "commit_id": "4d17163f4b66be517dc49019a029e5ddbd45078c",
    "added_lines": [
      "CSSDefaultStyleSheets::loadDefaultStylesheetIfNecessary",
      "Element* root = document.documentElement"
    ],
    "removed_lines": [
      "Element* root = document.documentElement",
      "CSSDefaultStyleSheets::initDefaultStyle(root",
      "if (CSSDefaultStyleSheets::simpleDefaultStyleSheet",
      "collector.matchedResult().isCacheable = false"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a cast of an unspecified variable"
    ]
  },
  {
    "index": 3556,
    "id": "CVE-2013-0832",
    "commit_id": "879f876e7a00026dde58e3a49886ea79b6ff18ee",
    "added_lines": [],
    "removed_lines": [
      "PASS successfullyParsed is true",
      "TEST COMPLETE",
      "FAIL 0 should be >= 100. Was 0 (of type number).",
      "FAIL 0 should be >= 100. Was 0 (of type number).",
      "PASS 816 is >= 100",
      "PASS 682 is >= 100"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3559,
    "id": "CVE-2013-0835",
    "commit_id": "8c7c42f5cd3d3cab81fad08b1159106184fa0c47",
    "added_lines": [
      "base::Unretained(this)),"
    ],
    "removed_lines": [
      "this),"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 5"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "Unspecified vulnerability"
    ]
  },
  {
    "index": 3560,
    "id": "CVE-2013-0836",
    "commit_id": "f7038db6ef172459f14b1b67a5155b8dd210be0f",
    "added_lines": [
      "JPEGImageDecoder* decoder = m_decoder",
      "if (!decoder->outputScanlines())",
      "if (decoder->failed()) // Careful; |this| is deleted.",
      "return false"
    ],
    "removed_lines": [
      "if (!m_decoder->outputScanlines())"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly implement garbage collection"
    ]
  },
  {
    "index": 3561,
    "id": "CVE-2013-0837",
    "commit_id": "d333e22282bd4bdaa2864980cd45c272f206a44c",
    "added_lines": [
      "m_owner->notifyFlushRequired"
    ],
    "removed_lines": [
      "m_owner->notifySyncRequired"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3564,
    "id": "CVE-2014-7900",
    "commit_id": "22c2cad13b358a133ae399532ce910c1ebb96073",
    "added_lines": [
      "# Copyright 2016 The Chromium Authors. All rights reserved.",
      "# Use of this source code is governed by a BSD-style license that can be",
      "# found in the LICENSE file.",
      "import logging",
      "import unittest",
      "from webkitpy.common.host_mock import MockHost",
      "from webkitpy.common.net.layouttestresults import LayoutTestResult",
      "from webkitpy.w3c.update_w3c_test_expectations import W3CExpectationsLineAdder",
      "_log = logging.getLogger(__name__",
      "class UpdateW3CTestExpectationsTest(unittest.TestCase, W3CExpectationsLineAdder):",
      "def setUp(self):",
      "self.mock_dict_one =",
      "'fake/test/path.html':",
      "'one': {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'},",
      "'two': {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'",
      "self.mock_dict_two =",
      "'fake/test/path.html':",
      "'one': {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'},",
      "'two': {'expected': 'FAIL', 'actual': 'TIMEOUT', 'bug': 'crbug.com/626703'},",
      "'three': {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'",
      "self.mock_dict_three =",
      "'fake/test/path.html':",
      "'four': {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'",
      "def test_merge_same_valued_keys(self):",
      "self.assertEqual(self.merge_same_valued_keys(self.mock_dict_one['fake/test/path.html']),",
      "('two', 'one'): {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'",
      "self.assertEqual(self.merge_same_valued_keys(self.mock_dict_two['fake/test/path.html']),",
      "('three', 'one'): {'expected': 'FAIL', 'actual': 'PASS', 'bug': 'crbug.com/626703'},",
      "'two': {'expected': 'FAIL', 'actual': 'TIMEOUT', 'bug': 'crbug.com/626703'",
      "def test_get_expectations(self):",
      "self.assertEqual(self.get_expectations({'expected': 'FAIL', 'actual': 'PASS'}), ['Pass']",
      "self.assertEqual(self.get_expectations({'expected': 'FAIL', 'actual': 'TIMEOUT'}), ['Timeout']",
      "self.assertEqual(self.get_expectations({'expected': 'TIMEOUT', 'actual': 'PASS'}), ['Pass', 'Timeout']",
      "def test_create_line_list(self):",
      "self.assertEqual(self.create_line_list(self.mock_dict_one),",
      "['crbug.com/626703 [ two ] fake/test/path.html [ Pass ]',",
      "'crbug.com/626703 [ one ] fake/test/path.html [ Pass ]']",
      "self.assertEqual(self.create_line_list(self.mock_dict_two),",
      "['crbug.com/626703 [ three ] fake/test/path.html [ Pass ]',",
      "'crbug.com/626703 [ two ] fake/test/path.html [ Timeout ]',",
      "'crbug.com/626703 [ one ] fake/test/path.html [ Pass ]']",
      "def test_merge_dicts_with_conflict_raise_exception(self):",
      "self.assertRaises(ValueError, self.merge_dicts, self.mock_dict_one, self.mock_dict_two",
      "def test_merge_dicts_merges_second_dict_into_first(self):",
      "output = self.merge_dicts(self.mock_dict_one, self.mock_dict_three",
      "self.assertEqual(output, self.mock_dict_one",
      "output = self.merge_dicts(self.mock_dict_two, self.mock_dict_three",
      "self.assertEqual(output, self.mock_dict_two",
      "def test_generate_results_dict(self):",
      "line_adder = W3CExpectationsLineAdder(MockHost",
      "layout_test_list = [LayoutTestResult",
      "'test/name.html',",
      "'expected': 'bar',",
      "'actual': 'foo',",
      "'is_unexpected': True,",
      "'has_stderr': True",
      ")]",
      "platform = 'dummy_platform'",
      "self.assertEqual(line_adder._generate_results_dict(platform, layout_test_list),",
      "'test/name.html':",
      "'dummy_platform':",
      "'expected': 'bar',",
      "'actual': 'foo',",
      "'bug': 'crbug.com/626703'",
      "def test_write_to_test_expectations_under_comment(self):",
      "host = MockHost",
      "line_adder = W3CExpectationsLineAdder(host",
      "line_adder._host.filesystem.files = {'TestExpectations': '# Tests added from W3C auto import bot\\n'",
      "line_list = ['fake crbug [foo] fake/file/path.html [Pass]']",
      "path = 'TestExpectations'",
      "line_adder.write_to_test_expectations(line_adder, path, line_list",
      "value = line_adder._host.filesystem.read_text_file(path",
      "self.assertEqual(value, '# Tests added from W3C auto import bot\\nfake crbug [foo] fake/file/path.html [Pass]\\n'",
      "def test_write_to_test_expectations_to_eof(self):",
      "host = MockHost",
      "line_adder = W3CExpectationsLineAdder(host",
      "line_adder._host.filesystem.files['TestExpectations'] = 'not empty\\n'",
      "line_list = ['fake crbug [foo] fake/file/path.html [Pass]']",
      "path = 'TestExpectations'",
      "line_adder.write_to_test_expectations(line_adder, path, line_list",
      "value = line_adder.filesystem.read_text_file(path",
      "self.assertEqual(value, 'not empty\\n\\n# Tests added from W3C auto import bot\\nfake crbug [foo] fake/file/path.html [Pass]'"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3566,
    "id": "CVE-2014-7902",
    "commit_id": "fda138a9b26e5edd158f2b33155827f14649bd5e",
    "added_lines": [
      "RunCommand BuildSysrootARM64"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3570,
    "id": "CVE-2014-7906",
    "commit_id": "3a2cf7d1376ae33054b878232fb38b8fbed29e31",
    "added_lines": [
      "PepperMediaDeviceManager::GetForRenderFrame(render_frame).get() : NULL"
    ],
    "removed_lines": [
      "PepperMediaDeviceManager::GetForRenderFrame(render_frame) : NULL"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3572,
    "id": "CVE-2014-7907",
    "commit_id": "bed415634f57baf1e74d94d133b251fab330919e",
    "added_lines": [
      "<!DOCTYPE html>",
      "<html>",
      "<body>",
      "<script>",
      "window.iframeLoaded = function()",
      "document.location.hash = '#ready'",
      "var iframe = document.getElementsByTagName('iframe')[0]",
      "var oldScreen = iframe.contentWindow.screen",
      "iframe.remove",
      "oldScreen.orientation.unlock",
      "document.location.hash = '#done'",
      "</script>",
      "<iframe src='detached-iframe.html'></iframe>",
      "</body>",
      "</html>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3574,
    "id": "CVE-2014-7909",
    "commit_id": "2571533bbb5b554ff47205c8ef1513ccc0817c3e",
    "added_lines": [
      "WeakPtr<DocumentThreadableLoader> self(m_weakFactory.createWeakPtr",
      "if (!self",
      "return",
      "if (!client",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "computes a hash key using uninitialized integer values"
    ]
  },
  {
    "index": 3575,
    "id": "CVE-2014-7910",
    "commit_id": "63d26d050ffc4707fabaef0cac4206f8118cea45",
    "added_lines": [
      "## Owners: dom-dev@chromium.org",
      "# imported/wpt/domparsing [ Pass ]",
      "## Owners: dom-dev@chromium.org",
      "# imported/wpt/domxpath [ Pass ]",
      "## Owners: dom-dev@chromium.org",
      "# imported/wpt/innerText [ Pass ]"
    ],
    "removed_lines": [
      "imported/wpt/domparsing [ Skip ]",
      "imported/wpt/domxpath [ Skip ]",
      "imported/wpt/innerText [ Skip ]"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3576,
    "id": "CVE-2014-1743",
    "commit_id": "6d9425ec7badda912555d46ea7abcfab81fdd9b9",
    "added_lines": [
      "const gfx::Size& surface_size,",
      "const gfx::Rect& viewport,",
      "const gfx::Rect& clip,",
      "const gfx::Rect& viewport_rect_for_tile_priority,",
      "const gfx::Rect& viewport,",
      "const gfx::Rect& clip,",
      "const gfx::Rect& viewport_rect_for_tile_priority,",
      "const gfx::Transform& transform_for_tile_priority,"
    ],
    "removed_lines": [
      "gfx::Size surface_size,",
      "gfx::Rect viewport,",
      "gfx::Rect clip,",
      "gfx::Rect viewport_rect_for_tile_priority,",
      "gfx::Rect viewport,",
      "gfx::Rect clip,",
      "gfx::Rect viewport_rect_for_tile_priority,",
      "gfx::Transform transform_for_tile_priority,"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3578,
    "id": "CVE-2014-1745",
    "commit_id": "d2c76fcea781690c2ffe6c03ee5aa313e45b275d",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3582,
    "id": "CVE-2014-1749",
    "commit_id": "4a3e17c874bc4c4c90e5b0f8ec568520964695d4",
    "added_lines": [
      "#include \"public/platform/WebURL.h\"",
      "WebURL icon"
    ],
    "removed_lines": [
      "WebNotificationAction() = default",
      "WebNotificationAction(const WebNotificationAction&) = default",
      "WebNotificationAction(const WebString& action, const WebString& title",
      ": action(action",
      ", title(title"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3583,
    "id": "CVE-2014-3189",
    "commit_id": "1a2fd6cd9275d2fdd909c2f867ae57744bfa4e49",
    "added_lines": [
      "#include \"base/macros.h\"",
      "DISALLOW_COPY_AND_ASSIGN(ScopedJavaSurface"
    ],
    "removed_lines": [
      "#include \"base/move.h\"",
      "MOVE_ONLY_TYPE_FOR_CPP_03(ScopedJavaSurface"
    ],
    "cause": [
      "Memory Management",
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "unknown vectors",
      "out-of-bounds read"
    ]
  },
  {
    "index": 3584,
    "id": "CVE-2014-3190",
    "commit_id": "69d556efff99f5d4d218d3fdb0b5d498b4c0a588",
    "added_lines": [
      "preLoad: function()",
      "SettingsPageBrowserTest.prototype.preLoad.call(this",
      "settingsHidePagesByDefaultForTest = true",
      "},",
      "self.getPage('basic').set('pageVisibility.onStartup', true",
      "Polymer.dom.flush"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3585,
    "id": "CVE-2014-3191",
    "commit_id": "11a4cc4a6d6e665d9a118fada4b7c658d6f70d95",
    "added_lines": [
      "frameView->setNeedsUpdateWidgetPositions"
    ],
    "removed_lines": [
      "frameView->updateWidgetPositions",
      "RELEASE_ASSERT(frameView->renderView"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3586,
    "id": "CVE-2014-3192",
    "commit_id": "0466de340a7a064c46bff03dbf2da2024342de32",
    "added_lines": [
      "7c8caddfbd0b2d7b844f8fcc75175b9cb9cf4724"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3587,
    "id": "CVE-2014-3193",
    "commit_id": "ae57a55d4e10ca7d613cbdfceaf834b64dfe9c7d",
    "added_lines": [
      "case 'toggleBrailleCaptions':",
      "cvox.BrailleCaptionsBackground.setActive",
      "!cvox.BrailleCaptionsBackground.isEnabled",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "use-after-free",
      "type confusion"
    ]
  },
  {
    "index": 3588,
    "id": "CVE-2014-3194",
    "commit_id": "05c619eb6e7dac046afc72c0d5381856f87fb421",
    "added_lines": [
      "if (container_ == ash::kShellWindowId_SystemModalContainer)",
      "gfx::Rect hit_test_bounds =",
      "surface_->GetHitTestBounds() + surface_origin.OffsetFromOrigin",
      "bool activatable = activatable_ && !hit_test_bounds.IsEmpty",
      "if (activatable != CanActivate())",
      "set_can_activate(activatable",
      "aura::client::ActivationClient* activation_client =",
      "ash::Shell::GetInstance()->activation_client",
      "if (activatable",
      "activation_client->ActivateWindow(widget_->GetNativeWindow",
      "else if (widget_->IsActive",
      "activation_client->DeactivateWindow(widget_->GetNativeWindow",
      "bool activatable = activatable_",
      "if (container_ == ash::kShellWindowId_SystemModalContainer",
      "activatable &= !surface_->GetHitTestBounds().IsEmpty"
    ],
    "removed_lines": [
      "gfx::Rect hit_test_bounds =",
      "surface_->GetHitTestBounds() + surface_origin.OffsetFromOrigin",
      "bool activatable = activatable_ && !hit_test_bounds.IsEmpty",
      "if (activatable != CanActivate())",
      "set_can_activate(activatable",
      "aura::client::ActivationClient* activation_client =",
      "ash::Shell::GetInstance()->activation_client",
      "if (activatable",
      "activation_client->ActivateWindow(widget_->GetNativeWindow",
      "else if (widget_->IsActive",
      "activation_client->DeactivateWindow(widget_->GetNativeWindow",
      "bool activatable = activatable_ && !surface_->GetHitTestBounds().IsEmpty"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3593,
    "id": "CVE-2014-3199",
    "commit_id": "0fe758fd6d99cadd1a533018e5ccce602a8b6cd5",
    "added_lines": [
      "libdbus-1-3 (>= 1.1.4"
    ],
    "removed_lines": [
      "libdbus-1-3 (>= 1.2.14"
    ],
    "cause": [
      "Uncategorized"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown"
    ]
  },
  {
    "index": 3594,
    "id": "CVE-2014-3200",
    "commit_id": "c0947dabeaa10da67798c1bbc668dca4b280cad5",
    "added_lines": [
      "<int value=\"332391072\" label=\"cs-contextual-cards-bar-integration\"/>"
    ],
    "removed_lines": [
      "<int value=\"2159633\" label=\"cs-now-on-tap-bar-integration\"/>"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3596,
    "id": "CVE-2014-3178",
    "commit_id": "2daffdccc85520a52ddfaaf8739b3d08517ff1a9",
    "added_lines": [
      "'Google Chrome Mac': 'gyp_official_goma',"
    ],
    "removed_lines": [
      "'Google Chrome Mac': 'gn_official_goma',"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3597,
    "id": "CVE-2014-3179",
    "commit_id": "d800220da9f744779f1989e2092c88770adcd20a",
    "added_lines": [],
    "removed_lines": [
      "ResponseConstructedWithReadableStream status=stable",
      "ResponseBodyWithV8ExtraStream status=stable"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3599,
    "id": "CVE-2014-3168",
    "commit_id": "f592cf6a66b63decc7e7093b36501229a5de1f1d",
    "added_lines": [
      "RELEASE_ASSERT(!m_beginTime"
    ],
    "removed_lines": [
      "ASSERT(!m_beginTime"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3600,
    "id": "CVE-2014-3169",
    "commit_id": "e3a55f8fe3980f561aaba28e1a593d7ad020653b",
    "added_lines": [
      "EXPECT_TRUE([actionButton isHighlighted]",
      "EXPECT_FALSE([actionButton isHighlighted]",
      "EXPECT_FALSE([actionButton isHighlighted]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3602,
    "id": "CVE-2014-3171",
    "commit_id": "d10a8dac48d3a9467e81c62cb45208344f4542db",
    "added_lines": [
      "m_blobDataHandles.set(blob->uuid(), blob->blobDataHandle",
      "m_blobDataHandles.set(file->uuid(), file->blobDataHandle",
      "m_blobDataHandles.set(file->uuid(), file->blobDataHandle"
    ],
    "removed_lines": [
      "m_blobDataHandles.add(blob->uuid(), blob->blobDataHandle",
      "m_blobDataHandles.add(file->uuid(), file->blobDataHandle",
      "m_blobDataHandles.add(file->uuid(), file->blobDataHandle"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3606,
    "id": "CVE-2014-3175",
    "commit_id": "4843d98517bd37e5940cd04627c6cfd2ac774d11",
    "added_lines": [
      "<obsolete>",
      "These were temporary metrics intended to understand whether high/low",
      "resolution clocks adversely impact page load metrics. After collecting a few",
      "months of data it was determined that clock resolution doesn't adversely",
      "impact our metrics, and that these histograms were no longer needed.",
      "</obsolete>"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3607,
    "id": "CVE-2014-3165",
    "commit_id": "281d13f018a313672f4117971bf03986de99b481",
    "added_lines": [
      "void LogConnectEndEvent(int rv"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3609,
    "id": "CVE-2014-3167",
    "commit_id": "44f1431b20c16d8f8da0ce8ff7bbf2adddcdd785",
    "added_lines": [
      "double xScaleSquared() const",
      "double yScaleSquared() const"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3611,
    "id": "CVE-2014-3162",
    "commit_id": "e98fa42ceeeb3b146186cf2676109190aece9881",
    "added_lines": [],
    "removed_lines": [
      "'public/cpp/initialize_base_and_icu.cc',",
      "'public/cpp/initialize_base_and_icu.h',"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3612,
    "id": "CVE-2014-3154",
    "commit_id": "f14efc560a12a513696d6396413b138879dabd7a",
    "added_lines": [
      "#include \"content/child/fileapi/webfilesystem_impl.h\"",
      "WebFileSystemImpl::DeleteThreadSpecificInstance"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3613,
    "id": "CVE-2014-3155",
    "commit_id": "2025798e133f9adc49b65d017dbb5cb2c5cc74c9",
    "added_lines": [
      "#include <vector>",
      "#include \"base/stl_util.h\"",
      "std::vector<SpdyBufferProducer*> erased_buffer_producers",
      "erased_buffer_producers.push_back(it->frame_producer",
      "STLDeleteElements(&erased_buffer_producers);  // Invokes callbacks.",
      "std::vector<SpdyBufferProducer*> erased_buffer_producers",
      "erased_buffer_producers.push_back(it->frame_producer",
      "STLDeleteElements(&erased_buffer_producers);  // Invokes callbacks.",
      "std::vector<SpdyBufferProducer*> erased_buffer_producers",
      "erased_buffer_producers.push_back(it->frame_producer",
      "STLDeleteElements(&erased_buffer_producers);  // Invokes callbacks."
    ],
    "removed_lines": [
      "delete it->frame_producer",
      "delete it->frame_producer",
      "delete it->frame_producer"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 3616,
    "id": "CVE-2014-1740",
    "commit_id": "fcdad2be07cb19e9f58b451599d14d2ff0b7b235",
    "added_lines": [],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3618,
    "id": "CVE-2014-1742",
    "commit_id": "870f3e99a1282023753fe8d8aed90879cbc6838f",
    "added_lines": [
      "bool IsTraceEventArgsWhitelisted",
      "const char* category_group_name,",
      "const char* event_name,",
      "base::trace_event::ArgumentNameFilterPredicate* arg_filter)",
      "EXPECT_FALSE(upload_config_wrapper.TraceHasMatchingString(\"this_not_found\""
    ],
    "removed_lines": [
      "bool IsTraceEventArgsWhitelisted(const char* category_group_name,",
      "const char* event_name)",
      "EXPECT_TRUE(!upload_config_wrapper.TraceHasMatchingString(\"this_not_found\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3648,
    "id": "CVE-2014-1713",
    "commit_id": "f85a87ec670ad0fce9d98d90c9a705b72a288154",
    "added_lines": [
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->location",
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->locationWithException",
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->locationWithCallWith",
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->locationWithPerWorldBindings",
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->locationWithPerWorldBindings",
      "RefPtr<TestNode> imp = WTF::getPtr(proxyImp->locationReplaceable"
    ],
    "removed_lines": [
      "TestNode* imp = WTF::getPtr(proxyImp->location",
      "TestNode* imp = WTF::getPtr(proxyImp->locationWithException",
      "TestNode* imp = WTF::getPtr(proxyImp->locationWithCallWith",
      "TestNode* imp = WTF::getPtr(proxyImp->locationWithPerWorldBindings",
      "TestNode* imp = WTF::getPtr(proxyImp->locationWithPerWorldBindings",
      "TestNode* imp = WTF::getPtr(proxyImp->locationReplaceable"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3649,
    "id": "CVE-2014-1714",
    "commit_id": "5b0d76edd5d6d4054b2e1263e23c852226c5f701",
    "added_lines": [
      "bool Equals(const FormatType& other) const"
    ],
    "removed_lines": [
      "bool Equals(const FormatType& other) const"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not verify a certain format value"
    ]
  },
  {
    "index": 3652,
    "id": "CVE-2014-1700",
    "commit_id": "d926098e2e2be270c80a5ba25ab8a611b80b8556",
    "added_lines": [
      "if (it)",
      "delete it.get"
    ],
    "removed_lines": [
      "if (it"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3653,
    "id": "CVE-2014-1700",
    "commit_id": "1842dcb929820618efbc5fabda7c82d08846c25a",
    "added_lines": [
      "my $isEventDispatcher = $name eq \"dispatchEvent\"",
      "if ($isEventListener || $isEventDispatcher)",
      "END",
      "if ($isEventListener)",
      "my $lookupType = ($name eq \"addEventListener\") ? \"OrCreate\" : \"Only\"",
      "my $passRefPtrHandling = ($name eq \"addEventListener\") ? \"\" : \".get()\"",
      "my $hiddenValueAction = ($name eq \"addEventListener\") ? \"addHiddenValueToArray\" : \"removeHiddenValueFromArray\"",
      "$code .= <<END"
    ],
    "removed_lines": [
      "if ($isEventListener)",
      "my $lookupType = ($name eq \"addEventListener\") ? \"OrCreate\" : \"Only\"",
      "my $passRefPtrHandling = ($name eq \"addEventListener\") ? \"\" : \".get()\"",
      "my $hiddenValueAction = ($name eq \"addEventListener\") ? \"addHiddenValueToArray\" : \"removeHiddenValueFromArray\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3654,
    "id": "CVE-2014-1700",
    "commit_id": "318530d771586b39056c0da7b8bdad03469a0dc4",
    "added_lines": [
      "KEYBOARD_EXPORT bool IsSmartDeployEnabled"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3656,
    "id": "CVE-2014-1700",
    "commit_id": "685c3980d31b5199924086b8c93a1ce751d24733",
    "added_lines": [
      "#include \"content/shell/renderer/layout_test/blink_test_helpers.h\""
    ],
    "removed_lines": [
      "#include \"content/shell/common/webkit_test_helpers.h\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3657,
    "id": "CVE-2014-1700",
    "commit_id": "ee2e4879fc7df806647427ea9a7553c183de9702",
    "added_lines": [
      "eebd09a79b9b9dc23cbca9826c65b11e39830118"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3663,
    "id": "CVE-2013-6649",
    "commit_id": "70bcb6b3396a395e871e10b2ff883d92b8218e9f",
    "added_lines": [
      "if (childPaintInfo.phase == PaintPhaseForeground && !m_objectBoundingBox.isEmpty())",
      "if (style()->svgStyle()->bufferedRendering() == BR_STATIC && renderingContext.bufferForeground(m_bufferedForeground"
    ],
    "removed_lines": [
      "if (childPaintInfo.phase == PaintPhaseForeground)",
      "if (style()->svgStyle()->bufferedRendering() == BR_STATIC  && renderingContext.bufferForeground(m_bufferedForeground"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3665,
    "id": "CVE-2013-6663",
    "commit_id": "cace1e6998293b9b025d4bbdaf5cb5b6a1c2efb4",
    "added_lines": [
      "RenderSVGRoot* renderer = toRenderSVGRoot(rootElement->renderer",
      "if (!renderer",
      "return"
    ],
    "removed_lines": [
      "RenderSVGRoot* renderer = toRenderSVGRoot(rootElement->renderer",
      "if (!renderer",
      "return"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3666,
    "id": "CVE-2013-6663",
    "commit_id": "fb5dce12f0462056fc9f66967b0f7b2b7bcd88f5",
    "added_lines": [
      "<structure name=\"IDR_WEBUI_JS_POLYMER_CONFIG\"",
      "file=\"js/polymer_config.js\" type=\"chrome_html\" />"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3667,
    "id": "CVE-2013-6663",
    "commit_id": "59296d9276ffcc8bced092828210748d2ed19ab0",
    "added_lines": [
      "<histogram name=\"Plugin.FlashNavigateUsage\" enum=\"FlashNavigateUsageType\">",
      "<summary>Record usage of PPB_Flash.Navigate() Pepper API.</summary>",
      "</histogram>",
      "<enum name=\"FlashNavigateUsageType\" type=\"int\">",
      "<int value=\"0\" label=\"Rejected because of Authorization header.\"/>",
      "<int value=\"1\" label=\"Rejected because of Cache-Control header.\"/>",
      "<int value=\"2\" label=\"Rejected because of Content-Encoding header.\"/>",
      "<int value=\"3\" label=\"Rejected because of Content-MD5 header.\"/>",
      "<int value=\"4\" label=\"Rejected because of Content-Type header.\"/>",
      "<int value=\"5\" label=\"Rejected because of Expires header.\"/>",
      "<int value=\"6\" label=\"Rejected because of From header.\"/>",
      "<int value=\"7\" label=\"Rejected because of If-Match header.\"/>",
      "<int value=\"8\" label=\"Rejected because of If-None-Match header.\"/>",
      "<int value=\"9\" label=\"Rejected because of If-Range header.\"/>",
      "<int value=\"10\" label=\"Rejected because of If-Unmodified-Since header.\"/>",
      "<int value=\"11\" label=\"Rejected because of Pragma header.\"/>",
      "<int value=\"12\" label=\"Rejected because of Referer header.\"/>",
      "<int value=\"13\"",
      "label=\"Rejected because of other headers (e.g., custom headers).\"/>",
      "<int value=\"14\" label=\"The total number of rejected navigate requests.\"/>",
      "<int value=\"15\" label=\"The total number of navigate requests.\"/>",
      "</enum>"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3668,
    "id": "CVE-2013-6667",
    "commit_id": "201d2ae4d50a755f3b4ba799c00590cfa2fe3b93",
    "added_lines": [
      "if (cl->HasSwitch(switches::kWebViewSandboxedRenderer))"
    ],
    "removed_lines": [
      "if (cl->HasSwitch(switches::kWebViewSanboxedRenderer))"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3669,
    "id": "CVE-2013-6663",
    "commit_id": "c21d7ac13d69cbadbbb5b2dc147be1933d52147a",
    "added_lines": [
      "UpdateDisplay(\"100+100-200x200,100+300-200x200\"",
      "EXPECT_EQ(\"350,10\", ConvertHostPointToScreen(150, 210",
      "UpdateDisplay(\"50+50-200x200*2,50+300-300x300\"",
      "EXPECT_EQ(\"50,50 200x200\",",
      "root_windows[0]->GetHost()->GetBounds().ToString",
      "EXPECT_EQ(\"50,300 300x300\",",
      "root_windows[1]->GetHost()->GetBounds().ToString",
      "EXPECT_EQ(\"250,200\", ConvertHostPointToScreen(150, 450"
    ],
    "removed_lines": [
      "UpdateDisplay(\"100+100-200x200*2,100+500-200x200\"",
      "EXPECT_EQ(\"100,100\",",
      "root_windows[0]->GetHost()->",
      "GetBounds().origin().ToString",
      "EXPECT_EQ(\"200x200\",",
      "root_windows[0]->GetHost()->",
      "GetBounds().size().ToString",
      "EXPECT_EQ(\"100,500\",",
      "root_windows[1]->GetHost()->",
      "GetBounds().origin().ToString",
      "EXPECT_EQ(\"200x200\",",
      "root_windows[1]->GetHost()->",
      "GetBounds().size().ToString",
      "EXPECT_EQ(\"250,50\", ConvertHostPointToScreen(150, 450"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3679,
    "id": "CVE-2013-6641",
    "commit_id": "fb612ea97da6d058f017248c24efed2f0a958ad5",
    "added_lines": [
      "(Var(\"googlecode_url\") % \"libyuv\") + \"/trunk@979\","
    ],
    "removed_lines": [
      "(Var(\"googlecode_url\") % \"libyuv\") + \"/trunk@978\","
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3684,
    "id": "CVE-2013-6644",
    "commit_id": "db93178bcaaf7e99ebb18bd51fa99b2feaf47e1f",
    "added_lines": [
      "const Extension* GetInstalledExtension(const std::string& id) const"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3695,
    "id": "CVE-2015-6792",
    "commit_id": "054eb9147e0a877d52410a18c948035fa6062381",
    "added_lines": [
      "lib = ''",
      "lib = [p.replace('\"', r'\\\"') for p in env['LIB'].split(';') if p]",
      "# Make lib path relative to builddir when cwd and sdk in same drive.",
      "try:",
      "lib = map(os.path.relpath, lib",
      "except ValueError:",
      "pass",
      "libpath_flags = ' '.join([q('-libpath:' + i) for i in lib]",
      "assert libpath_flags",
      "print 'libpath_flags = ' + gn_helpers.ToGNString(libpath_flags"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "unspecified vectors"
    ]
  },
  {
    "index": 3696,
    "id": "CVE-2015-6788",
    "commit_id": "58f84d059486796cc3652797eab5eab997720cad",
    "added_lines": [],
    "removed_lines": [
      "if (is_posix && is_debug)",
      "# The Chromium configs defines this for all posix _except_ for ios & mac.",
      "# We want it there as well, e.g. because ASSERT and friends trigger off of",
      "# it.",
      "defines += [ \"_DEBUG\" ]"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3697,
    "id": "CVE-2015-6789",
    "commit_id": "3a035998dfcdcb0856f3b7b8e87b3bba0f1ab0be",
    "added_lines": [
      "not_needed(invoker,",
      "[",
      "\"additional_configs\",",
      "\"check_includes\",",
      "\"defines\",",
      "\"deps\",",
      "\"dict\",",
      "\"include_dirs\",",
      "\"libfuzzer_options\",",
      "\"seed_corpus\",",
      "\"seed_corpus_deps\",",
      "\"seed_corpuses\",",
      "\"sources\",",
      "]"
    ],
    "removed_lines": [
      "assert(invoker.sources == [] || invoker.sources != []",
      "if (defined(invoker.additional_configs))",
      "assert",
      "invoker.additional_configs == [] || invoker.additional_configs != []",
      "if (defined(invoker.deps))",
      "assert(invoker.deps == [] || invoker.deps != []",
      "if (defined(invoker.dict))",
      "assert(invoker.dict == [] || invoker.dict != []",
      "if (defined(invoker.libfuzzer_options))",
      "assert(invoker.libfuzzer_options == [] || invoker.libfuzzer_options != []",
      "if (defined(invoker.seed_corpus))",
      "assert(invoker.seed_corpus == [] || invoker.seed_corpus != []",
      "if (defined(invoker.seed_corpuses))",
      "assert(invoker.seed_corpuses == [] || invoker.seed_corpuses != []",
      "if (defined(invoker.seed_corpus_deps))",
      "assert(invoker.seed_corpus_deps == [] || invoker.seed_corpus_deps != []",
      "assert(!defined(invoker.check_includes) || invoker.check_includes != []",
      "assert(!defined(invoker.include_dirs) || invoker.include_dirs != []",
      "assert(!defined(invoker.defines) || invoker.defines != []"
    ],
    "cause": [
      "Memory Management",
      "Race Condition or Concurrency",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "race condition",
      "implementation in blink"
    ]
  },
  {
    "index": 3699,
    "id": "CVE-2015-6791",
    "commit_id": "7e995b26a5a503adefc0ad40435f7e16a45434c2",
    "added_lines": [
      "const base::FilePath& mounted_path,",
      "MountType type)",
      "if (type == MOUNT_TYPE_NETWORK_STORAGE",
      "return MOUNT_ERROR_NONE",
      "base::BindOnce(&PerformFakeMount, source_path, mounted_path, type),"
    ],
    "removed_lines": [
      "const base::FilePath& mounted_path)",
      "base::BindOnce(&PerformFakeMount, source_path, mounted_path),"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3700,
    "id": "CVE-2015-6765",
    "commit_id": "e5c298b780737c53fa9aae44d6fef522931d88b0",
    "added_lines": [
      "std::set<GURL> failed_master_entries_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS ExecCode",
    "score": 10.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS Exec Code ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3701,
    "id": "CVE-2015-6766",
    "commit_id": "2cb006bc9d3ad16353ed49c2b75faea618156d0f",
    "added_lines": [
      "CHECK(found != pending_master_entries_.end",
      "CHECK(it != hosts.end"
    ],
    "removed_lines": [
      "DCHECK(found != pending_master_entries_.end",
      "DCHECK(it != hosts.end"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3702,
    "id": "CVE-2015-6767",
    "commit_id": "4b5eefe562bd45c059f5dd93079450db5610788a",
    "added_lines": [
      "#include \"base/memory/weak_ptr.h\"",
      "base::WeakPtrFactory<AppCacheDispatcherHost> weak_factory_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Logical Flaws"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "incorrect pointer",
      "use-after-free"
    ]
  },
  {
    "index": 3710,
    "id": "CVE-2015-6774",
    "commit_id": "4026d85fcded8c4ee5113cb1bd1a7e8149e03827",
    "added_lines": [
      "if (!frame)",
      "args.GetReturnValue().SetNull",
      "return",
      "WebDataSource* data_source = frame->dataSource",
      "if (!data_source)",
      "args.GetReturnValue().SetNull",
      "return",
      "DocumentState* document_state = DocumentState::FromDataSource(data_source",
      "if (!document_state)",
      "args.GetReturnValue().SetNull",
      "return",
      "double request_time = document_state->request_time().ToDoubleT",
      "double start_load_time = document_state->start_load_time().ToDoubleT",
      "double commit_load_time = document_state->commit_load_time().ToDoubleT",
      "double finish_document_load_time =",
      "document_state->finish_document_load_time().ToDoubleT",
      "double finish_load_time = document_state->finish_load_time().ToDoubleT",
      "double first_paint_time = document_state->first_paint_time().ToDoubleT",
      "double first_paint_after_load_time =",
      "document_state->first_paint_after_load_time().ToDoubleT",
      "std::string navigation_type =",
      "GetNavigationType(data_source->navigationType",
      "bool was_fetched_via_spdy = document_state->was_fetched_via_spdy",
      "bool was_npn_negotiated = document_state->was_npn_negotiated",
      "std::string npn_negotiated_protocol =",
      "document_state->npn_negotiated_protocol",
      "bool was_alternate_protocol_available =",
      "document_state->was_alternate_protocol_available",
      "std::string connection_info = net::HttpResponseInfo::ConnectionInfoToString",
      "document_state->connection_info",
      "v8::Isolate* isolate = args.GetIsolate",
      "v8::Local<v8::Object> load_times = v8::Object::New(isolate",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"requestTime\"),",
      "v8::Number::New(isolate, request_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"startLoadTime\"),",
      "v8::Number::New(isolate, start_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"commitLoadTime\"),",
      "v8::Number::New(isolate, commit_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"finishDocumentLoadTime\"),",
      "v8::Number::New(isolate, finish_document_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"finishLoadTime\"),",
      "v8::Number::New(isolate, finish_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"firstPaintTime\"),",
      "v8::Number::New(isolate, first_paint_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"firstPaintAfterLoadTime\"),",
      "v8::Number::New(isolate, first_paint_after_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"navigationType\"),",
      "v8::String::NewFromUtf8(isolate, navigation_type.c_str",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"wasFetchedViaSpdy\"),",
      "v8::Boolean::New(isolate, was_fetched_via_spdy",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"wasNpnNegotiated\"),",
      "v8::Boolean::New(isolate, was_npn_negotiated",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"npnNegotiatedProtocol\"),",
      "v8::String::NewFromUtf8(isolate, npn_negotiated_protocol.c_str",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"wasAlternateProtocolAvailable\"),",
      "v8::Boolean::New(isolate, was_alternate_protocol_available",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"connectionInfo\"),",
      "v8::String::NewFromUtf8(isolate, connection_info.c_str",
      "args.GetReturnValue().Set(load_times"
    ],
    "removed_lines": [
      "if (frame)",
      "WebDataSource* data_source = frame->dataSource",
      "if (data_source)",
      "DocumentState* document_state =",
      "DocumentState::FromDataSource(data_source",
      "v8::Isolate* isolate = args.GetIsolate",
      "v8::Local<v8::Object> load_times = v8::Object::New(isolate",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"requestTime\"),",
      "v8::Number::New(isolate,",
      "document_state->request_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"startLoadTime\"),",
      "v8::Number::New(isolate,",
      "document_state->start_load_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"commitLoadTime\"),",
      "v8::Number::New(isolate,",
      "document_state->commit_load_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"finishDocumentLoadTime\"),",
      "v8::Number::New",
      "isolate,",
      "document_state->finish_document_load_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"finishLoadTime\"),",
      "v8::Number::New(isolate,",
      "document_state->finish_load_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"firstPaintTime\"),",
      "v8::Number::New(isolate,",
      "document_state->first_paint_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"firstPaintAfterLoadTime\"),",
      "v8::Number::New",
      "isolate,",
      "document_state->first_paint_after_load_time().ToDoubleT",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"navigationType\"),",
      "v8::String::NewFromUtf8",
      "isolate, GetNavigationType(data_source->navigationType",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"wasFetchedViaSpdy\"),",
      "v8::Boolean::New(isolate, document_state->was_fetched_via_spdy",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"wasNpnNegotiated\"),",
      "v8::Boolean::New(isolate, document_state->was_npn_negotiated",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"npnNegotiatedProtocol\"),",
      "v8::String::NewFromUtf8",
      "isolate, document_state->npn_negotiated_protocol().c_str",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"wasAlternateProtocolAvailable\"),",
      "v8::Boolean::New",
      "isolate, document_state->was_alternate_protocol_available",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"connectionInfo\"),",
      "v8::String::NewFromUtf8",
      "isolate,",
      "net::HttpResponseInfo::ConnectionInfoToString",
      "document_state->connection_info()).c_str",
      "args.GetReturnValue().Set(load_times",
      "return",
      "args.GetReturnValue().SetNull"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3711,
    "id": "CVE-2015-6775",
    "commit_id": "53f1c0f95e568d4b6b184904f98cfde2833c603c",
    "added_lines": [],
    "removed_lines": [
      "DCHECK_GE(cue->startTime(), 0",
      "DCHECK_GE(cue->endTime(), 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3713,
    "id": "CVE-2015-6777",
    "commit_id": "eb4d5d9ab41449b79fcf6f84d8983be2b12bd490",
    "added_lines": [
      "ASSERT(insertionPoint->inDocument() || insertionPoint->isInShadowTree() || isContainerNode"
    ],
    "removed_lines": [
      "ASSERT(insertionPoint->inDocument() || isContainerNode"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3716,
    "id": "CVE-2015-6780",
    "commit_id": "f2cba0d13b3a6d76dedede66731e5ca253d3b2af",
    "added_lines": [
      "web_contents(), url(), ssl(), cert_store"
    ],
    "removed_lines": [
      "infobar_service(), url(), ssl(), cert_store"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3723,
    "id": "CVE-2015-6787",
    "commit_id": "f911e11e7f6b5c0d6f5ee694a9871de6619889f7",
    "added_lines": [
      "TestPaintArtifact& Chunk(const TransformPaintPropertyNode&,",
      "const ClipPaintPropertyNode&,",
      "const EffectPaintPropertyNode&",
      "const TransformPaintPropertyNode& scroll_offset",
      "const TransformPaintPropertyNode&,",
      "const ClipPaintPropertyNode&,",
      "const EffectPaintPropertyNode&",
      "const TransformPaintPropertyNode& scroll_offset"
    ],
    "removed_lines": [
      "TestPaintArtifact& Chunk(scoped_refptr<const TransformPaintPropertyNode>,",
      "scoped_refptr<const ClipPaintPropertyNode>,",
      "scoped_refptr<const EffectPaintPropertyNode>",
      "scoped_refptr<const TransformPaintPropertyNode> scroll_offset",
      "scoped_refptr<const TransformPaintPropertyNode>,",
      "scoped_refptr<const ClipPaintPropertyNode>,",
      "scoped_refptr<const EffectPaintPropertyNode>",
      "scoped_refptr<const TransformPaintPropertyNode> scroll_offset"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3725,
    "id": "CVE-2015-6756",
    "commit_id": "552422a88a1f9e50191588b03b6b284611911500",
    "added_lines": [
      "'pdfium_revision': 'b8a074711108baf04017d86207e08c19ff327d8e',"
    ],
    "removed_lines": [
      "'pdfium_revision': '20fc82efdc9c9e4caa6e72d05a83b9206e8c8f72',"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3726,
    "id": "CVE-2015-6757",
    "commit_id": "37b83877e63f62f8aebb337494f1116539182bdf",
    "added_lines": [
      "void DestroyWorker(scoped_ptr<EmbeddedWorkerInstance> worker,",
      "ServiceWorkerStatusCode* out_status,",
      "ServiceWorkerStatusCode status)",
      "worker.reset",
      "void OnStopped(EmbeddedWorkerInstance::Status old_status) override",
      "stopped_ = true",
      "stopped_old_status_ = old_status",
      "bool stopped_ = false",
      "EmbeddedWorkerInstance::Status stopped_old_status_ =",
      "EmbeddedWorkerInstance::STOPPED",
      "class FailToSendIPCHelper : public EmbeddedWorkerTestHelper",
      "public:",
      "FailToSendIPCHelper",
      ": EmbeddedWorkerTestHelper(base::FilePath(), kRenderProcessId)",
      "~FailToSendIPCHelper() override",
      "bool Send(IPC::Message* message) override",
      "delete message",
      "return false",
      "worker->AddListener(this",
      "worker->status_ = EmbeddedWorkerInstance::STOPPED",
      "base::RunLoop run_loop",
      "worker->SendStartWorker(params.Pass(), base::Bind(&SaveStatusAndCall, &status,",
      "run_loop.QuitClosure()),",
      "true, -1, false",
      "run_loop.Run",
      "EXPECT_EQ(SERVICE_WORKER_ERROR_ABORT, status",
      "EXPECT_FALSE(stopped_",
      "EXPECT_FALSE(detached_",
      "worker->status_ = EmbeddedWorkerInstance::STOPPED",
      "EmbeddedWorkerInstance* worker_ptr = worker.get",
      "worker_ptr->SendStartWorker",
      "params.Pass(), base::Bind(&DestroyWorker, base::Passed(&worker), &status),",
      "true, -1, false",
      "TEST_F(EmbeddedWorkerInstanceTest, FailToSendStartIPC)",
      "helper_.reset(new FailToSendIPCHelper",
      "const int64 version_id = 55L",
      "const GURL pattern(\"http://example.com/\"",
      "const GURL url(\"http://example.com/worker.js\"",
      "scoped_ptr<EmbeddedWorkerInstance> worker =",
      "embedded_worker_registry()->CreateWorker",
      "helper_->SimulateAddProcessToPattern(pattern, kRenderProcessId",
      "ServiceWorkerStatusCode status = SERVICE_WORKER_ERROR_FAILED",
      "worker->AddListener(this",
      "base::RunLoop run_loop",
      "worker->Start",
      "version_id, pattern, url,",
      "base::Bind(&SaveStatusAndCall, &status, run_loop.QuitClosure",
      "run_loop.Run",
      "EXPECT_EQ(SERVICE_WORKER_ERROR_IPC_FAILED, status",
      "EXPECT_TRUE(stopped_",
      "EXPECT_EQ(EmbeddedWorkerInstance::STARTING, stopped_old_status_"
    ],
    "removed_lines": [
      "void SaveStatus(ServiceWorkerStatusCode* out, ServiceWorkerStatusCode status)",
      "worker->process_id_ = -1",
      "worker->SendStartWorker(params.Pass(), base::Bind(&SaveStatus, &status), true,",
      "-1, false",
      "scoped_ptr<EmbeddedWorkerMsg_StartWorker_Params> params",
      "new EmbeddedWorkerMsg_StartWorker_Params"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3727,
    "id": "CVE-2015-6758",
    "commit_id": "b68f5c2b1cf7fe850312b49804af3a14472aa021",
    "added_lines": [
      "'pdfium_revision': '640c395fa9b76552383ccd0c5f4668ea698089f6',"
    ],
    "removed_lines": [
      "'pdfium_revision': '7c9e4529f63cc2ba47dd9585058c8ee8e546bc1a',"
    ],
    "cause": [
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not properly perform a cast of a dictionary object"
    ]
  },
  {
    "index": 3729,
    "id": "CVE-2015-6760",
    "commit_id": "d8cd310f60278b06beee8be328a1d402be06d1dc",
    "added_lines": [
      "'angle_revision': '4001e1da927da8f621df6f9614d6d2994397b285',"
    ],
    "removed_lines": [
      "'angle_revision': '1e9497997f5dc513e7ff00c9363047b733cdf32d',"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "invalid read"
    ]
  },
  {
    "index": 3730,
    "id": "CVE-2015-6761",
    "commit_id": "649a683e91abd33796fdaf787bce9bb7ef33cec4",
    "added_lines": [
      "# Copyright 2017 The Chromium Authors. All rights reserved.",
      "# Use of this source code is governed by a BSD-style license that can be",
      "# found in the LICENSE file.",
      "import common",
      "from common import TestDriver",
      "from common import IntegrationTest",
      "# Technically not an Integration test, but we'll use the same infrastructure.",
      "#",
      "# This tests hits a test page and computes the compression rate for each of the",
      "# resource types on it. These metrics are then output to the console. After",
      "# metrics from several releases have been manually captured from the console,",
      "# this test be changed to check compression rates against the known good rates",
      "# and alert if they fall outside a tolerance.",
      "class CompressionRegression(IntegrationTest):",
      "# TODO(robertogden): Once month-long metric gathering is up, remove print",
      "# statements and make into a true test.",
      "def testCompression(self):",
      "def AddToCompression(compression, key, value):",
      "if key in compression:",
      "compression[key].append(value",
      "else:",
      "compression[key] = [value]",
      "with TestDriver() as t:",
      "t.AddChromeArg('--enable-spdy-proxy-auth'",
      "t.LoadURL('http://check.googlezip.net/metrics/'",
      "print ''",
      "compression =",
      "for response in t.GetHTTPResponses():",
      "if not response.url.endswith('webp'):",
      "cl = response.response_headers['content-length']",
      "ocl = response.response_headers['x-original-content-length']",
      "compression_rate = 1.0 - (float(cl) / float(ocl",
      "if 'html' in response.response_headers['content-type']:",
      "AddToCompression(compression, 'html', compression_rate",
      "else:",
      "resource = response.url[response.url.rfind('/'):]",
      "AddToCompression(compression, resource[resource.rfind('.') + 1:],",
      "compression_rate",
      "for url in sorted(compression):",
      "average = sum(compression[url]) / float(len(compression[url]",
      "print url, average",
      "if __name__ == '__main__':",
      "IntegrationTest.RunAllTests"
    ],
    "removed_lines": [],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW"
    ],
    "unsafe_features": [],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3731,
    "id": "CVE-2015-6761",
    "commit_id": "fd506b0ac6c7846ae45b5034044fe85c28ee68ac",
    "added_lines": [
      "AutoReset<bool> in_stop_all_loaders(&in_stop_all_loaders_, true",
      "document_loader_->StopLoading",
      "DidFinishNavigation"
    ],
    "removed_lines": [
      "in_stop_all_loaders_ = true",
      "document_loader_->Fetcher()->StopFetching",
      "if (document_loader_ && !document_loader_->SentDidFinishLoad())",
      "document_loader_->LoadFailed",
      "ResourceError::CancelledError(document_loader_->Url",
      "in_stop_all_loaders_ = false"
    ],
    "cause": [
      "Race Condition or Concurrency"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "race condition"
    ]
  },
  {
    "index": 3733,
    "id": "CVE-2015-6763",
    "commit_id": "f1574f25e1402e748bf2bd7e28ce3dd96ceb1ca4",
    "added_lines": [
      "#if defined(OS_MACOSX",
      "#include \"ui/base/cocoa/secure_password_input.h\"",
      "#endif",
      "TEST_F(TextfieldTest, SecurePasswordInput)",
      "InitTextfield",
      "ASSERT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->OnFocus",
      "EXPECT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->SetTextInputType(ui::TEXT_INPUT_TYPE_PASSWORD",
      "textfield_->OnFocus",
      "EXPECT_TRUE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled",
      "textfield_->OnBlur",
      "EXPECT_FALSE(ui::ScopedPasswordInputEnabler::IsPasswordInputEnabled"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3735,
    "id": "CVE-2015-1291",
    "commit_id": "5a3e9ad904d0e9e0ce43c2bcd9fc23fa3f3ec042",
    "added_lines": [
      "'MobileEmulationCapabilityTest.testDeviceMetricsWithDeviceWidth',"
    ],
    "removed_lines": [
      "'ChromeDriverTest.testDeviceMetricsWithDeviceWidth',"
    ],
    "cause": [
      "Improper Input Validation"
    ],
    "effect": "DoS Bypass",
    "score": 6.4,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Bypass ",
    "summary": [
      "does not check whether a node is expected"
    ]
  },
  {
    "index": 3738,
    "id": "CVE-2015-1294",
    "commit_id": "3ff403eecdd23a39853a4ebca52023fbba6c5d00",
    "added_lines": [
      "#include \"base/test/test_timeouts.h\"",
      "RunLoop nested_run_loop(RunLoop::Type::kNestableTasksAllowed",
      "void RunClosureOnDelegate(OnceClosure closure)",
      "AutoLock auto_lock(closure_lock_",
      "closure_ = std::move(closure",
      "if (nested_run_allowing_tasks_incoming_)",
      "EXPECT_TRUE(run_loop_client_->IsNested",
      "EXPECT_TRUE(run_loop_client_->ProcessingTasksAllowed",
      "} else if (run_loop_client_->IsNested())",
      "EXPECT_FALSE(run_loop_client_->ProcessingTasksAllowed",
      "nested_run_allowing_tasks_incoming_ = false",
      "if (run_loop_client_->ProcessingTasksAllowed() &&",
      "simple_task_runner_->ProcessTask())",
      "AutoLock auto_lock(closure_lock_",
      "if (!closure_.is_null())",
      "std::move(closure_).Run",
      "continue",
      "void EnsureWorkScheduled() override",
      "nested_run_allowing_tasks_incoming_ = true",
      "bool nested_run_allowing_tasks_incoming_ = false",
      "Lock closure_lock_",
      "OnceClosure closure_",
      "RunLoop nested_run_loop(RunLoop::Type::kNestableTasksAllowed",
      "RunLoop nested_run_loop(RunLoop::Type::kNestableTasksAllowed",
      "TEST(RunLoopDelegateTest, NestableTasksDontRunInDefaultNestedLoops)",
      "TestDelegate test_delegate",
      "test_delegate.BindToCurrentThread",
      "base::Thread other_thread(\"test\"",
      "other_thread.Start",
      "RunLoop main_loop",
      "RunLoop nested_run_loop(RunLoop::Type::kDefault",
      "bool nested_run_loop_ended = false",
      "ThreadTaskRunnerHandle::Get()->PostTask",
      "FROM_HERE,",
      "BindOnce([](RunLoop* nested_run_loop) { nested_run_loop->Run(); },",
      "Unretained(&nested_run_loop",
      "ThreadTaskRunnerHandle::Get()->PostTask",
      "FROM_HERE, BindOnce",
      "[](const bool& nested_run_loop_ended,",
      "OnceClosure continuation_callback)",
      "EXPECT_TRUE(nested_run_loop_ended",
      "EXPECT_FALSE(RunLoop::IsNestedOnCurrentThread",
      "std::move(continuation_callback).Run",
      "},",
      "ConstRef(nested_run_loop_ended), main_loop.QuitClosure",
      "other_thread.task_runner()->PostDelayedTask",
      "FROM_HERE,",
      "BindOnce",
      "[](bool* nested_run_loop_ended)",
      "EXPECT_FALSE(*nested_run_loop_ended",
      "},",
      "Unretained(&nested_run_loop_ended)),",
      "TestTimeouts::tiny_timeout",
      "other_thread.task_runner()->PostDelayedTask",
      "FROM_HERE,",
      "BindOnce",
      "[](TestDelegate* test_delegate, OnceClosure injected_closure)",
      "test_delegate->RunClosureOnDelegate(std::move(injected_closure",
      "},",
      "Unretained(&test_delegate), nested_run_loop.QuitWhenIdleClosure()),",
      "TestTimeouts::tiny_timeout",
      "main_loop.Run"
    ],
    "removed_lines": [
      "RunLoop nested_run_loop",
      "std::unique_ptr<MessageLoop::ScopedNestableTaskAllower> allower",
      "if (MessageLoop::current())",
      "allower = base::MakeUnique<MessageLoop::ScopedNestableTaskAllower>",
      "MessageLoop::current",
      "if (simple_task_runner_->ProcessTask",
      "RunLoop nested_run_loop",
      "std::unique_ptr<MessageLoop::ScopedNestableTaskAllower> allower",
      "if (MessageLoop::current())",
      "allower = base::MakeUnique<MessageLoop::ScopedNestableTaskAllower>",
      "MessageLoop::current",
      "RunLoop nested_run_loop",
      "std::unique_ptr<MessageLoop::ScopedNestableTaskAllower> allower",
      "if (MessageLoop::current())",
      "allower = base::MakeUnique<MessageLoop::ScopedNestableTaskAllower>",
      "MessageLoop::current"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3739,
    "id": "CVE-2015-1295",
    "commit_id": "8fa5a358cb32085b51daf92df8fd4a79b3931f81",
    "added_lines": [
      "int ipc_nesting_level_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3743,
    "id": "CVE-2015-1299",
    "commit_id": "1810bb5cec9026c64fc34fbbb8fafd01263241d2",
    "added_lines": [
      "main_thread_compositor_task_runner_ = base::MessageLoopProxy::current"
    ],
    "removed_lines": [
      "main_thread_compositor_task_runner_ =",
      "make_scoped_refptr(new SchedulerProxyTaskRunner<",
      "&blink::WebSchedulerProxy::postCompositorTask>"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3745,
    "id": "CVE-2015-1301",
    "commit_id": "616568a633a3e2ae10537d14d3944d87ec382b8f",
    "added_lines": [
      "if (!web_contents",
      "return false"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3750,
    "id": "CVE-2015-1276",
    "commit_id": "a2bc3db508d2a5bc022041c4de0b801384a2b17c",
    "added_lines": [
      "\"//chromecast/net:cast_net_unittests\","
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3754,
    "id": "CVE-2015-1282",
    "commit_id": "d45469f31c9c353f72a4de9df46360e7f23077e9",
    "added_lines": [
      "\"action/ic_touch_app\","
    ],
    "removed_lines": [
      "# Note: this imageset is incorrect (miss the Contents.json file) but it",
      "# appears to be unused, so for the moment keep it commented out. See",
      "# https://github.com/google/material-design-icons/issues/630 for progress.",
      "# \"action/ic_touch_app\","
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3756,
    "id": "CVE-2015-1284",
    "commit_id": "168bd826fe11a44238a169ef953447db0c0e4841",
    "added_lines": [
      "'page-count-ready', this.onPageCountReady_.bind(this"
    ],
    "removed_lines": [
      "'preview-page-count', this.onPageCountReady_.bind(this"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3760,
    "id": "CVE-2015-1270",
    "commit_id": "886e691e17018818b7fc0978bcbe9a85436b506c",
    "added_lines": [
      "Var('chromium_git') + '/chromium/deps/icu.git' + '@' + 'f1ad7f9ba957571dc692ea3e187612c685615e19',"
    ],
    "removed_lines": [
      "Var('chromium_git') + '/chromium/deps/icu.git' + '@' + '5788e2736b3bc642994b6351a6096124895afa01',"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "uninitialized memory"
    ]
  },
  {
    "index": 3761,
    "id": "CVE-2015-1272",
    "commit_id": "4e7c52b4577b682be39ad617ceb5d98a32279939",
    "added_lines": [
      "#include \"chrome/browser/extensions/api/image_writer_private/write_from_url_operation.h\"",
      "#include \"net/traffic_annotation/network_traffic_annotation.h\"",
      "net::NetworkTrafficAnnotationTag traffic_annotation =",
      "net::DefineNetworkTrafficAnnotation(\"cros_recovery_image_download\", R\"",
      "semantics",
      "sender: \"Chrome OS Recovery Utility\"",
      "description:",
      "\"The Google Chrome OS recovery utility downloads the recovery \"",
      "\"image from Google Download Server.\"",
      "trigger:",
      "\"User uses the Chrome OS Recovery Utility app/extension, selects \"",
      "\"a Chrome OS recovery image, and clicks the Create button to write \"",
      "\"the image to a USB or SD card.\"",
      "data:",
      "\"URL of the image file to be downloaded. No other data or user \"",
      "\"identifier is sent.\"",
      "destination: GOOGLE_OWNED_SERVICE",
      "policy",
      "cookies_allowed: true",
      "cookies_store: \"user\"",
      "setting:",
      "\"This feature cannot be disabled by settings, it can only be used \"",
      "\"by whitelisted apps/extension.\"",
      "policy_exception_justification:",
      "\"Not implemented, considered not useful.\"",
      "})\"",
      "url_fetcher_ = net::URLFetcher::Create(url_, net::URLFetcher::GET, this,",
      "traffic_annotation"
    ],
    "removed_lines": [
      "#include \"chrome/browser/extensions/api/image_writer_private/write_from_url_operation.h\"",
      "url_fetcher_ = net::URLFetcher::Create(url_, net::URLFetcher::GET, this"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3762,
    "id": "CVE-2015-1277",
    "commit_id": "8dc07f045c6287da3404fa8e0fd8b1b3960afbfa",
    "added_lines": [
      "class AXTreeSourceWithInvalidId : public AXTreeSource<const AXNode*>",
      "public:",
      "AXTreeSourceWithInvalidId(AXTree* tree, int invalid_id",
      ": tree_(tree),",
      "invalid_id_(invalid_id)",
      "~AXTreeSourceWithInvalidId() override",
      "AXNode* GetRoot() const override { return tree_->root();",
      "AXNode* GetFromId(int32 id) const override { return tree_->GetFromId(id);",
      "int32 GetId(const AXNode* node) const override { return node->id();",
      "void GetChildren(const AXNode* node,",
      "std::vector<const AXNode*>* out_children) const override",
      "for (int i = 0; i < node->child_count(); ++i",
      "out_children->push_back(node->ChildAtIndex(i",
      "AXNode* GetParent(const AXNode* node) const override",
      "return node->parent",
      "bool IsValid(const AXNode* node) const override",
      "return node != NULL && node->id() != invalid_id_",
      "bool IsEqual(const AXNode* node1, const AXNode* node2) const override",
      "return node1 == node2",
      "const AXNode* GetNull() const override { return NULL;",
      "void SerializeNode(const AXNode* node, AXNodeData* out_data) const override",
      "if (node->id() == invalid_id_",
      "out_data->id = -1",
      "private:",
      "AXTree* tree_",
      "int invalid_id_",
      "DISALLOW_COPY_AND_ASSIGN(AXTreeSourceWithInvalidId",
      "TEST(AXTreeSerializerInvalidTest, InvalidChild)",
      "AXTreeUpdate treedata",
      "treedata.nodes.resize(3",
      "treedata.nodes[0].id = 1",
      "treedata.nodes[0].role = AX_ROLE_ROOT_WEB_AREA",
      "treedata.nodes[0].child_ids.push_back(2",
      "treedata.nodes[0].child_ids.push_back(3",
      "treedata.nodes[1].id = 2",
      "treedata.nodes[2].id = 3",
      "AXTree tree(treedata",
      "AXTreeSourceWithInvalidId source(&tree, 3",
      "AXTreeSerializer<const AXNode*> serializer(&source",
      "AXTreeUpdate update",
      "serializer.SerializeChanges(tree.root(), &update",
      "ASSERT_EQ(2U, update.nodes.size",
      "EXPECT_EQ(1, update.nodes[0].id",
      "EXPECT_EQ(2, update.nodes[1].id"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3765,
    "id": "CVE-2015-1289",
    "commit_id": "d12359d46a29b8a357d84dc0a1e8c6dbba56a671",
    "added_lines": [
      "div > div::selection { color: green;",
      "<div style=\"width: 100px;\">"
    ],
    "removed_lines": [
      "div > div::selection { color: white;",
      "<div style=\"overflow: hidden; background: red; width: 100px; color: green;\">"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3766,
    "id": "CVE-2015-1265",
    "commit_id": "bdcae45e4652e4f6c606388996a5efc43f5308b4",
    "added_lines": [
      "# COMPONENT: Blink>Scroll"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3767,
    "id": "CVE-2015-1265",
    "commit_id": "4f4530109b8b68643c6a3afbb239e21580d46a8a",
    "added_lines": [
      "<div id=\"stylusNoteTakingAppLabel\" class=\"start\">",
      "$i18n{stylusNoteTakingApp",
      "</div>",
      "<select id=\"menu\" class=\"md-select\" on-change=\"onSelectedAppChanged_\"",
      "aria-labelledby=\"stylusNoteTakingAppLabel\">"
    ],
    "removed_lines": [
      "<div class=\"start\">$i18n{stylusNoteTakingApp}</div>",
      "<select id=\"menu\" class=\"md-select\" on-change=\"onSelectedAppChanged_\">"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3768,
    "id": "CVE-2015-1265",
    "commit_id": "ce1a9c0e454b08c96ca73788a1b4dccb405ce027",
    "added_lines": [
      "TaskRunnerTimer<ImageLoader> m_derefElementTimer"
    ],
    "removed_lines": [
      "Timer<ImageLoader> m_derefElementTimer"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3769,
    "id": "CVE-2015-1265",
    "commit_id": "edd966f42e17c86c7658b9e3464838162640e18d",
    "added_lines": [
      "crbug.com/724567 fast/spatial-navigation/snav-z-index.html [ Pass Failure ]"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3770,
    "id": "CVE-2015-1265",
    "commit_id": "b72c008d3c36bb39d9b13225b42f18aff0aa4c8e",
    "added_lines": [
      "TestOpenCallback()",
      "UsbDevice::OpenCallback GetCallback()",
      "return base::Bind(&TestOpenCallback::SetResult, base::Unretained(this",
      "TestResultCallback()",
      "UsbDeviceHandle::ResultCallback GetCallback()",
      "return base::Bind(&TestResultCallback::SetResult, base::Unretained(this",
      "TestCompletionCallback()",
      "UsbDeviceHandle::TransferCallback GetCallback()",
      "return base::Bind(&TestCompletionCallback::SetResult,",
      "base::Unretained(this",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(0, claim_interface.GetCallback",
      "in_completion.GetCallback",
      "out_completion.GetCallback",
      "handle->ReleaseInterface(0, release_interface.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(1, claim_interface.GetCallback",
      "in_completion.GetCallback",
      "out_completion.GetCallback",
      "handle->ReleaseInterface(1, release_interface.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "buffer->size(), 0, completion.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(2, claim_interface.GetCallback",
      "handle->SetInterfaceAlternateSetting(2, 1, set_interface.GetCallback",
      "handle->ReleaseInterface(2, release_interface.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(1, claim_interface.GetCallback",
      "completion.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(1, claim_interface.GetCallback",
      "completion.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(1, claim_interface.GetCallback",
      "completion.GetCallback",
      "gadget->GetDevice()->Open(open_device.GetCallback",
      "handle->ClaimInterface(1, claim_interface.GetCallback"
    ],
    "removed_lines": [
      "TestOpenCallback",
      ": callback_",
      "base::Bind(&TestOpenCallback::SetResult, base::Unretained(this)))",
      "const UsbDevice::OpenCallback& callback() const { return callback_;",
      "const UsbDevice::OpenCallback callback_",
      "TestResultCallback",
      ": callback_(base::Bind(&TestResultCallback::SetResult,",
      "base::Unretained(this)))",
      "const UsbDeviceHandle::ResultCallback& callback() const { return callback_;",
      "const UsbDeviceHandle::ResultCallback callback_",
      "TestCompletionCallback",
      ": callback_(base::Bind(&TestCompletionCallback::SetResult,",
      "base::Unretained(this)))",
      "const UsbDeviceHandle::TransferCallback& callback() const",
      "return callback_",
      "const UsbDeviceHandle::TransferCallback callback_",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(0, claim_interface.callback",
      "in_completion.callback",
      "out_completion.callback",
      "handle->ReleaseInterface(0, release_interface.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(1, claim_interface.callback",
      "in_completion.callback",
      "out_completion.callback",
      "handle->ReleaseInterface(1, release_interface.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "buffer->size(), 0, completion.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(2, claim_interface.callback",
      "handle->SetInterfaceAlternateSetting(2, 1, set_interface.callback",
      "handle->ReleaseInterface(2, release_interface.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(1, claim_interface.callback",
      "completion.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(1, claim_interface.callback",
      "completion.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(1, claim_interface.callback",
      "completion.callback",
      "gadget->GetDevice()->Open(open_device.callback",
      "handle->ClaimInterface(1, claim_interface.callback"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3771,
    "id": "CVE-2015-1265",
    "commit_id": "c1edcafcbe5b8fa20d7e1adb2d1a5322924d8df0",
    "added_lines": [
      "ASSERT(values.size() == 20"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3772,
    "id": "CVE-2015-1265",
    "commit_id": "04ff52bb66284467ccb43d90800013b89ee8db75",
    "added_lines": [
      "void SetInputStreamParameters(const AudioParameters& params",
      "void SetOutputStreamParameters(const AudioParameters& params",
      "void SetDefaultOutputStreamParameters(const AudioParameters& params",
      "void SetHasOutputDevices(bool has_output_devices",
      "AudioParameters output_params_",
      "AudioParameters default_output_params_",
      "bool has_output_devices_ = true"
    ],
    "removed_lines": [
      "void SetInputStreamParameters(const AudioParameters& input_params"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3773,
    "id": "CVE-2015-1265",
    "commit_id": "262e77a72493e36e8006aeeba1c7497a42ee5ad9",
    "added_lines": [
      "bool pending_vrdisplay_raf_ = false"
    ],
    "removed_lines": [
      "bool pending_raf_ = false"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3774,
    "id": "CVE-2015-1265",
    "commit_id": "64aae326a6b32fdfba377dc5e060fd4713a2295b",
    "added_lines": [
      "function getUserMediaInIframeAndCloseInSuccessCb(constraints)",
      "var iframe = document.createElement('iframe'",
      "iframe.onload = onIframeLoaded",
      "document.body.appendChild(iframe",
      "iframe.src = window.location",
      "function onIframeLoaded()",
      "var iframe  = window.document.querySelector('iframe'",
      "iframe.contentWindow.navigator.webkitGetUserMedia",
      "constraints,",
      "function (stream)",
      "window.parent.document.querySelector('iframe').remove",
      "setTimeout(function ()",
      "window.parent.reportTestSuccess",
      "}, 0",
      "},",
      "window.parent.failedCallback",
      "function getUserMediaInIframeAndCloseInFailureCb(constraints)",
      "var iframe = document.createElement('iframe'",
      "iframe.onload = onIframeLoaded",
      "document.body.appendChild(iframe",
      "iframe.src = window.location",
      "function onIframeLoaded()",
      "var iframe  = window.document.querySelector('iframe'",
      "iframe.contentWindow.navigator.webkitGetUserMedia",
      "constraints,",
      "function (stream)",
      "window.parent.failTest('GetUserMedia call succeeded unexpectedly.'",
      "},",
      "function (error)",
      "window.parent.document.querySelector('iframe').remove",
      "setTimeout(function ()",
      "window.parent.reportTestSuccess",
      "}, 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3775,
    "id": "CVE-2015-1265",
    "commit_id": "b1130cfc5dca2d5f01edafd7d50f795f391ab904",
    "added_lines": [
      "package org.chromium.chrome.browser",
      "import android.test.suitebuilder.annotation.SmallTest",
      "import junit.framework.TestCase",
      "public class WebsiteSettingsPopupTest extends TestCase",
      "@SmallTest",
      "public void testPrepareUrlForDisplay()",
      "assertEquals(\"Encode suspicious message\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay",
      "\"http://example.com/#  WARNING  \\u00A0Chrome has detected malware on your\"",
      "+ \" device!\"),",
      "\"http://example.com/#%20%20WARNING%20%20%C2%A0Chrome%20has%20detected%20malware%20\"",
      "+ \"on%20your%20device!\"",
      "assertEquals(\"Do not encode valid Unicode fragment\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay(\"http://example.com/#D\u00fcsseldorf\"),",
      "\"http://example.com/#D\u00fcsseldorf\"",
      "assertEquals(\"Encode fragment with spaces\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay(\"http://example.com/#hi how are you\"),",
      "\"http://example.com/#hi%20how%20are%20you\"",
      "assertEquals(\"Encode fragment with Unicode whitespace\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay(\"http://example.com/#em\\u2003space\"),",
      "\"http://example.com/#em%E2%80%83space\"",
      "assertEquals(\"Do not encode reserved URI characters or valid Unicode\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay(\"http://example.com/?q=a#D\u00fcsseldorf,\"",
      "+ \" Germany\"),",
      "\"http://example.com/?q=a#D\u00fcsseldorf,%20Germany\"",
      "assertEquals(\"Preserve characters from supplementary Unicode planes\",",
      "WebsiteSettingsPopup.prepareUrlForDisplay(\"http://example.com/#\\uD835\\uDC9Cstral\"),",
      "\"http://example.com/#\\uD835\\uDC9Cstral\""
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3776,
    "id": "CVE-2015-1265",
    "commit_id": "d8fccaec4e73a9120074293c1997f963f810c9dd",
    "added_lines": [
      ", m_totalWidth(0"
    ],
    "removed_lines": [
      "m_totalWidth = 0"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3777,
    "id": "CVE-2015-1265",
    "commit_id": "9fc9d951c4b4757038d8ae9dbeafd43bea88aab3",
    "added_lines": [
      "<histogram name=\"Android.PhotoPicker.EnumeratedFiles\" units=\"Files\">",
      "<owner>finnur@chromium.org</owner>",
      "<owner>twellington@chromium.org</owner>",
      "<summary>",
      "Measures the total number of files returned from the enumeration operation.",
      "Measured once at the end of the enumeration operation.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Android.PhotoPicker.EnumeratedRate\"",
      "units=\"Files per 10th of a second\">",
      "<owner>finnur@chromium.org</owner>",
      "<owner>twellington@chromium.org</owner>",
      "<summary>",
      "Measures the enumeration rate (files per tenths of a second). Measured once",
      "at the end of the enumeration operation.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"Android.PhotoPicker.EnumerationTime\" units=\"ms\">",
      "<owner>finnur@chromium.org</owner>",
      "<owner>twellington@chromium.org</owner>",
      "<summary>",
      "Measures the amount of time the BitmapScaler spent enumerating files on",
      "disk. Measured once at the end of the enumeration operation.",
      "</summary>",
      "</histogram>"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3778,
    "id": "CVE-2015-1265",
    "commit_id": "7c28e7988fef9bb3e03027226bd199736d99abc3",
    "added_lines": [
      "#include <utility>",
      "class MockPersistenceDelegate : public HostCache::PersistenceDelegate",
      "public:",
      "void ScheduleWrite() override { ++num_changes_;",
      "int num_changes() const { return num_changes_;",
      "private:",
      "int num_changes_ = 0",
      "EXPECT_FALSE(cache.Lookup(Key(\"foobar.com\"), now",
      "TEST(HostCacheTest, PersistenceDelegate)",
      "const base::TimeDelta kTTL = base::TimeDelta::FromSeconds(10",
      "HostCache cache(kMaxCacheEntries",
      "MockPersistenceDelegate delegate",
      "cache.set_persistence_delegate(&delegate",
      "HostCache::Key key1 = Key(\"foobar.com\"",
      "HostCache::Key key2 = Key(\"foobar2.com\"",
      "IPAddress address_ipv4(1, 2, 3, 4",
      "IPAddress address_ipv6(0x20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      "IPEndPoint endpoint_ipv4(address_ipv4, 0",
      "IPEndPoint endpoint_ipv6(address_ipv6, 0",
      "HostCache::Entry entry1 = HostCache::Entry(OK, AddressList(endpoint_ipv4",
      "AddressList addresses2 = AddressList(endpoint_ipv6",
      "addresses2.push_back(endpoint_ipv4",
      "HostCache::Entry entry2 = HostCache::Entry(OK, addresses2",
      "HostCache::Entry entry3 =",
      "HostCache::Entry(ERR_NAME_NOT_RESOLVED, AddressList",
      "HostCache::Entry entry4 = HostCache::Entry(OK, AddressList",
      "base::TimeTicks now",
      "EXPECT_EQ(0u, cache.size",
      "EXPECT_FALSE(cache.Lookup(key1, now",
      "cache.Set(key1, entry1, now, kTTL",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "EXPECT_EQ(1u, cache.size",
      "EXPECT_EQ(1, delegate.num_changes",
      "EXPECT_FALSE(cache.Lookup(key2, now",
      "cache.Set(key2, entry3, now, kTTL",
      "EXPECT_TRUE(cache.Lookup(key2, now",
      "EXPECT_EQ(2u, cache.size",
      "EXPECT_EQ(2, delegate.num_changes",
      "now += base::TimeDelta::FromSeconds(5",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "cache.Set(key1, entry1, now, kTTL",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "EXPECT_EQ(2u, cache.size",
      "EXPECT_EQ(2, delegate.num_changes",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "cache.Set(key1, entry1, now, kTTL - base::TimeDelta::FromSeconds(5",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "EXPECT_EQ(2u, cache.size",
      "EXPECT_EQ(2, delegate.num_changes",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "cache.Set(key1, entry2, now, kTTL",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "EXPECT_EQ(2u, cache.size",
      "EXPECT_EQ(3, delegate.num_changes",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "cache.Set(key2, entry4, now, kTTL",
      "EXPECT_TRUE(cache.Lookup(key1, now",
      "EXPECT_EQ(2u, cache.size",
      "EXPECT_EQ(4, delegate.num_changes"
    ],
    "removed_lines": [
      "EXPECT_FALSE(cache.Lookup(Key(\"foobar.com\"),now"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3779,
    "id": "CVE-2015-1265",
    "commit_id": "8ea5693d5cf304e56174bb6b65412f04209904db",
    "added_lines": [
      "Transpose(frame"
    ],
    "removed_lines": [
      "frame.GetEditor().Transpose"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3791,
    "id": "CVE-2015-1249",
    "commit_id": "3f71619ec516f553c69a08bf373dcde14e86d08f",
    "added_lines": [
      "bool UseExperimentalSuggestService(const TemplateURLService& default_provider)",
      "const TemplateURL& default_provider_url =",
      "const SearchTermsData& search_terms_data =",
      "default_provider.search_terms_data",
      "if ((default_provider_url.GetEngineType(search_terms_data) !=",
      "SEARCH_ENGINE_GOOGLE) ||",
      "!OmniboxFieldTrial::InZeroSuggestRedirectToChromeFieldTrial",
      "return false",
      "const GURL suggest_url",
      "OmniboxFieldTrial::ZeroSuggestRedirectToChromeServerAddress",
      "if (!suggest_url.is_valid",
      "return false",
      "return suggest_url.SchemeIsCryptographic",
      "GURL suggest_url(GetContextualSuggestionsUrl",
      "if (UseExperimentalSuggestService(*template_url_service))",
      "suggest_url = GURL",
      "OmniboxFieldTrial::ZeroSuggestRedirectToChromeServerAddress() +",
      "OmniboxFieldTrial::ZeroSuggestRedirectToChromeAdditionalFields"
    ],
    "removed_lines": [
      "std::string url_string = GetContextualSuggestionsUrl",
      "GURL suggest_url(url_string",
      "if (OmniboxFieldTrial::InZeroSuggestRedirectToChromeFieldTrial())",
      "url_string +=",
      "OmniboxFieldTrial::ZeroSuggestRedirectToChromeAdditionalFields",
      "suggest_url = GURL(url_string",
      "if (OmniboxFieldTrial::InZeroSuggestRedirectToChromeFieldTrial",
      "return OmniboxFieldTrial::ZeroSuggestRedirectToChromeServerAddress"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "FUNC_CALL",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3796,
    "id": "CVE-2015-1216",
    "commit_id": "82eeef54780833a29e88c5677a7cfa11205a9878",
    "added_lines": [
      "frame = window->frame",
      "if (!frame",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3797,
    "id": "CVE-2015-1217",
    "commit_id": "fc81fcf38edd250876cc384a6ed5567e1b2999e4",
    "added_lines": [
      "if (!executionContext->isDocument",
      "return",
      "if (!toDocument(executionContext)->allowInlineEventHandlers(m_node, this, m_sourceURL, m_position.m_line))",
      "if (!result->IsFunction",
      "return"
    ],
    "removed_lines": [
      "if (executionContext->isDocument() && !toDocument(executionContext)->allowInlineEventHandlers(m_node, this, m_sourceURL, m_position.m_line))",
      "ASSERT(executionContext->isDocument",
      "ASSERT(result->IsFunction"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3798,
    "id": "CVE-2015-1218",
    "commit_id": "53f40b0658b240dd7397a58b29b083631519735f",
    "added_lines": [
      "<histogram name=\"SafeBrowsing.Pref.SawInterstitial\" enum=\"Boolean\">",
      "<owner>lpz@chromium.org</owner>",
      "<summary>",
      "Whether the current user has ever seen a security interstitial. Recorded for",
      "all non-Incognito profiles on profile startup.",
      "</summary>",
      "</histogram>",
      "<histogram name=\"SafeBrowsing.Pref.Scout\" enum=\"NullableBoolean\">",
      "<enum name=\"NullableBoolean\" type=\"int\">",
      "<summary>",
      "A Nullable Boolean can True, False or Null (ie: unset or absent).",
      "</summary>",
      "<int value=\"0\" label=\"False\"/>",
      "<int value=\"1\" label=\"True\"/>",
      "<int value=\"2\" label=\"Null\"/>",
      "</enum>",
      "<affected-histogram name=\"SafeBrowsing.Pref.SawInterstitial\"/>"
    ],
    "removed_lines": [
      "<histogram name=\"SafeBrowsing.Pref.Scout\" enum=\"BooleanEnabled\">"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3799,
    "id": "CVE-2015-1220",
    "commit_id": "4f9c9adef4036aff60b734b4a0045c43c320fe1d",
    "added_lines": [
      ", m_sentSizeToClient(false",
      "bool m_sentSizeToClient"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3800,
    "id": "CVE-2015-1221",
    "commit_id": "a69c7b5d863dacbb08bfaa04359e3bc0bb4470dc",
    "added_lines": [
      "const SelectionInDOMTree&,"
    ],
    "removed_lines": [
      "const VisibleSelection&,"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3801,
    "id": "CVE-2015-1222",
    "commit_id": "db2e0b4e38736f3898cedbdfc30e9cf0d099a45c",
    "added_lines": [
      "\"AutofillCreditCardPopup\": [",
      "\"platforms\": [",
      "\"android\"",
      "],",
      "\"experiments\": [",
      "\"name\": \"IconAtStartAndIncreaseDropdownItemHeight\",",
      "\"params\":",
      "\"dropdown_item_height\": \"56\",",
      "\"is_credit_card_icon_at_start\": \"true\",",
      "\"margin\": \"18\"",
      "},",
      "\"enable_features\": [",
      "\"AutofillCreditCardPopupLayout\"",
      "]",
      "]",
      "],"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3802,
    "id": "CVE-2015-1223",
    "commit_id": "b0d271768d0a592227d753f4cf60399c4dd2af4f",
    "added_lines": [
      "} else if (type == CONTENT_SETTINGS_TYPE_MIDI)"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3803,
    "id": "CVE-2015-1230",
    "commit_id": "b2bf3cb69cae29c1dc85f23a18f2f36587290c1e",
    "added_lines": [
      "\"//ios/chrome/browser/find_in_page:unit_tests\","
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3804,
    "id": "CVE-2015-1224",
    "commit_id": "5c6e9372daae557d6857f02888e84363eeff9be9",
    "added_lines": [
      "void SetObserver(JNIEnv* env,",
      "const base::android::JavaParamRef<jobject>& obj,",
      "const base::android::JavaParamRef<jobject>& j_observer,",
      "jint num_sites"
    ],
    "removed_lines": [
      "void SetMostVisitedURLsObserver",
      "JNIEnv* env,",
      "const base::android::JavaParamRef<jobject>& obj,",
      "const base::android::JavaParamRef<jobject>& j_observer,",
      "jint num_sites"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.0,
    "safe_features": [
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 3808,
    "id": "CVE-2015-1228",
    "commit_id": "f2dc38825cce54c0b87841a420afbd71453d506b",
    "added_lines": [
      "#define HB_VERSION_MINOR 4",
      "#define HB_VERSION_MICRO 1",
      "#define HB_VERSION_STRING \"1.4.1\""
    ],
    "removed_lines": [
      "#define HB_VERSION_MINOR 3",
      "#define HB_VERSION_MICRO 4",
      "#define HB_VERSION_STRING \"1.3.4\""
    ],
    "cause": [
      "Uncategorized Cluster 6"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not force a relayout operation and consequently does not initialize memory for a data structure"
    ]
  },
  {
    "index": 3813,
    "id": "CVE-2015-1243",
    "commit_id": "e72a513a6c84075089ecda0570ce658d0b45f6dd",
    "added_lines": [
      "# Checks that a Lite Page is served and that the ignore_preview_blacklist",
      "# experiment is being used.",
      "def testLitePage(self):",
      "with TestDriver() as test_driver:",
      "test_driver.AddChromeArg('--enable-spdy-proxy-auth'",
      "test_driver.AddChromeArg('--data-reduction-proxy-lo-fi=always-on'",
      "test_driver.AddChromeArg('--enable-data-reduction-proxy-lite-page'",
      "test_driver.LoadURL('http://check.googlezip.net/test.html'",
      "lite_page_responses = 0",
      "for response in test_driver.GetHTTPResponses():",
      "# Skip CSI requests when validating Lite Page headers. CSI requests",
      "# aren't expected to have LoFi headers.",
      "if '/csi?' in response.url:",
      "continue",
      "if response.url.startswith('data:'):",
      "continue",
      "chrome_proxy_request = response.request_headers['chrome-proxy']",
      "cpat_request = response.request_headers['chrome-proxy-accept-transform']",
      "cpct_response = response.response_headers[",
      "'chrome-proxy-content-transform']",
      "self.assertHasChromeProxyViaHeader(response",
      "self.assertIn('exp=ignore_preview_blacklist',",
      "chrome_proxy_request",
      "if ('lite-page' in cpct_response):",
      "lite_page_responses = lite_page_responses + 1",
      "self.assertIn('lite-page', cpat_request",
      "# Verify that a Lite Page response for the main frame was seen.",
      "self.assertEqual(1, lite_page_responses"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3814,
    "id": "CVE-2015-1250",
    "commit_id": "a5015e84b97fe94e43c3d46f26c2b0480345bb80",
    "added_lines": [
      "'device/geolocation/public/interfaces/geoposition.mojom',",
      "let [geolocation, geoposition, permission, permissionStatus, bindings] =",
      "this.geoposition_ = new geoposition.Geoposition",
      "this.geoposition_ = new geoposition.Geoposition",
      "geoposition.Geoposition.ErrorCode.POSITION_UNAVAILABLE"
    ],
    "removed_lines": [
      "let [geolocation, permission, permissionStatus, bindings] =",
      "this.geoposition_ = new geolocation.Geoposition",
      "this.geoposition_ = new geolocation.Geoposition",
      "geolocation.Geoposition.ErrorCode.POSITION_UNAVAILABLE"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3818,
    "id": "CVE-2015-1209",
    "commit_id": "1be560402876e236d05f5cb4c1cc3f5387d4b289",
    "added_lines": [
      "return start().deprecatedNode() && !start().deprecatedNode()->isShadowRoot() ? start().deprecatedNode()->nonBoundaryShadowTreeRootNode() : 0"
    ],
    "removed_lines": [
      "return start().deprecatedNode() ? start().deprecatedNode()->nonBoundaryShadowTreeRootNode() : 0"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "RETURN",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "implementation in blink"
    ]
  },
  {
    "index": 3819,
    "id": "CVE-2015-1212",
    "commit_id": "0c08ed56a3e5089b3cc4094e83daae196a6300c4",
    "added_lines": [
      "virtual void didClose() = 0"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3820,
    "id": "CVE-2016-5170",
    "commit_id": "c3957448cfc6e299165196a33cd954b790875fdb",
    "added_lines": [
      "UpdateStyleAndLayoutTree",
      "if (LocalFrame* frame = GetFrame",
      "frame->Selection().DidChangeFocus",
      "return false",
      "UpdateStyleAndLayoutTree",
      "if (LocalFrame* frame = GetFrame",
      "frame->Selection().DidChangeFocus",
      "return false",
      "UpdateStyleAndLayoutTree",
      "if (LocalFrame* frame = GetFrame",
      "frame->Selection().DidChangeFocus",
      "return false",
      "UpdateStyleAndLayoutTree",
      "if (LocalFrame* frame = GetFrame",
      "frame->Selection().DidChangeFocus",
      "return false",
      "UpdateStyleAndLayoutTree",
      "if (LocalFrame* frame = GetFrame",
      "frame->Selection().DidChangeFocus",
      "return false"
    ],
    "removed_lines": [
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "if (focused_element_ != new_focused_element)",
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "focus_change_blocked = true",
      "goto SetFocusedElementDone",
      "SetFocusedElementDone:"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN"
    ],
    "unsafe_features": [
      "NO_OP",
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "does not properly consider"
    ]
  },
  {
    "index": 3821,
    "id": "CVE-2016-5171",
    "commit_id": "0c65ca92b162f3d6dff2ec6571df629592ec32f2",
    "added_lines": [
      "DCHECK(IsMultiloginEndpointEnabled"
    ],
    "removed_lines": [
      "DCHECK(base::FeatureList::IsEnabled(kUseMultiloginEndpoint"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3824,
    "id": "CVE-2016-5174",
    "commit_id": "104e5ad762f4d2fcf04a33ff8471d77d7b8678bb",
    "added_lines": [
      "if (shouldExitAfterEnteringFullscreen_)",
      "shouldExitAfterEnteringFullscreen_ = NO",
      "[self exitAppKitFullscreen]",
      "if (enteringAppKitFullscreen_)",
      "shouldExitAfterEnteringFullscreen_ = YES",
      "return"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "CONTROL_FLOW",
      "ARRAY_ACCESS",
      "CONTROL_FLOW",
      "RETURN"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "does not process fullscreen toggle requests during a fullscreen transition"
    ]
  },
  {
    "index": 3825,
    "id": "CVE-2016-5175",
    "commit_id": "9fbe5ca8091b6b42b0fe770ed088cdcf6ef144b7",
    "added_lines": [
      "Bug(none) virtual/threaded/synthetic_gestures/smooth-scroll-tiny-delta.html [ Failure Timeout ]",
      "# These were introduced when we started setting the scrolls_outer_viewport bit on ScrollNodes",
      "Bug(none) virtual/fractional_scrolling_threaded/fast/scrolling/hover-during-scroll.html [ Failure ]",
      "Bug(none) virtual/fractional_scrolling_threaded/fast/scrolling/no-hover-during-scroll.html [ Failure ]",
      "Bug(none) virtual/threaded/external/wpt/feature-policy/experimental-features/vertical-scroll-disabled-frame-no-scroll-manual.tentative.html [ Failure ]",
      "Bug(none) virtual/threaded/external/wpt/feature-policy/experimental-features/vertical-scroll-touch-action-manual.tentative.html [ Failure ]",
      "Bug(none) virtual/threaded/fast/scrolling/hover-during-scroll.html [ Failure ]",
      "Bug(none) virtual/threaded/fast/scrolling/no-hover-during-scroll.html [ Failure ]",
      "Bug(none) virtual/threaded/synthetic_gestures/animated-wheel-tiny-delta.html [ Failure ]"
    ],
    "removed_lines": [
      "Bug(none) virtual/threaded/synthetic_gestures/smooth-scroll-tiny-delta.html [ Failure ]"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3829,
    "id": "CVE-2016-5150",
    "commit_id": "0dab95c5377907e3caed9a0faaf74bde12e0e841",
    "added_lines": [
      "TEST_F('PrintPreviewModelTest', 'ChangeDestination', function()",
      "this.runMochaTest(model_test.TestNames.ChangeDestination"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3830,
    "id": "CVE-2016-5151",
    "commit_id": "332c2d8dbd29c918c49ddb9d4ee2ad1193ccf96c",
    "added_lines": [],
    "removed_lines": [
      "crbug.com/931866 [ Android_Go ] v8.browsing_mobile/browse:news:cnn:2018 [ Skip ]"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3832,
    "id": "CVE-2016-5153",
    "commit_id": "20a9e39a925dd0fb183acb61bb7b87f29abea83f",
    "added_lines": [
      "ConnectToServiceIfNeeded"
    ],
    "removed_lines": [
      "ConnectToServiceIfNeeded"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "implementation in blink"
    ]
  },
  {
    "index": 3835,
    "id": "CVE-2016-5156",
    "commit_id": "ba011d9f8322c62633a069a59c2c5525e3ff46cc",
    "added_lines": [
      "if (id == -1)",
      "args.GetReturnValue().Set(static_cast<int32_t>(-1",
      "return",
      "const EventMatcher* matcher = g_event_filter.Get().GetEventMatcher(id",
      "DCHECK(matcher",
      "base::DictionaryValue* filter_weak = matcher->value"
    ],
    "removed_lines": [
      "base::DictionaryValue* filter_weak = filter.get"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "POINTER_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3839,
    "id": "CVE-2016-5161",
    "commit_id": "63555be051ee1f8471c63a4bcafcc6c4904667c4",
    "added_lines": [
      "KeyboardAccessoryProperties.BAR_ITEMS",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.BAR_ITEMS).size(), is(1",
      ".get(KeyboardAccessoryProperties.BAR_ITEMS"
    ],
    "removed_lines": [
      "KeyboardAccessoryProperties.ACTIONS",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(0",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(1",
      "assertThat(keyboardAccessoryModel.get(KeyboardAccessoryProperties.ACTIONS).size(), is(1",
      ".get(KeyboardAccessoryProperties.ACTIONS"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3846,
    "id": "CVE-2016-5167",
    "commit_id": "b1d432f84225c1c809f3d9eecba24727068a1b37",
    "added_lines": [
      "mScrimParams.backgroundColor = !isTablet && !mLocationBarModel.isIncognito",
      "&& !mActivity.getNightModeStateProvider().isInNightMode",
      "? mLightScrimColor",
      ": null"
    ],
    "removed_lines": [
      "mScrimParams.backgroundColor =",
      "!isTablet && !mLocationBarModel.isIncognito() ? mLightScrimColor : null"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3867,
    "id": "CVE-2016-5146",
    "commit_id": "0846dce02d4c3b01af714efa70d144eb2ed0d7a9",
    "added_lines": [
      "testcase.keyboardOpenNewWindow = async function()",
      "const appId =",
      "await setupAndWaitUntilReady(RootPath.DOWNLOADS, [ENTRIES.hello], []",
      "const initialWindows =",
      "await remoteCall.callRemoteTestUtil('getWindows', null, []",
      "const initialWindowsCount = Object.keys(initialWindows).length",
      "console.log(JSON.stringify(initialWindows",
      "const key = ['#file-list', 'n', true, false, false]",
      "chrome.test.assertTrue",
      "await remoteCall.callRemoteTestUtil('fakeKeyDown', appId, key",
      "return repeatUntil(async () =>",
      "const caller = getCaller",
      "const currentWindows =",
      "await remoteCall.callRemoteTestUtil('getWindows', null, []",
      "const currentWindowsIds = Object.keys(currentWindows",
      "if (initialWindowsCount < currentWindowsIds.length)",
      "return true",
      "return pending",
      "caller,",
      "'Waiting for new window to open, current windows: ' +",
      "currentWindowsIds"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "RETURN",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3886,
    "id": "CVE-2016-1705",
    "commit_id": "4afb628e068367d5b73440537555902cd12416f8",
    "added_lines": [
      "gfx::SwapResult SwapBuffers(PresentationCallback callback) override",
      "gfx::SwapResult CommitOverlayPlanes(PresentationCallback callback) override",
      "gfx::SwapResult PostSubBuffer(int x,",
      "int y,",
      "int width,",
      "int height,",
      "PresentationCallback callback) override",
      "void SwapBuffersAsync(SwapCompletionCallback completion_callback,",
      "PresentationCallback presentation_callback) override",
      "void CommitOverlayPlanesAsync",
      "SwapCompletionCallback completion_callback,",
      "PresentationCallback presentation_callback) override",
      "void PostSubBufferAsync(int x,",
      "int y,",
      "int width,",
      "int height,",
      "SwapCompletionCallback completion_callback,",
      "PresentationCallback presentation_callback) override",
      "bool SupportsPostSubBuffer() override",
      "bool buffer_updated_in_pending_transaction = true",
      "void CommitPendingTransaction(const gfx::Rect& damage_rect,",
      "SwapCompletionCallback completion_callback,",
      "gfx::Rect window_rect_"
    ],
    "removed_lines": [
      "gfx::SwapResult SwapBuffers(PresentationCallback callback) override",
      "void SwapBuffersAsync(SwapCompletionCallback completion_callback,",
      "PresentationCallback presentation_callback) override",
      "gfx::SwapResult CommitOverlayPlanes(PresentationCallback callback) override",
      "void CommitOverlayPlanesAsync",
      "SwapCompletionCallback completion_callback,",
      "PresentationCallback presentation_callback) override",
      "bool SupportsSwapBuffersWithBounds() override",
      "void CommitPendingTransaction(SwapCompletionCallback completion_callback,"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3888,
    "id": "CVE-2016-1647",
    "commit_id": "e5787005a9004d7be289cc649c6ae4f3051996cd",
    "added_lines": [
      "if (also_delete)",
      "CHECK(!owner_delegate_"
    ],
    "removed_lines": [
      "if (also_delete"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "CONTROL_FLOW",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "CONTROL_FLOW"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3889,
    "id": "CVE-2016-1648",
    "commit_id": "9d92ff158726601ae5c044d62050614f076eaae4",
    "added_lines": [
      "args.GetReturnValue().SetNull",
      "v8::Local<v8::Context> ctx = isolate->GetCurrentContext",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"requestTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, request_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"startLoadTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, start_load_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"commitLoadTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, commit_load_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx,",
      "v8::String::NewFromUtf8(isolate, \"finishDocumentLoadTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, finish_document_load_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"finishLoadTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, finish_load_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"firstPaintTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, first_paint_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx,",
      "v8::String::NewFromUtf8(isolate, \"firstPaintAfterLoadTime\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, first_paint_after_load_time",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"navigationType\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::String::NewFromUtf8(isolate, navigation_type.c_str(),",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"wasFetchedViaSpdy\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Boolean::New(isolate, was_fetched_via_spdy",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"wasNpnNegotiated\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Boolean::New(isolate, was_npn_negotiated",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx,",
      "v8::String::NewFromUtf8(isolate, \"npnNegotiatedProtocol\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::String::NewFromUtf8(isolate,",
      "npn_negotiated_protocol.c_str(),",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate,",
      "\"wasAlternateProtocolAvailable\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Boolean::New(isolate, was_alternate_protocol_available",
      ".FromMaybe(false))",
      "return",
      "if (!load_times",
      "->Set(ctx, v8::String::NewFromUtf8(isolate, \"connectionInfo\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::String::NewFromUtf8(isolate, connection_info.c_str(),",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked",
      ".FromMaybe(false))",
      "return",
      "args.GetReturnValue().SetNull",
      "if (!frame)",
      "return",
      "WebDataSource* data_source = frame->dataSource",
      "if (!data_source)",
      "return",
      "DocumentState* document_state = DocumentState::FromDataSource(data_source",
      "if (!document_state)",
      "return",
      "base::Time now = base::Time::Now",
      "base::Time start = document_state->request_time().is_null",
      "? document_state->start_load_time",
      ": document_state->request_time",
      "base::Time onload = document_state->finish_document_load_time",
      "base::TimeDelta page = now - start",
      "int navigation_type = GetCSITransitionType(data_source->navigationType",
      "v8::Isolate* isolate = args.GetIsolate",
      "v8::Local<v8::Context> ctx = isolate->GetCurrentContext",
      "v8::Local<v8::Object> csi = v8::Object::New(isolate",
      "if (!csi->Set(ctx, v8::String::NewFromUtf8(isolate, \"startE\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, floor(start.ToDoubleT() * 1000",
      ".FromMaybe(false))",
      "return",
      "if (!csi->Set(ctx, v8::String::NewFromUtf8(isolate, \"onloadT\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, floor(onload.ToDoubleT() * 1000",
      ".FromMaybe(false))",
      "return",
      "if (!csi->Set(ctx, v8::String::NewFromUtf8(isolate, \"pageT\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, page.InMillisecondsF",
      ".FromMaybe(false))",
      "return",
      "if (!csi->Set(ctx, v8::String::NewFromUtf8(isolate, \"tran\",",
      "v8::NewStringType::kNormal",
      ".ToLocalChecked(),",
      "v8::Number::New(isolate, navigation_type",
      ".FromMaybe(false))",
      "return",
      "args.GetReturnValue().Set(csi"
    ],
    "removed_lines": [
      "args.GetReturnValue().SetNull",
      "args.GetReturnValue().SetNull",
      "args.GetReturnValue().SetNull",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"requestTime\"),",
      "v8::Number::New(isolate, request_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"startLoadTime\"),",
      "v8::Number::New(isolate, start_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"commitLoadTime\"),",
      "v8::Number::New(isolate, commit_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"finishDocumentLoadTime\"),",
      "v8::Number::New(isolate, finish_document_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"finishLoadTime\"),",
      "v8::Number::New(isolate, finish_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"firstPaintTime\"),",
      "v8::Number::New(isolate, first_paint_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"firstPaintAfterLoadTime\"),",
      "v8::Number::New(isolate, first_paint_after_load_time",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"navigationType\"),",
      "v8::String::NewFromUtf8(isolate, navigation_type.c_str",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"wasFetchedViaSpdy\"),",
      "v8::Boolean::New(isolate, was_fetched_via_spdy",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"wasNpnNegotiated\"),",
      "v8::Boolean::New(isolate, was_npn_negotiated",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"npnNegotiatedProtocol\"),",
      "v8::String::NewFromUtf8(isolate, npn_negotiated_protocol.c_str",
      "load_times->Set",
      "v8::String::NewFromUtf8(isolate, \"wasAlternateProtocolAvailable\"),",
      "v8::Boolean::New(isolate, was_alternate_protocol_available",
      "load_times->Set(v8::String::NewFromUtf8(isolate, \"connectionInfo\"),",
      "v8::String::NewFromUtf8(isolate, connection_info.c_str",
      "if (frame)",
      "WebDataSource* data_source = frame->dataSource",
      "if (data_source)",
      "DocumentState* document_state =",
      "DocumentState::FromDataSource(data_source",
      "v8::Isolate* isolate = args.GetIsolate",
      "v8::Local<v8::Object> csi = v8::Object::New(isolate",
      "base::Time now = base::Time::Now",
      "base::Time start = document_state->request_time().is_null() ?",
      "document_state->start_load_time() :",
      "document_state->request_time",
      "base::Time onload = document_state->finish_document_load_time",
      "base::TimeDelta page = now - start",
      "csi->Set(v8::String::NewFromUtf8(isolate, \"startE\"),",
      "v8::Number::New(isolate, floor(start.ToDoubleT() * 1000",
      "csi->Set(v8::String::NewFromUtf8(isolate, \"onloadT\"),",
      "v8::Number::New(isolate, floor(onload.ToDoubleT() * 1000",
      "csi->Set(v8::String::NewFromUtf8(isolate, \"pageT\"),",
      "v8::Number::New(isolate, page.InMillisecondsF",
      "csi->Set",
      "v8::String::NewFromUtf8(isolate, \"tran\"),",
      "v8::Number::New",
      "isolate, GetCSITransitionType(data_source->navigationType",
      "args.GetReturnValue().Set(csi",
      "return",
      "args.GetReturnValue().SetNull",
      "return"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "RETURN",
      "FUNC_CALL",
      "RETURN"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3891,
    "id": "CVE-2016-1650",
    "commit_id": "b2965f7024948cf814df76803c3579b883da3095",
    "added_lines": [
      "Var('webrtc_git') + '/src.git' + '@' + '38537edf5979e85f1fab0fb65ab71ceba226ae58',"
    ],
    "removed_lines": [
      "Var('webrtc_git') + '/src.git' + '@' + '343f4144bee5ddde5efec1e1217403b444386cb4',"
    ],
    "cause": [
      "Uncategorized Cluster 10"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "triggering an error in creating an MHTML document"
    ]
  },
  {
    "index": 3895,
    "id": "CVE-2016-1633",
    "commit_id": "eb750a539e4856ba9042abdf39ae9da58fa3ae63",
    "added_lines": [
      "#include \"core/dom/Attr.h\"",
      "if (!root()->isAttributeNode",
      "root()->document().attachNodeIterator(this",
      "if (!root()->isAttributeNode",
      "root()->document().detachNodeIterator(this"
    ],
    "removed_lines": [
      "root()->document().attachNodeIterator(this",
      "root()->document().detachNodeIterator(this"
    ],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 3896,
    "id": "CVE-2016-1634",
    "commit_id": "922160eddcb34ca26c834c2a0b0e65269358f0bf",
    "added_lines": [
      "void Wait"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3897,
    "id": "CVE-2016-1635",
    "commit_id": "5a15b72a270b514cd442872221a788a303bdaa88",
    "added_lines": [
      "#include \"base/memory/weak_ptr.h\"",
      "~RenderFrameObserverNatives() override",
      "void Invalidate() override",
      "void InvokeCallback(v8::Global<v8::Function> callback, bool succeeded",
      "base::WeakPtrFactory<RenderFrameObserverNatives> weak_ptr_factory_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 4",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free",
      "does not properly consider"
    ]
  },
  {
    "index": 3902,
    "id": "CVE-2016-1639",
    "commit_id": "c66b1fc49870c514b1c1e8b53498153176d7ec2b",
    "added_lines": [],
    "removed_lines": [
      "#include \"chrome/browser/chromeos/login/signin/token_handle_util.h\""
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3904,
    "id": "CVE-2016-1641",
    "commit_id": "75ca8ffd7bd7c58ace1144df05e1307d8d707662",
    "added_lines": [
      "void OnDidDownloadImage(const ImageDownloadCallback& callback,",
      "int id,",
      "const GURL& image_url,",
      "image_downloader::DownloadResultPtr result",
      "base::WeakPtrFactory<WebContentsImpl> weak_factory_"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3905,
    "id": "CVE-2016-1642",
    "commit_id": "1a223b59d41262c061121f7281b47abe4012a939",
    "added_lines": [
      "# Flaky on ASAN bot. crbug.com/884216",
      "-KeyboardOverlayUIBrowserTest.*"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3906,
    "id": "CVE-2016-1612",
    "commit_id": "94fef6e2a56ef5b3ed0dc0fd94e6ad52267067fb",
    "added_lines": [
      "#include \"base/synchronization/condition_variable.h\"",
      "bool IsInstanceIdStillBound(InstanceId instance_id",
      "base::Lock tasks_in_flight_lock_",
      "base::ConditionVariable no_tasks_in_flight_cv_",
      "int tasks_in_flight_"
    ],
    "removed_lines": [
      "#include \"base/synchronization/read_write_lock.h\"",
      "base::subtle::ReadWriteLock task_lock_"
    ],
    "cause": [
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "does not ensure receiver compatibility before performing a cast of an unspecified variable"
    ]
  },
  {
    "index": 3907,
    "id": "CVE-2016-1613",
    "commit_id": "7394cf6f43d7a86630d3eb1c728fd63c621b5530",
    "added_lines": [
      "\"../browser/resource_coordinator/local_site_characteristics_data_unittest_utils.cc\",",
      "\"../browser/resource_coordinator/local_site_characteristics_data_unittest_utils.h\","
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3914,
    "id": "CVE-2016-1620",
    "commit_id": "b90c7c8c335a2e2a4abdd7bde17a44f92c8b3a54",
    "added_lines": [
      "RecordProcessCrash",
      "if (kind_ == GPU_PROCESS_KIND_SANDBOXED",
      "gpu_data_manager->FallBackToNextGpuMode"
    ],
    "removed_lines": [
      "RecordProcessCrash",
      "gpu_data_manager->FallBackToNextGpuMode"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "NO_OP",
      "CONTROL_FLOW",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3919,
    "id": "CVE-2016-1700",
    "commit_id": "aa7a889002dd7a1288cc5e962086e517131fb01e",
    "added_lines": [
      "v8::Local<v8::Context> v8_context = args.GetIsolate()->GetCurrentContext",
      "v8::Maybe<bool> maybe =",
      "v8_views->CreateDataProperty(v8_context, v8_index++, window",
      "DCHECK(maybe.IsJust() && maybe.FromJust"
    ],
    "removed_lines": [
      "v8_views->Set(v8::Integer::New(args.GetIsolate(), v8_index++), window"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.1,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3920,
    "id": "CVE-2016-1701",
    "commit_id": "31bdb48c93335949c0c7b739e41de2628205a3cc",
    "added_lines": [
      "class LoadGoogleStory2018(_LoadingStory):",
      "NAME = 'load:search:google:2018'",
      "URL = 'https://www.google.co.uk/search?q=pepper'",
      "TAGS = [story_tags.YEAR_2018]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "ARITHMETIC",
      "ARRAY_ACCESS"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 3928,
    "id": "CVE-2016-1651",
    "commit_id": "83dfeae5a988dbd17f11b409f32ef577be02c152",
    "added_lines": [
      "'pdfium_revision': '3cc180234c14639d408003c8180ba2963f0ea665',"
    ],
    "removed_lines": [
      "'pdfium_revision': '55265016faac358266af280db6c62afa34ce2891',"
    ],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS +Info",
    "score": 5.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS +Info ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds read"
    ]
  },
  {
    "index": 3929,
    "id": "CVE-2016-1654",
    "commit_id": "8355de453bb4014b74b2db5d7ca38c5664d65d83",
    "added_lines": [
      "(ancestors_are_same_site || !base_url.is_empty",
      ": GURL(\"data:,\""
    ],
    "removed_lines": [
      "ancestors_are_same_site",
      ": GURL::EmptyGURL"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 4.3,
    "safe_features": [
      "NO_OP",
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "invalid read"
    ]
  },
  {
    "index": 3930,
    "id": "CVE-2016-1655",
    "commit_id": "815783d185d17e905dfc23cadf240c05c9aff074",
    "added_lines": [
      "crbug.com/873013 [ Android_Webview ] rendering.mobile/yahoo_answers_mobile_2018 [ Skip ]"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 4"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free",
      "does not properly consider"
    ]
  },
  {
    "index": 3934,
    "id": "CVE-2016-1659",
    "commit_id": "ddbe71f6c0b05435a4d3a5c82e394d660e7d6a6d",
    "added_lines": [
      "if browser_options.browser not in ('android-chromium', 'android-chrome'):",
      "raise ValueError",
      "\"%s must use 'android-chromium' or 'android-chrome' browser\" %",
      "builder_name"
    ],
    "removed_lines": [
      "if browser_options.browser != 'android-chromium':",
      "raise ValueError(\"%s must use 'android-chromium' browser\" %",
      "builder_name"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "CONTROL_FLOW",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 3935,
    "id": "CVE-2016-1643",
    "commit_id": "2386a6a49ea992a1e859eb0296c1cc53e5772cdb",
    "added_lines": [
      "if (ShadowRoot* root = element().userAgentShadowRoot",
      "root->removeChildren",
      "createShadowSubtree"
    ],
    "removed_lines": [],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "POINTER_OP",
      "CONTROL_FLOW",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "type confusion",
      "type confusion"
    ]
  },
  {
    "index": 3936,
    "id": "CVE-2016-1644",
    "commit_id": "573594075458f72254d1af91e2da65ac009053e0",
    "added_lines": [
      "<message name=\"IDS_USED_EXISTING_BROWSER\" desc=\"Message printed to console when the program is run a second time, causing a new tab or window to be opened in an existing browser session rather than starting up a new browser.\">",
      "Opening in existing browser session."
    ],
    "removed_lines": [
      "<message name=\"IDS_USED_EXISTING_BROWSER\" desc=\"Message printed to console when the app is ran a second time, causing a new window to show rather than starting up a new browser.\">",
      "Created new window in existing browser session."
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 9.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 4076,
    "id": "CVE-2016-5177",
    "commit_id": "37faa2db833127ac9b6d461d8bc49952e557c743",
    "added_lines": [
      "CONSOLE MESSAGE: line 13:",
      "CONSOLE MESSAGE: line 20: undefined",
      "CONSOLE MESSAGE: line 27: 42"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 4077,
    "id": "CVE-2016-1660",
    "commit_id": "b0aae2d4f29b5a6d59e16260f81d19a8629a7e12",
    "added_lines": [
      "'--assert-gpu-compositing',",
      "'--assert-gpu-compositing',",
      "'--assert-gpu-compositing',",
      "'--assert-gpu-compositing',",
      "'--assert-gpu-compositing',",
      "'--assert-gpu-compositing',"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "out-of-bounds",
      "out-of-bounds write"
    ]
  },
  {
    "index": 4078,
    "id": "CVE-2016-1661",
    "commit_id": "dcd538eb3daf6c52d3ebef0a7afea758f6c657c8",
    "added_lines": [
      "frame_sink_id_, this, viz::ReportFirstSurfaceActivation::kNo",
      "NOTREACHED"
    ],
    "removed_lines": [
      "frame_sink_id_, this, viz::ReportFirstSurfaceActivation::kYes"
    ],
    "cause": [
      "Parsing or Interpretation Errors"
    ],
    "effect": "DoS Mem. Corr.",
    "score": 8.3,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [
      "NO_OP"
    ],
    "vuln": "DoS Mem. Corr. ",
    "summary": [
      "does not ensure that frames satisfy a check for the same renderer process"
    ]
  },
  {
    "index": 4079,
    "id": "CVE-2016-1662",
    "commit_id": "829f713b4c75ddbe7db806b551f1e3b08bb5e95c",
    "added_lines": [
      "OnHeartbeat"
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 10.0,
    "safe_features": [
      "NO_OP"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "unknown vectors",
      "use-after-free"
    ]
  },
  {
    "index": 4080,
    "id": "CVE-2016-1663",
    "commit_id": "2400ef7b592c31c9883fd1cd60bdea0622e69db3",
    "added_lines": [
      "toTransfer = DOMArrayBuffer::create(arrayBuffers[i]->buffer()->data(), arrayBuffers[i]->buffer()->byteLength"
    ],
    "removed_lines": [
      "toTransfer = DOMArrayBuffer::create(arrayBuffers[i]->buffer"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "unsafe_features": [
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 4084,
    "id": "CVE-2016-1666",
    "commit_id": "8b10115b2410b4bde18e094ad9fb8c5056134c87",
    "added_lines": [],
    "removed_lines": [
      "# Relies on net::URLRequestInterceptor.",
      "# https://crbug.com/884782",
      "# Convert the production code using example of how we add/remove",
      "# variations::kClientDataHeader in GoogleURLLoaderThrottle.",
      "-ChromeResourceDispatcherHostDelegateMirrorBrowserTest.MirrorRequestHeader"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 7.5,
    "safe_features": [],
    "unsafe_features": [
      "NO_OP",
      "ARITHMETIC",
      "ARITHMETIC",
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  },
  {
    "index": 4414,
    "id": "CVE-2016-1679",
    "commit_id": "b5bdf3778209179111c9f865af00940e74aa20e7",
    "added_lines": [
      "int32_t GetInt(v8::Local<v8::Object> value, const std::string& key)",
      "v8::Local<v8::Int32> temp =",
      "value->Get(v8::String::NewFromUtf8(isolate_, key.c_str",
      ".As<v8::Int32>",
      "if (temp.IsEmpty())",
      "ADD_FAILURE",
      "return -1",
      "return temp->Value",
      "int32_t GetInt(v8::Local<v8::Object> value, uint32_t index)",
      "v8::Local<v8::Int32> temp = value->Get(index).As<v8::Int32>",
      "if (temp.IsEmpty())",
      "ADD_FAILURE",
      "return -1",
      "return temp->Value",
      "EXPECT_EQ(\"foo\", GetString(copy, \"foo\"",
      "EXPECT_EQ(\"foo\", GetString(copy, 0",
      "TEST_F(V8ValueConverterImplTest, ObjectPrototypeSetter)",
      "std::unique_ptr<base::Value> original =",
      "base::test::ParseJson(\"{ \\\"foo\\\": \\\"good value\\\" }\"",
      "v8::HandleScope handle_scope(isolate_",
      "v8::Local<v8::Context> context =",
      "v8::Local<v8::Context>::New(isolate_, context_",
      "v8::Context::Scope context_scope(context",
      "v8::MicrotasksScope microtasks(isolate_,",
      "v8::MicrotasksScope::kDoNotRunMicrotasks",
      "const char* source =",
      "\"var result = { getters: 0, setters: 0 };\"",
      "\"Object.defineProperty(Object.prototype, 'foo', {\"",
      "\"  get() { ++result.getters; return 'bogus'; },\"",
      "\"  set() { ++result.setters; },\"",
      "\"});\"",
      "\"result;\"",
      "const char* source_sanity =",
      "\"({}).foo = 'Trigger setter';\"",
      "\"({}).foo;\"",
      "v8::Local<v8::Script> script",
      "v8::Script::Compile(v8::String::NewFromUtf8(isolate_, source",
      "v8::Local<v8::Object> result = script->Run().As<v8::Object>",
      "ASSERT_FALSE(result.IsEmpty",
      "v8::Script::Compile(v8::String::NewFromUtf8(isolate_, source_sanity))->Run",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "V8ValueConverterImpl converter",
      "v8::Local<v8::Object> converted =",
      "converter.ToV8Value(original.get(), context).As<v8::Object>",
      "EXPECT_FALSE(converted.IsEmpty",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "EXPECT_EQ(1u, converted->GetPropertyNames()->Length",
      "EXPECT_EQ(\"good value\", GetString(converted, \"foo\"",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "base::DictionaryValue missing_key_dict",
      "missing_key_dict.SetString(\"otherkey\", \"hello\"",
      "v8::Local<v8::Object> converted2 =",
      "converter.ToV8Value(&missing_key_dict, context).As<v8::Object>",
      "EXPECT_FALSE(converted2.IsEmpty",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "EXPECT_EQ(1u, converted2->GetPropertyNames()->Length",
      "EXPECT_EQ(\"hello\", GetString(converted2, \"otherkey\"",
      "EXPECT_EQ(\"bogus\", GetString(converted2, \"foo\"",
      "EXPECT_EQ(2, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "TEST_F(V8ValueConverterImplTest, ArrayPrototypeSetter)",
      "std::unique_ptr<base::Value> original =",
      "base::test::ParseJson(\"[100, 200, 300]\"",
      "v8::HandleScope handle_scope(isolate_",
      "v8::Local<v8::Context> context =",
      "v8::Local<v8::Context>::New(isolate_, context_",
      "v8::Context::Scope context_scope(context",
      "v8::MicrotasksScope microtasks(isolate_,",
      "v8::MicrotasksScope::kDoNotRunMicrotasks",
      "const char* source =",
      "\"var result = { getters: 0, setters: 0 };\"",
      "\"Object.defineProperty(Array.prototype, '1', {\"",
      "\"  get() { ++result.getters; return 1337; },\"",
      "\"  set() { ++result.setters; },\"",
      "\"});\"",
      "\"result;\"",
      "const char* source_sanity =",
      "\"[][1] = 'Trigger setter';\"",
      "\"[][1];\"",
      "v8::Local<v8::Script> script",
      "v8::Script::Compile(v8::String::NewFromUtf8(isolate_, source",
      "v8::Local<v8::Object> result = script->Run().As<v8::Object>",
      "ASSERT_FALSE(result.IsEmpty",
      "v8::Script::Compile(v8::String::NewFromUtf8(isolate_, source_sanity))->Run",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "V8ValueConverterImpl converter",
      "v8::Local<v8::Array> converted =",
      "converter.ToV8Value(original.get(), context).As<v8::Array>",
      "EXPECT_FALSE(converted.IsEmpty",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "EXPECT_EQ(3u, converted->Length",
      "EXPECT_EQ(100, GetInt(converted, 0",
      "EXPECT_EQ(200, GetInt(converted, 1",
      "EXPECT_EQ(300, GetInt(converted, 2",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "base::ListValue one_item_list",
      "one_item_list.Append(new base::FundamentalValue(123456",
      "v8::Local<v8::Array> converted2 =",
      "converter.ToV8Value(&one_item_list, context).As<v8::Array>",
      "EXPECT_FALSE(converted2.IsEmpty",
      "EXPECT_EQ(1, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\"",
      "EXPECT_EQ(1u, converted2->Length",
      "EXPECT_EQ(123456, GetInt(converted2, 0",
      "EXPECT_EQ(1337, GetInt(converted2, 1",
      "EXPECT_EQ(2, GetInt(result, \"getters\"",
      "EXPECT_EQ(1, GetInt(result, \"setters\""
    ],
    "removed_lines": [],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "CONTROL_FLOW",
      "RETURN",
      "ARITHMETIC",
      "RETURN",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "POINTER_OP",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "ARITHMETIC",
      "POINTER_OP",
      "ARITHMETIC",
      "ARRAY_ACCESS",
      "ARRAY_ACCESS",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "ARITHMETIC",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL",
      "FUNC_CALL"
    ],
    "unsafe_features": [],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 4425,
    "id": "CVE-2016-1690",
    "commit_id": "9de81f45c73a8f9f215fc234a6adfe087b0eab74",
    "added_lines": [],
    "removed_lines": [
      "#include \"base/memory/weak_ptr.h\"",
      "base::WeakPtrFactory<PasswordAutofillAgent> weak_ptr_factory_"
    ],
    "cause": [
      "Memory Management"
    ],
    "effect": "DoS",
    "score": 5.1,
    "safe_features": [],
    "unsafe_features": [
      "ARITHMETIC"
    ],
    "vuln": "DoS ",
    "summary": [
      "use-after-free"
    ]
  },
  {
    "index": 4431,
    "id": "CVE-2016-1695",
    "commit_id": "b65d200b9482194cb70fa3d534feace51644c45f",
    "added_lines": [
      "TEST_F('ChromeVoxLiveRegionsUnitTest', 'DISABLED_ModifyStatusLiveRegion', function()"
    ],
    "removed_lines": [
      "TEST_F('ChromeVoxLiveRegionsUnitTest', 'ModifyStatusLiveRegion', function()"
    ],
    "cause": [
      "Uncategorized Cluster 3",
      "Uncategorized Cluster 3"
    ],
    "effect": "DoS",
    "score": 6.8,
    "safe_features": [
      "FUNC_CALL"
    ],
    "unsafe_features": [
      "FUNC_CALL"
    ],
    "vuln": "DoS ",
    "summary": [
      "Multiple unspecified vulnerabilities",
      "unknown vectors"
    ]
  }
]